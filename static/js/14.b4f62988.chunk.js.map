{"version":3,"sources":["containers/HomePage/messages.js","containers/RetailerDashboardPage/constants.js","containers/RetailerDashboardPage/reducer.js","containers/RetailerDashboardPage/saga.js","containers/RetailerDashboardPage/actions.js","containers/RetailerDashboardPage/RetailerDashboardStyle.js","utils/numToWords.js","containers/RetailerDashboardPage/FeedItem.js","containers/RetailerDashboardPage/selectors.js","containers/RetailerDashboardPage/index.js","containers/ProducerDashboardPage/constants.js","containers/ProducerDashboardPage/reducer.js","containers/ProducerDashboardPage/saga.js","containers/ProducerDashboardPage/actions.js","containers/ProducerDashboardPage/ProducerDashboardStyle.js","containers/ProducerDashboardPage/LineChart.js","containers/ProducerDashboardPage/selectors.js","containers/ProducerDashboardPage/index.js","containers/HomePage/HomepageStyle.js","containers/HomePage/index.js","utils/calcOrderTotal.js"],"names":["defineMessages","header","id","defaultMessage","FETCH_PRODUCER_FEED","FETCH_PRODUCER_FEED_SUCCESS","FETCH_PRODUCER_FEED_ERROR","initialState","fetchingProducerFeed","fetchingProducerFeedError","producerFeed","RetailerDashboardPageReducer","state","action","produce","draftState","type","followedProducers","nearbyProducers","withProducerProps","map","producer","stock","blog","producerItems","index","producerItem","businessName","producerId","businessId","avatarSource","flat","sort","a","b","createdAt","groupedBeers","reduce","groups","groupsObj","price","display","date","firstDisplayed","split","push","groupedBeersArray","Object","keys","dateSorted","filter","console","log","fetchProducerFeed","fetchProducerFeedSaga","rootSaga","call","getPrivateRoute","privateRoute","fetchProducerFeedData","get","response","data","put","error","debounce","spawn","RetailerDashboardStyle","styled","div","th","dg","tn","tw","numToWords","number","s","toString","replace","parseFloat","x","indexOf","length","n","str","sk","i","Number","y","mapStateToProps","createStructuredSelector","producerFollowing","makeSelectProducerFollowing","withConnect","connect","dispatch","producerFollow","producerSub","followProducer","compose","userProfile","useState","followButtonClicked","setFollowButtonClicked","useEffect","item","itemGroup","handleFollowClick","sub","blogData","Feed","Event","key","_id","Label","src","alt","Content","Summary","User","as","to","Date","timeAgo","format","parse","Extra","text","Segment","Header","title","className","dangerouslySetInnerHTML","__html","stateToHTML","EditorState","createWithContent","convertFromRaw","JSON","getCurrentContent","name","Math","floor","abv","match","style","PACK_SIZES","packSize","imageSource","images","Image","size","bordered","centered","circular","description","producerSubItem","Fragment","Divider","role","flexDirection","marginBottom","paddingTop","intro","Button","maxWidth","maxHeight","alignSelf","loading","positive","followedProducer","includes","icon","content","onClick","selectRetailerDashboardPageDomain","RetailerDashboardPage","makeSelectUser","createSelector","substate","producerFeedFetching","producerFeedFetch","useInjectReducer","reducer","useInjectSaga","saga","PageWrapper","Dimmer","inverted","active","page","Loader","basic","random","FETCH_PRODUCER_DASHBOARD","FETCH_PRODUCER_DASHBOARD_SUCCESS","FETCH_PRODUCER_DASHBOARD_ERROR","fetchingProducerDashboard","fetchingProducerDashboardError","dashboardOrders","dashboardRetailers","ProducerDashboardPageReducer","producerDashboard","orders","merge","businesses","business","pick","retailers","fetchProducerDashboard","fetchProducerDashboardSaga","fetchOrderData","orderResponse","fetchRetailersData","retailersResponse","ProducerDashboardStyle","LineChart","currentDateRange","previousDateRange","period","step","status","dates","setDates","values","setValues","previousDates","setPreviousDates","previousValues","setPreviousValues","periodString","stepString","today","moment","startDate","subtract","add","endDate","mapDatesToTotals","datesArr","statusString","stepTotal","forEach","orderItem","isSame","calcOrderTotal","items","mappedDates","mappedPrevDates","dataObj","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","xAxisID","yAxisID","options","legend","tooltips","callbacks","tooltipItems","value","scales","yAxes","ticks","maxTicksLimit","padding","suggestedMax","max","callback","gridLines","drawBorder","drawTicks","xAxes","time","isoWeekday","unit","tooltipFormat","day","week","month","quarter","displayFormats","zeroLineWidth","intersect","height","selectProducerDashboardPageDomain","ProducerDashboardPage","dashBoardRetailers","producerDashboardFetching","producerDashboardFetch","salesPeriod","setSalesPeriod","periodSales","setPeriodSales","periodSalesDiff","setPeriodSalesDiff","periodSalesAverageDiff","setPeriodSalesAverageDiff","periodSalesOrderCountDiff","setPeriodSalesOrderCountDiff","periodSalesItemCountDiff","setPeriodSalesItemCountDiff","periodSalesAverageItemsDiff","setPeriodSalesAverageItemsDiff","topCustomers","setTopCustomers","periodSalesCalc","ordersArr","previous","total","orderCount","itemCount","order","isBetween","isAfter","orderQuant","average","averageItems","currentPeriodData","previousPeriodData","customerList","customers","customersObj","location","salesTotal","topCustomersArr","topItems","useMemo","itemList","itemsObj","topItemsArr","isNaN","Grid","columns","verticalAlign","Column","width","textAlign","Group","dividing","toFixed","abs","PRODUCER_CHART_TIME_PERIODS","customer","Row","marginRight","avatar","Map","center","zoom","zoomControl","TileLayer","url","MAP_TILE_PROVIDER_URL","DistributionAreaDisplay","distributionAreas","MapMarker","customerObj","Icon","marginTop","color","HomepageStyle","isAuthenticated","useAuth0","user","messages","Message","labelPosition","orderItems","acc","val","orderChange"],"mappings":"kPASeA,2BAAe,CAC5BC,OAAQ,CACNC,GAAG,GAAD,OAJe,0BAIf,WACFC,eAAgB,0B,yFCDPC,EAAsB,sDACtBC,EAA8B,8DAC9BC,EAA4B,4DCN5BC,EAAe,CAC1BC,sBAAsB,EACtBC,2BAA2B,EAC3BC,cAAc,GA6DDC,EAzDsB,eAACC,EAAD,uDAASL,EAAcM,EAAvB,8CAAkCC,YAAQF,GAAO,SAACG,GACrF,OAAQF,EAAOG,MACb,QACE,MACF,KAAKZ,EACHW,EAAWN,2BAA4B,EACvCM,EAAWP,sBAAuB,EAClC,MACF,KAAKH,EACH,GAAIQ,EAAOH,aAAc,CAAC,IAAD,EACwBG,EAAOH,aAA9CO,EADe,EACfA,kBAAmBC,EADJ,EACIA,gBAGrBC,EAFeF,EAAkBG,KAAI,SAACC,GAAD,4BAAkBA,EAASC,OAA3B,YAAqCD,EAASE,UAGtFH,KAAI,SAACI,EAAeC,GAAhB,OAA0BD,EAC5BJ,KAAI,SAACM,GAAD,oBACHL,SAAUJ,EAAkBQ,GAAOE,aAAcC,WAAYX,EAAkBQ,GAAOI,WAAYC,aAAcb,EAAkBQ,GAAOK,cAAiBJ,SAE7JK,OAEAC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,UAAYD,EAAEC,WAAc,EAAMF,EAAEE,UAAYD,EAAEC,UAAa,EAAI,KAClFC,EAAejB,EAAkBkB,QAAO,SAACC,EAAQZ,GACrD,IAAMa,EAAYD,EAClB,GAAIZ,EAAac,OAAkC,SAAzBd,EAAae,QAAoB,CACzD,IAAMC,EAAOhB,EAAaiB,eAAeC,MAAM,KAAK,GAC/CN,EAAO,GAAD,OAAII,EAAJ,YAAYhB,EAAaE,eAClCW,EAAU,GAAD,OAAIG,EAAJ,YAAYhB,EAAaE,aAAgB,IAEpDW,EAAU,GAAD,OAAIG,EAAJ,YAAYhB,EAAaE,aAAciB,KAAKnB,GAEvD,OAAOa,IACN,IACGO,EAAoBC,OAAOC,KAAKZ,GAAchB,KAAI,SAACsB,GAAD,MAAW,CACjEP,UAAWO,EAAKE,MAAM,KAAK,GAC3BpB,cAAeY,EAAaM,OAIxBO,EADwB,sBAAO9B,EAAkB+B,QAAO,SAACxB,GAAD,OAAmBA,EAAac,UAAhE,YAA2EM,GAA3E,YAAiG5B,IACnFc,MAAK,SAACC,EAAGC,GACnD,OAAID,EAAEE,UAAYD,EAAEC,WAAmB,EACnCF,EAAEE,UAAYD,EAAEC,UAAkB,EAC/B,KAETgB,QAAQC,IAAI,SAAUH,GAEtBlC,EAAWL,aAAeuC,EAC1BlC,EAAWN,2BAA4B,EAEzCM,EAAWP,sBAAuB,EAClC,MACF,KAAKF,EACHS,EAAWN,2BAA4B,EACvCM,EAAWP,sBAAuB,O,4CCzD9B6C,G,WAgBAC,G,WAIeC,GApBzB,SAAUF,IAAV,2EAEyB,OAFzB,kBAE+BG,YAAKC,KAFpC,OAIqB,OAFXC,EAFV,OAGUC,EAAwB,kBAAMD,EAAaE,IAAI,wBAHzD,SAI2BJ,YAAKG,GAJhC,UAIUE,EAJV,OAMIV,QAAQC,IAAI,0BAA2BS,EAASC,OAE5CD,EAASC,KARjB,iBASM,OATN,UASYC,aCFwBrD,EDEAmD,EAASC,KCFS,CACpD9C,KAAMX,EACNK,kBDTF,gCAYI,OAZJ,oCAYUqD,aCA6BC,EDAF,EAAD,GCAc,CAChDhD,KAAMV,EACN0D,WDdF,kCCYsC,IAACA,EALHtD,IDPpC,iBAgBA,SAAU4C,IAAV,iEACE,OADF,SACQW,YAAS,IAAM7D,EAAqBiD,GAD5C,uCAIe,SAAUE,IAAV,iEACb,OADa,SACPW,YAAMZ,GADC,uC,irBE3Bf,IAyCea,EAzCgBC,IAAOC,IAAV,K,gECKtBC,EAAK,CAAC,GAAI,WAAY,UAAW,UAAW,YAI5CC,EAAK,CAAC,OAAQ,MAAO,MAAO,QAAS,OAAQ,OAAQ,MAAO,QAAS,QAAS,QAC9EC,GAAK,CAAC,MAAO,SAAU,SAAU,WAAY,WAAY,UAAW,UAAW,YAAa,WAAY,YACxGC,GAAK,CAAC,SAAU,SAAU,QAAS,QAAS,QAAS,UAAW,SAAU,UA0CjEC,GAxCI,SAACC,GAClB,IAAIC,EAAID,EAIR,IAFAC,GADAA,EAAIA,EAAEC,YACAC,QAAQ,QAAS,MAEdC,WAAWH,GAAI,MAAO,eAC/B,IAAII,EAAIJ,EAAEK,QAAQ,KAElB,IADW,IAAPD,IAAUA,EAAIJ,EAAEM,QAChBF,EAAI,GAAI,MAAO,UAInB,IAHA,IAAMG,EAAIP,EAAEhC,MAAM,IACdwC,EAAM,GACNC,EAAK,EACAC,EAAI,EAAGA,EAAIN,EAAGM,GAAK,GACrBN,EAAIM,GAAK,IAAM,EACL,MAATH,EAAEG,IACJF,GAAG,UAAOZ,GAAGe,OAAOJ,EAAEG,EAAI,KAAvB,KACHA,GAAK,EACLD,EAAK,GACa,IAATF,EAAEG,KACXF,GAAG,UAAOX,GAAGU,EAAEG,GAAK,GAAjB,KACHD,EAAK,GAEW,IAATF,EAAEG,KACXF,GAAG,UAAOb,EAAGY,EAAEG,IAAZ,MACEN,EAAIM,GAAK,IAAM,IAAGF,GAAO,YAC9BC,EAAK,IAEFL,EAAIM,GAAK,IAAM,IACdD,IAAID,GAAG,UAAOd,GAAIU,EAAIM,EAAI,GAAK,GAAxB,MACXD,EAAK,GAGT,GAAIL,IAAMJ,EAAEM,OAAQ,CAClB,IAAMM,EAAIZ,EAAEM,OACZE,GAAO,SACP,IAAK,IAAIE,EAAIN,EAAI,EAAGM,EAAIE,EAAGF,GAAK,EAAKF,GAAG,UAAOb,EAAGY,EAAEG,IAAZ,KAE1C,OAAOF,EAAIN,QAAQ,OAAQ,M,kBC2JvBW,GAAkBC,YAAyB,CAC/CC,kBAAmBC,gBASrB,IAAMC,GAAcC,YAClBL,IAPF,SAA4BM,GAC1B,MAAO,CACLC,eAAgB,SAACC,GAAD,OAAiBF,EAASG,aAAeD,SAS9CE,eAAQN,GAARM,EA5ME,SAAC,GAEX,IADLzE,EACI,EADJA,aAAc0E,EACV,EADUA,YAAaJ,EACvB,EADuBA,eAAgBL,EACvC,EADuCA,kBACvC,EACkDU,oBAAS,GAD3D,mBACGC,EADH,KACwBC,EADxB,KAGJC,qBAAU,WACHb,GACHY,GAAuB,KAExB,CAACZ,IAEJ,IAgGuBc,EA3FKC,EAsHDrF,EA3HrBsF,EAAiB,uCAAG,sBAAA1E,EAAA,sDACxB+D,EAAetE,EAAakF,KAC5BL,GAAuB,GAFC,2CAAH,qDAyJvB,OAAI7E,EAAamF,UAzDMJ,EA0DA/E,EAzDrB,kBAACoF,EAAA,EAAKC,MAAN,CAAYC,IAAKP,EAAKQ,KACpB,kBAACH,EAAA,EAAKI,MAAN,KACE,yBAAKC,IAAKV,EAAK3E,cAAgB,oCAAqCsF,IAAI,qBAE1E,kBAACN,EAAA,EAAKO,QAAN,KACE,kBAACP,EAAA,EAAKQ,QAAN,KACE,kBAACR,EAAA,EAAKS,KAAN,CAAWC,GAAG,KAAI,kBAAC,IAAD,CAAMC,GAAE,mBAAchB,EAAK7E,aAAe6E,EAAKpF,WAChE,IAFH,mBAIE,kBAACyF,EAAA,EAAKY,KAAN,KAAYC,IAAQC,OAAOF,KAAKG,MAAMpB,EAAKtE,cAE7C,kBAAC2E,EAAA,EAAKgB,MAAN,CAAYC,MAAI,GACd,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAQ,2BAAIxB,EAAKyB,QACjB,yBAAKC,UAAU,YAAYC,wBAAyB,CAAEC,OAAQC,YAAYC,cAAYC,kBAAkBC,yBAAeC,KAAKb,MAAMpB,EAAKI,YAAY8B,6BA6CzJjH,EAAaF,eAAiBE,EAAaF,cAAc0D,OArJpB,KAFbwB,EAwJAhF,GAtJZF,cAAc0D,OAExB,kBAAC4B,EAAA,EAAKC,MAAN,CAAYC,IAAG,UAAKN,EAAUvE,WAAf,OAA2BuE,EAAUlF,cAAc,GAAGI,aACnE,kBAACkF,EAAA,EAAKI,MAAN,KACE,yBAAKC,IAAKT,EAAUlF,cAAc,GAAGM,cAAgB,oCAAqCsF,IAAI,qBAEhG,kBAACN,EAAA,EAAKO,QAAN,KACE,kBAACP,EAAA,EAAKQ,QAAN,KACE,kBAACR,EAAA,EAAKS,KAAN,CAAWC,GAAG,KAAI,kBAAC,IAAD,CAAMC,GAAE,mBAAcf,EAAUlF,cAAc,GAAGI,aAAe8E,EAAUlF,cAAc,GAAGH,WAC5G,IAFH,mBAIE,kBAACyF,EAAA,EAAKY,KAAN,KAAYC,IAAQC,OAAOF,KAAKG,MAAMnB,EAAUlF,cAAc,GAAGW,cAEnE,kBAAC6F,EAAA,EAAD,KACE,kBAAClB,EAAA,EAAKgB,MAAN,CAAYC,MAAI,GACbrB,EAAUlF,cAAc,GAAGoH,KAC3B,MACAlE,GAAWmE,KAAKC,MAAMpC,EAAUlF,cAAc,GAAGuH,MAAMC,MAlBjD,mBAkBqE,OAAS,MACpFtC,EAAUlF,cAAc,GAAGuH,IAC3B,KACArC,EAAUlF,cAAc,GAAGyH,MAC3B,IAPH,KASG,IACAC,KAAWxC,EAAUlF,cAAc,GAAG2H,UAVzC,KAaCzC,EAAUlF,cAAc,GAAG4H,aAC1B,kBAACtC,EAAA,EAAKgB,MAAN,CAAYuB,QAAM,GAChB,kBAACC,EAAA,EAAD,CAAOnB,UAAU,gBAAgBoB,KAAK,OAAOC,UAAQ,EAACC,UAAQ,EAACC,UAAQ,EAACvC,IAAKT,EAAUlF,cAAc,GAAG4H,YAAahC,IAAI,YACzH,2BAAIV,EAAUlF,cAAc,GAAGmI,iBAS3C,kBAAC7C,EAAA,EAAKC,MAAN,CAAYC,IAAG,UAAKN,EAAUvE,WAAf,OAA2BuE,EAAUlF,cAAc,GAAGI,aACnE,kBAACkF,EAAA,EAAKI,MAAN,KACE,yBAAKC,IAAKT,EAAUlF,cAAc,GAAGM,cAAgB,oCAAqCsF,IAAI,qBAEhG,kBAACN,EAAA,EAAKO,QAAN,KACE,kBAACP,EAAA,EAAKQ,QAAN,KACE,kBAACR,EAAA,EAAKS,KAAN,CAAWC,GAAG,KAAI,kBAAC,IAAD,CAAMC,GAAE,mBAAcf,EAAUlF,cAAc,GAAGI,aAAe8E,EAAUlF,cAAc,GAAGH,WAC5G,IAFH,QAIG,IACAqF,EAAUlF,cAAc0D,OACxB,IANH,YAQE,kBAAC4B,EAAA,EAAKY,KAAN,KAAYC,IAAQC,OAAOF,KAAKG,MAAMnB,EAAUlF,cAAc,GAAGW,cAEnE,kBAAC6F,EAAA,EAAD,KACGtB,EAAUlF,cAAcJ,KAAI,SAACwI,EAAiBnI,GAAlB,OAC3B,kBAAC,IAAMoI,SAAP,CAAgB7C,IAAK4C,EAAgB3C,KACnC,kBAACH,EAAA,EAAKgB,MAAN,CAAYC,MAAI,GACb6B,EAAgBhB,KAChB,MACAlE,GAAWmE,KAAKC,MAAMc,EAAgBb,MAAMC,MA7DxC,mBA6D4D,OAAS,MACzEY,EAAgBb,IAChB,KACAa,EAAgBX,MAChB,IAPH,KASG,IACAC,KAAWU,EAAgBT,UAV9B,KAcES,EAAgBR,aACd,kBAACtC,EAAA,EAAKgB,MAAN,CAAYuB,QAAM,GAChB,kBAACC,EAAA,EAAD,CAAOnB,UAAU,gBAAgBoB,KAAK,OAAOC,UAAQ,EAACC,UAAQ,EAACC,UAAQ,EAACvC,IAAKyC,EAAgBR,YAAahC,IAAI,YAC9G,2BAAIwC,EAAgBD,cAIzBlI,IAAUiF,EAAUlF,cAAc0D,OAAS,GAC1C,kBAAC4E,EAAA,EAAD,aAyEZpI,EAAaqI,MApCU1I,EAqCAK,EApCzB,kBAACoF,EAAA,EAAKC,MAAN,CAAYC,IAAK3F,EAASQ,YACxB,kBAACiF,EAAA,EAAKI,MAAN,KACE,yBAAKC,IAAI,wBAAwBC,IAAI,qBAEvC,kBAACN,EAAA,EAAKO,QAAN,KACE,kBAACP,EAAA,EAAKQ,QAAN,KACE,kBAACR,EAAA,EAAKS,KAAN,CAAWC,GAAG,OAAM,kBAAC,IAAD,CAAMC,GAAE,mBAAcpG,EAASQ,aAAeR,EAASM,eAC1E,IAFH,uDAIE,kBAACmF,EAAA,EAAKY,KAAN,KAAYC,IAAQC,OAAOF,KAAKG,MAAMxG,EAASc,cAEjD,kBAAC6F,EAAA,EAAD,KACE,kBAAClB,EAAA,EAAKgB,MAAN,CAAYuB,QAAM,EAACJ,MAAO,CAAEe,cAAe,WACzC,yBAAKf,MAAO,CAAExG,QAAS,SACrB,kBAAC6G,EAAA,EAAD,CAAOC,KAAK,QAAQE,UAAQ,EAACtC,IAAK9F,EAASS,cAAgB,oCAAqCsF,IAAI,YACpG,uBAAG6B,MAAO,CAAEgB,aAAc,IAAKC,WAAY,MAAQ7I,EAAS8I,QAE9D,kBAACC,EAAA,EAAD,CAAQnB,MAAO,CAAEoB,SAAU,QAASC,UAAW,OAAQC,UAAW,YAAchB,KAAK,OAAOiB,QAASlE,EAAqBmE,SAAUrE,EAAYnF,kBAAkBG,KAAI,SAACsJ,GAAD,OAAsBA,EAAiB9D,OAAK+D,SAAStJ,EAASuF,KAAMgE,KAAMxE,EAAYnF,kBAAkBG,KAAI,SAACsJ,GAAD,OAAsBA,EAAiB9D,OAAK+D,SAAStJ,EAASuF,KAAO,QAAU,OAAQiE,QAASzE,EAAYnF,kBAAkBG,KAAI,SAACsJ,GAAD,OAAsBA,EAAiB9D,OAAK+D,SAAStJ,EAASuF,KAAO,YAAc,SAAUkE,QAASnE,SAqB7f,QCxLHoE,GAAoC,SAACnK,GAAD,OAAWA,EAAMoK,uBAAyBzK,GC8D9EkF,GAAkBC,YAAyB,CAC/CU,YAAa6E,cACbvK,aD1DmCwK,YACnCH,IACA,SAACI,GAAD,OAAcA,EAASzK,gBCyDvB0K,qBDtD2CF,YAC3CH,IACA,SAACI,GAAD,OAAcA,EAAS3K,0BC6DzB,IAAMqF,GAAcC,YAClBL,IAPF,SAA4BM,GAC1B,MAAO,CACLsF,kBAAmB,kBAAMtF,ELjEW,CACtC/E,KAAMZ,SKyEO+F,eACbN,GADaM,EAhEe,SAAC,GAKxB,IAJLC,EAII,EAJJA,YACAiF,EAGI,EAHJA,kBACA3K,EAEI,EAFJA,aACA0K,EACI,EADJA,qBASA,OAPAE,YAAiB,CAAEtE,IAAK,wBAAyBuE,YACjDC,YAAc,CAAExE,IAAK,wBAAyByE,SAE9CjF,qBAAU,WACR6E,MACC,CAACA,IAEC3K,EAKH,kBAACgL,EAAA,EAAD,KACGN,GACC,kBAACO,EAAA,EAAD,CAAQC,UAAQ,EAACC,QAAM,EAACC,MAAI,GAC1B,kBAACC,EAAA,EAAD,CAAQH,UAAQ,KAGpB,kBAAC5D,EAAA,EAAD,CAASgE,OAAK,EAAC7D,UAAU,mBACvB,kBAACF,EAAA,EAAD,CAAQT,GAAG,MAAX,WACA,kBAAC,EAAD,KACE,kBAACV,EAAA,EAAD,CAAMyC,KAAK,SACR7I,EAAaU,KAAI,SAACM,GAAD,OAChB,kBAAC,IAAMmI,SAAP,CAAgB7C,IAAG,2BAAsB6B,KAAKoD,WAC5C,kBAAC,GAAD,CAAUvK,aAAcA,EAAc0E,YAAaA,YAhBxD,Q,qECzBE8F,GAA2B,2DAC3BC,GAAmC,mEACnCC,GAAiC,iECLjC7L,GAAe,CAC1B8L,2BAA2B,EAC3BC,gCAAgC,EAChCC,iBAAiB,EACjBC,oBAAoB,GAiCPC,GA7BsB,eAAC7L,EAAD,uDAASL,GAAcM,EAAvB,8CAAkCC,YAAQF,GAAO,SAACG,GACrF,OAAQF,EAAOG,MACb,QACE,MACF,KAAKkL,GACHnL,EAAWuL,gCAAiC,EAC5CvL,EAAWsL,2BAA4B,EACvC,MACF,KAAKF,GACH,GAAItL,EAAO6L,kBAAmB,CAC5B,IAAMC,EAASC,iBAAM/L,EAAO6L,kBAAkBC,OAAOA,OAAQ9L,EAAO6L,kBAAkBC,OAAOE,WAAWzL,KAAI,SAAC0L,GAAD,OAAcC,gBAAKD,EAAU,CAAC,eAAgB,aAAc,eAAgB,iBAChLE,EAAcnM,EAAO6L,kBAAkBM,UAAvCA,UACRjM,EAAWwL,gBAAkBI,EAC7B5L,EAAWyL,mBAAqBQ,EAChCjM,EAAWuL,gCAAiC,EAE9CvL,EAAWsL,2BAA4B,EACvC,MACF,KAAKD,GACCvL,EAAOmD,MACTjD,EAAWuL,+BAAiCzL,EAAOmD,MAEnDjD,EAAWuL,gCAAiC,EAE9CvL,EAAWsL,2BAA4B,O,YC/BnCY,I,YAmBAC,I,YAIe3J,IAvBzB,SAAU0J,KAAV,+EAEyB,OAFzB,kBAE+BzJ,YAAKC,KAFpC,OAI0B,OAFhBC,EAFV,OAGUyJ,EAAiB,kBAAMzJ,EAAaE,IAAI,YAHlD,SAIgCJ,YAAK2J,GAJrC,OAO8B,OAHpBC,EAJV,OAMUC,EAAqB,kBAAM3J,EAAaE,IAAI,wBANtD,UAOoCJ,YAAK6J,GAPzC,WAOUC,EAPV,OASInK,QAAQC,IAAI,sCAERgK,EAActJ,OAAQwJ,EAAkBxJ,KAXhD,iBAYM,OAZN,UAYYC,aCL6B2I,EDKA,CAAEC,OAAQS,EAActJ,KAAMkJ,UAAWM,EAAkBxJ,MCLpC,CAC9D9C,KAAMmL,GACNO,uBDTF,gCAeI,OAfJ,oCAeU3I,aCHkCC,EDGF,EAAD,GCHc,CACrDhD,KAAMoL,GACNpI,WDdF,kCCY2C,IAACA,EALH0I,IDPzC,kBAmBA,SAAUQ,KAAV,iEACE,OADF,SACQjJ,YAAS,IAAMiI,GAA0Be,IADjD,wCAIe,SAAU1J,KAAV,iEACb,OADa,SACPW,YAAMgJ,IADC,wC,8rCE9Bf,IAmDeK,GAnDgBnJ,IAAOC,IAAV,M,qBC+LbmJ,GA1LG,SAAC,GAEZ,IAAD,WAOMC,GAPN,WAiBMC,GAlBV5J,EACI,EADJA,KAAM6J,EACF,EADEA,OAAQC,EACV,EADUA,KAAMC,EAChB,EADgBA,OAChB,EACsBxH,mBAAS,IAD/B,mBACGyH,EADH,KACUC,EADV,OAEwB1H,mBAAS,IAFjC,mBAEG2H,EAFH,KAEWC,EAFX,OAIsC5H,mBAAS,IAJ/C,mBAIG6H,EAJH,KAIkBC,EAJlB,OAKwC9H,mBAAS,IALjD,mBAKG+H,EALH,KAKmBC,EALnB,KAOJ,SAAUZ,EAAiBa,EAAcC,GAAzC,yEACQC,EAAQC,OACRC,EAAYD,OAASE,SAAS,EAAGL,GAAcM,IAAI,EAAGL,GAF9D,YAISG,GAAaF,GAJtB,gBAKI,OALJ,SAKUE,EAAU9G,SALpB,OAMI8G,EAAUE,IAAI,EAAGL,GANrB,sDAUA,SAAUb,EAAkBY,EAAcC,GAA1C,yEACQM,EAAUJ,OAASE,SAAS,EAAGL,GAAcK,SAAS,EAAG,OACzDD,EAAYD,OAASE,SAAS,EAAGL,GAAcM,IAAI,EAAGL,GAAYI,SAAS,EAAG,OAFtF,YAISD,GAAaG,GAJtB,gBAKI,OALJ,SAKUH,EAAU9G,SALpB,OAMI8G,EAAUE,IAAI,EAAGL,GANrB,sDAUA,IAAMO,EAAmB,SAACC,EAAUpC,EAAQqC,EAAcT,GAAjC,OAAgDQ,EAAS3N,KAAI,SAACsB,GACrF,IAAIuM,EAAY,EAMhB,OALAtC,EAAOuC,SAAQ,SAACC,GACVA,EAAUtB,SAAWmB,GAAgBP,KAAOU,EAAUhN,WAAWiN,OAAO1M,EAAM6L,KAChFU,GAAaI,aAAeF,EAAUG,WAGnCL,MAwBT,GArBAzI,qBAAU,WACJmH,GAAUC,IACZG,EAAS,YAAIN,EAAiBE,EAAQC,KACtCO,EAAiB,YAAIT,EAAkBC,EAAQC,QAEhD,CAACD,EAAQC,IAEZpH,qBAAU,WACR,GAAI1C,GAAQA,EAAKoB,QAAU4I,EAAM5I,OAAQ,CACvC,IAAMqK,EAAcT,EAAiBhB,EAAOhK,EAAM+J,EAAQD,GAC1DK,EAAUsB,GACV,IAAMC,EAAkBV,EACtBZ,EACApK,EACA+J,EACAD,GAEFS,EAAkBmB,MAEnB,CAAC1L,EAAMgK,EAAOI,EAAeL,EAAQD,KAEnCI,EAAO9I,SAAW4I,EAAM5I,OAC3B,OAAO,KAGT,IAAMuK,EAAU,CACdC,OAAQ5B,EACR6B,SAAU,CACR,CACEC,MAAO,UACPC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBC,UAAU,EACVC,QAAS,SACTC,QAAS,SACTlN,KAAMkK,GAER,CACE4B,MAAM,QAAD,OAAUjC,GACfkC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,UACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,UAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,UAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBC,UAAU,EACVC,QAAS,SACTC,QAAS,SACTlN,KAAMsK,KAYN6C,EAAU,CACdC,OAAQ,CACNzO,SAAS,GAEX0O,SAAU,CACRC,UAAW,CACTxB,MAAO,SAACyB,GAAD,oBAAsBA,EAAaC,UAG9CC,OAAQ,CACNC,MAAO,CAAC,CACNtR,GAAI,SACJuR,MAAO,CACLC,cAAe,EACfC,QAAS,GACTC,aAAmH,KAArG/I,KAAKgJ,IAAI7D,EAAO3L,QAAO,SAACJ,EAAGC,GAAJ,OAAU2G,KAAKgJ,IAAI5P,EAAGC,MAAKkM,EAAe/L,QAAO,SAACJ,EAAGC,GAAJ,OAAU2G,KAAKgJ,IAAI5P,EAAGC,OAC5G4P,SAJK,SAIIR,GACP,MAAM,OAAN,OAAWA,KAGfS,UAAW,CACTC,YAAY,EACZC,WAAW,KAGfC,MAAO,CAAC,CACNhS,GAAI,SACJc,KAAM,OACNmR,KAAM,CACJC,YAAY,EACZC,KAAMzE,EACN0E,cAtCc,CACpBC,IAAK,SACLC,KAAM,qBACNC,MAAO,WACPC,QAAS,YAkC0B9E,GAC7B+E,eAAgB,CACdJ,IAAK,SACLC,KAAM,SACNE,QAAS,aAGbjB,MAAO,CACLE,QAAS,GAGXI,UAAW,CACTa,cAAe,GACfC,WAAW,OAKnB,OACE,kBAAC,KAAD,CAAM/O,KAAM2L,EAASqD,OAAQ,IAAK7B,QAASA,K,oBC/KzC8B,GAAoC,SAACnS,GAAD,OAAWA,EAAMoS,uBAAyBzS,ICoa9EkF,GAAkBC,YAAyB,CAC/CU,YAAa6E,cACbsB,gBDha8CrB,YAC9C6H,IACA,SAAC5H,GAAD,OAAcA,EAASoB,mBC+ZvB0G,mBD5ZiD/H,YACjD6H,IACA,SAAC5H,GAAD,OAAcA,EAASqB,sBC2ZvB0G,0BDxZgDhI,YAChD6H,IACA,SAAC5H,GAAD,OAAcA,EAASkB,+BC+ZzB,IAAMxG,GAAcC,YAClBL,IAPF,SAA4BM,GAC1B,MAAO,CACLoN,uBAAwB,kBAAMpN,EJxaW,CAC3C/E,KAAMkL,UIgbO/F,eACbN,GADaM,EA7Ze,SAAC,GAMxB,IALLC,EAKI,EALJA,YACA+M,EAII,EAJJA,uBACA5G,EAGI,EAHJA,gBACA0G,EAEI,EAFJA,mBACAC,EACI,EADJA,0BAEA5H,YAAiB,CAAEtE,IAAK,wBAAyBuE,aACjDC,YAAc,CAAExE,IAAK,wBAAyByE,UAF1C,MAIkCpF,mBAAS,QAJ3C,mBAIG+M,EAJH,KAIgBC,EAJhB,OAKkChN,mBAAS,IAL3C,mBAKGiN,EALH,KAKgBC,EALhB,OAM0ClN,mBAAS,GANnD,mBAMGmN,EANH,KAMoBC,EANpB,OAOwDpN,mBAAS,GAPjE,mBAOGqN,EAPH,KAO2BC,EAP3B,OAQ8DtN,mBAAS,GARvE,mBAQGuN,EARH,KAQ8BC,EAR9B,OAS4DxN,mBAAS,GATrE,mBASGyN,EATH,KAS6BC,EAT7B,OAUkE1N,mBAAS,GAV3E,mBAUG2N,EAVH,KAUgCC,EAVhC,OAWoC5N,mBAAS,IAX7C,mBAWG6N,EAXH,KAWiBC,EAXjB,KAeJ3N,qBAAU,WACR2M,MACC,CAACA,IAEJ,IAAMiB,EAAkB,SAACC,EAAW1G,EAAQ2G,GAC1C,IAAIC,EAAQ,EACRC,EAAa,EACbC,EAAY,EAmBhB,OAjBAJ,EAAUnF,SAAQ,SAACwF,IACbJ,GAZO,YAYKI,EAAM7G,QAAqBY,KAAOiG,EAAMvS,WAAWwS,UAAUlG,OAASE,SAAS,EAAGhB,GAASc,OAASE,SAAS,EAAGhB,MAMpH2G,GAlBD,YAkBaI,EAAM7G,QAAqBY,KAAOiG,EAAMvS,WAAWyS,QAAQnG,OAASE,SAAS,EAAGhB,OALtG4G,GAASlF,aAAeqF,EAAMpF,OAC9BkF,GAAc,EACdE,EAAMpF,MAAMJ,SAAQ,SAACC,GACnBsF,GAAatF,EAAU0F,kBAYtB,CACLN,QAAOO,QAHOP,EAAQC,EAGNA,aAAYC,YAAWM,aAFpBN,EAAYD,IAoDnChO,qBAAU,WACR,GAAI+F,EAAgBrH,OAAQ,CAC1B,IAAM8P,EAAoBZ,EAAgB7H,EAAiB6G,GACrD6B,EAAqBb,EAAgB7H,EAAiB6G,GAAa,GACzEG,EAAeyB,GACfvB,EAAmBuB,EAAkBT,MAAQU,EAAmBV,OAChEZ,EAA0BqB,EAAkBF,QAAUG,EAAmBH,SACzEb,EAA+Be,EAAkBD,aAAeE,EAAmBF,cACnFlB,EAA6BmB,EAAkBR,WAAaS,EAAmBT,YAC/ET,EAA4BiB,EAAkBP,UAAYQ,EAAmBR,WAC7EN,EAxDoB,SAACE,EAAW1G,GAClC,IAAMuH,EAAeb,EAAUhS,QAAO,SAAC8S,EAAWT,GAChD,IAAMU,EAAeD,EAarB,MAhDW,YAoCPT,EAAM7G,QAAqBY,KAAOiG,EAAMvS,WAAWyS,QAAQnG,OAASE,SAAS,EAAGhB,MAC7EyH,EAAaV,EAAM/S,gBACtByT,EAAaV,EAAM/S,cAAgB,CACjCA,aAAc+S,EAAM/S,aACpBE,WAAY6S,EAAM7S,WAClBC,aAAc4S,EAAM5S,aACpBuT,SAAUX,EAAMW,SAChBC,WAAY,IAGhBF,EAAaV,EAAM/S,cAAc2T,YAAcjG,aAAeqF,EAAMpF,QAE/D8F,IACN,IACH,OAAOpH,kBAAOkH,GAAclT,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEqT,WAAapT,EAAEoT,YAAe,EAAMrT,EAAEqT,WAAapT,EAAEoT,WAAc,EAAI,KAuCnGC,CAAgBhJ,EAAiB6G,OAElD,CAAC7G,EAAiB6G,IAErB,IAAMoC,EAAWC,mBAAQ,kBAxCL,SAACpB,EAAW1G,GAC9B,IAAK0G,EAAUnP,OACb,OAAO,KAGT,IAAMwQ,EAAWrB,EAAUhS,QAAO,SAACiN,EAAOoF,GACxC,IAAMiB,EAAWrG,EAejB,MA1EW,YA4DPoF,EAAM7G,QAAqBY,KAAOiG,EAAMvS,WAAWyS,QAAQnG,OAASE,SAAS,EAAGhB,KAClF+G,EAAMpF,MAAMJ,SAAQ,SAACzI,GACdkP,EAASlP,EAAKvG,MACjByV,EAASlP,EAAKvG,IAAM,CAClBA,GAAIuG,EAAKvG,GACT0I,KAAMnC,EAAKmC,KACXO,SAAU1C,EAAK0C,SACfC,YAAa3C,EAAK2C,YAClBkM,WAAY,IAGhBK,EAASlP,EAAKvG,IAAIoV,YAAe7O,EAAKoO,WAAapO,EAAKjE,SAGrDmT,IACN,IACH,OAAO3H,kBAAO0H,GAAU1T,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEqT,WAAapT,EAAEoT,YAAe,EAAMrT,EAAEqT,WAAapT,EAAEoT,WAAc,EAAI,KAiBpFM,CAAYrJ,EAAiB6G,KAAc,CAAC7G,EAAiB6G,IAE5F,OAAKrQ,OAAOC,KAAKuJ,GAAiBrH,QAAWnC,OAAOC,KAAKsQ,GAAapO,QAItE/B,QAAQC,IAAImC,OAAOsQ,MAAMvC,EAAYyB,eAUnC,kBAACrJ,EAAA,EAAD,KACGwH,GACC,kBAACvH,EAAA,EAAD,CAAQC,UAAQ,EAACC,QAAM,EAACC,MAAI,GAC1B,kBAACC,EAAA,EAAD,CAAQH,UAAQ,KAGpB,kBAAC5D,EAAA,EAAD,CAASgE,OAAK,EAAC7D,UAAU,mBACvB,kBAAC,GAAD,KACE,kBAAC2N,GAAA,EAAD,CAAMC,QAAS,EAAGC,cAAc,UAC9B,kBAACF,GAAA,EAAKG,OAAN,CAAaC,MAAM,MACjB,kBAACjO,EAAA,EAAD,CAAQT,GAAG,MAAX,KAEG,IACApB,EAAYzE,aACZ,KAJH,iCAQF,kBAACmU,GAAA,EAAKG,OAAN,CAAaC,MAAM,IAAIC,UAAU,SAC/B,kBAAC/L,EAAA,EAAOgM,MAAR,KACE,kBAAChM,EAAA,EAAD,CAAQyB,OAAwB,SAAhBuH,EAAwBtI,QAAS,kBAAMuI,EAAe,UAAtE,QACA,kBAACjJ,EAAA,EAAD,CAAQyB,OAAwB,UAAhBuH,EAAyBtI,QAAS,kBAAMuI,EAAe,WAAvE,SACA,kBAACjJ,EAAA,EAAD,CAAQyB,OAAwB,SAAhBuH,EAAwBtI,QAAS,kBAAMuI,EAAe,UAAtE,WAIN,kBAACrL,EAAA,EAAD,CAASgE,OAAK,GACZ,kBAAC8J,GAAA,EAAD,CAAMC,QAAS,GACb,kBAACD,GAAA,EAAKG,OAAN,CAAa9N,UAAU,gBAAgB+N,MAAO,GAC5C,kBAACjO,EAAA,EAAD,YAEG,IACAmL,EACA,IAJH,eAOA,kBAACnL,EAAA,EAAD,CAAQT,GAAG,KAAK6O,UAAQ,GAAxB,OAEG/C,EAAYiB,MAAM+B,QAAQ,IAV/B,SAaG,IACoB,IAApB9C,EAAwB,sBACvB,2CAEG3K,KAAK0N,IAAI/C,GAAiB8C,QAAQ,GAClC,IACA9C,EAAkB,EAAI,OAAS,OAC/B,IALH,QASD,IAxBH,OA0BG,IACAJ,EACAI,GAAmB,EAAI,IAAM,IAC9B,kBAACvL,EAAA,EAAD,CAAQT,GAAG,KAAK6O,UAAQ,GACrB/C,EAAYkB,WACZ,IAFH,UA7BF,SAmCG,IAC8B,IAA9BZ,EAAkC,sBACjC,oCACG/K,KAAK0N,IAAI3C,GACT,IACAA,EAA4B,EAAI,OAAS,QACzC,IAJH,QAQD,IA7CH,OA+CG,IACAR,EACAQ,GAA6B,EAAI,IAAM,IACxC,kBAAC3L,EAAA,EAAD,CAAQT,GAAG,KAAK6O,UAAQ,GACrB/C,EAAYmB,UACZ,IAFH,SAlDF,SAwDG,IAC6B,IAA7BX,EAAiC,sBAChC,oCACGjL,KAAK0N,IAAIzC,GACT,IACAA,EAA2B,EAAI,OAAS,QACxC,IAJH,QAQD,IAlEH,OAoEG,IACAV,EACAU,GAA4B,EAAI,IAAM,KAEzC,kBAACgC,GAAA,EAAKG,OAAN,CAAaC,MAAO,GAClB,kBAAClO,EAAA,EAAD,KACE,kBAAC,GAAD,CAAWlE,KAAMyI,EAAiBoB,OAAQyF,EAAaxF,KAAM4I,KAA4BpD,GAAcvF,OAnNxG,cAsNH,kBAACiI,GAAA,EAAKG,OAAN,CAAa9N,UAAU,iBAAiB+N,MAAO,GAC7C,kBAACjO,EAAA,EAAD,CAAQT,GAAG,KAAKW,UAAU,aAA1B,sBAGA,kBAACF,EAAA,EAAD,KACI1C,OAAOsQ,MAAMvC,EAAYwB,SAEvB,qBAFH,cACOxB,EAAYwB,QAAQwB,QAAQ,MAGpC/Q,OAAOsQ,MAAMnC,IACb,oCAC8B,IAA3BA,EAA+B,sBAC9B,2CAEG7K,KAAK0N,IAAI7C,GAAwB4C,QAAQ,GACzC,IACA5C,EAAyB,EAAI,OAAS,OACtC,IALH,QASD,IAXH,OAaG,IACAN,EACAM,GAA0B,EAAI,IAAM,KAGzC,kBAACzL,EAAA,EAAD,CAAQT,GAAG,KAAKW,UAAU,aAA1B,0BAGA,kBAACF,EAAA,EAAD,KACI1C,OAAOsQ,MAAMvC,EAAYyB,cAEvB,qBADAzB,EAAYyB,aAAauB,QAAQ,KAGrC/Q,OAAOsQ,MAAM7B,IACb,oCACmC,IAAhCA,EAAoC,sBACnC,oCACGnL,KAAK0N,IAAIvC,GAA6BsC,QAAQ,GAC9C,IACAtC,EAA8B,EAAI,OAAS,QAC3C,IAJH,QAQD,IAVH,OAYG,IACAZ,EACAY,GAA+B,EAAI,IAAM,QAMpD,kBAAChM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQoO,UAAQ,GAAhB,iBAGA,kBAACP,GAAA,EAAD,CAAMC,QAAS,GACZ7B,EAAahP,OAASgP,EAAa9S,KAAI,SAACqV,GAAD,OACtC,kBAACX,GAAA,EAAKY,IAAN,CAAU1P,IAAKyP,EAAS5U,YACtB,kBAACiU,GAAA,EAAKG,OAAN,CAAaC,MAAO,IAClB,kBAAC5M,EAAA,EAAD,CAAOL,MAAO,CAAE0N,YAAa,SAAWC,QAAM,EAACpN,UAAQ,EAACC,UAAQ,EAACtC,IAAKsP,EAAS3U,cAAgB,oCAAqCsF,IAAI,gBACxI,kBAAC,IAAD,CAAMK,GAAE,mBAAcgP,EAAS5U,aAAe4U,EAAS9U,eAEzD,kBAACmU,GAAA,EAAKG,OAAN,CAAaC,MAAO,GAApB,OAEGO,EAASnB,WAAWgB,QAAQ,QAK/B,kBAACR,GAAA,EAAKY,IAAN,KACE,kBAACZ,GAAA,EAAKG,OAAN,CAAaC,MAAO,IAApB,2BAEG,IACA9C,EAHH,QAUV,kBAACpL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQoO,UAAQ,GAAhB,aAGA,kBAACP,GAAA,EAAD,CAAMC,QAAS,EAAGC,cAAc,UAC7BR,EAAStQ,OAASsQ,EAASpU,KAAI,SAACqF,GAAD,OAC9B,kBAACqP,GAAA,EAAKY,IAAN,CAAU1P,IAAKP,EAAKvG,IAClB,kBAAC4V,GAAA,EAAKG,OAAN,CAAaC,MAAO,GAClB,kBAAC5M,EAAA,EAAD,CAAOL,MAAO,CAAE0N,YAAa,SAAWC,QAAM,EAACpN,UAAQ,EAACC,UAAQ,EAACtC,IAAKV,EAAK2C,aAAe,qCAAsChC,IAAI,YACnIX,EAAKmC,MAER,kBAACkN,GAAA,EAAKG,OAAN,CAAaC,MAAO,GACjBhN,KAAWzC,EAAK0C,WAEnB,kBAAC2M,GAAA,EAAKG,OAAN,CAAaC,MAAO,GAApB,OAEGzP,EAAK6O,WAAWgB,QAAQ,QAK3B,kBAACR,GAAA,EAAKY,IAAN,KACE,kBAACZ,GAAA,EAAKG,OAAN,CAAaC,MAAO,IAApB,4BAEG,IACA9C,EAHH,QAUV,kBAACpL,EAAA,EAAD,KACE,kBAAC6O,GAAA,EAAD,CACE1O,UAAU,iBACV2O,OAAQ1Q,EAAYiP,SACpB0B,KAAM,EACNC,aAAa,EACb/N,MAAO,CACL6J,OAAQ,UAGV,kBAACmE,GAAA,EAAD,CACEC,IAAKC,OAEP,kBAACC,GAAA,EAAD,CACEC,kBAAmBjR,EAAYiR,oBAEjC,kBAACC,GAAA,EAAD,CAAWjC,SAAUjP,EAAYiP,WAChCnB,EAAa9S,KAAI,SAACqV,GAAD,OAChB,kBAACa,GAAA,EAAD,CAAWtQ,IAAKyP,EAAS9U,aAAcX,KAAK,WAAWqU,SAAUoB,EAASpB,SAAUzM,KAAM6N,EAAS9U,kBAEpGsR,EAAmB/P,QAAO,SAACuT,GAAD,OAAevC,EAAa9S,KAAI,SAACmW,GAAD,OAAiBA,EAAY5V,gBAAcgJ,SAAS8L,EAAS9U,iBAAeP,KAAI,SAACqV,GAAD,OACzI,kBAACa,GAAA,EAAD,CAAWtQ,IAAKyP,EAAS9U,aAAcX,KAAK,eAAeqU,SAAUoB,EAASpB,SAAUzM,KAAM6N,EAAS9U,mBAG3G,kBAAC6V,GAAA,EAAD,CAAMvO,MAAO,CAAEwO,UAAW,OAASC,MAAM,OAAO9O,KAAK,yBAxBvD,sBA0BG,IACD,kBAAC4O,GAAA,EAAD,CAAME,MAAM,MAAM9O,KAAK,yBA3BzB,6BA5OC,Q,4zCCjJX,IAkEe+O,GAlEOvT,IAAOC,IAAV,MC2FboB,GAAkBC,YAAyB,CAC/CU,YAAa6E,gBAGTpF,GAAcC,YAClBL,IAGaU,sBACbN,GADaM,EA3EE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACVwR,EAAoBC,cAApBD,gBAKRzU,QAAQC,IAAI,QAEZ,IAAoC0U,EAgDpC,OACE,qCAjDkCA,EAkDF1R,EAAjBwR,IAjDOE,EAElB,kBAACpM,EAAA,EAAD,KACE,kBAAC1D,EAAA,EAAD,CAASgE,OAAK,EAAC7D,UAAU,mBACvB,kBAACF,EAAA,EAAD,CAAQT,GAAG,MACT,kBAAC,mBAAqBuQ,EAAS9X,SAEjC,kBAAC+X,EAAA,EAAD,KACE,kBAACA,EAAA,EAAQ/P,OAAT,4BACA,mCAEG,IACD,gCACE,kBAAC,IAAD,CAAMR,GAAG,WAAT,SAED,IANH,sBAcNqQ,GAAsB,aAAdA,EAAK/N,KACR,kBAAC,GAAD,MAEL+N,GAAsB,aAAdA,EAAK/N,KACR,kBAAC,GAAD,MAGP,kBAAC2B,EAAA,EAAD,KACE,kBAAC,GAAD,KACE,yBAAKvD,UAAU,cACf,kBAACH,EAAA,EAAD,CAASgE,OAAK,EAACmK,UAAU,UACvB,kBAAClO,EAAA,EAAD,CAAQE,UAAU,WAAlB,aAGA,kBAACF,EAAA,EAAD,CAAQT,GAAG,KAAKW,UAAU,cAA1B,0BAGA,kBAACiC,EAAA,EAAD,CAAQb,KAAK,QAAQqC,UAAQ,EAAChB,KAAK,cAAcqN,cAAc,QAAQpN,QAAQ,yB,iCCxE5EwE,IAFQ,SAAC6I,GAAD,OAAgBA,EAAW7V,QAAO,SAAC8V,EAAKC,GAA+E,OAArED,GAA4B,WAApBC,EAAIC,aAA4BD,EAAI5V,MAAQ4V,EAAIvD,aAA4B","file":"static/js/14.b4f62988.chunk.js","sourcesContent":["/*\n * HomePage Messages\n *\n * This contains all the text for the HomePage container.\n */\nimport { defineMessages } from 'react-intl';\n\nexport const scope = 'app.containers.HomePage';\n\nexport default defineMessages({\n  header: {\n    id: `${scope}.header`,\n    defaultMessage: 'Welcome to beerLocal',\n  },\n});\n","/*\n * RetailerDashboardPage Constants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with 'yourproject/YourComponent' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = 'yourproject/YourContainer/YOUR_ACTION_CONSTANT';\n */\n\nexport const FETCH_PRODUCER_FEED = 'beerlocal/RetailerDashboardPage/FETCH_PRODUCER_FEED';\nexport const FETCH_PRODUCER_FEED_SUCCESS = 'beerlocal/RetailerDashboardPage/FETCH_PRODUCER_FEED_SUCCESS';\nexport const FETCH_PRODUCER_FEED_ERROR = 'beerlocal/RetailerDashboardPage/FETCH_PRODUCER_FEED_ERROR';\n","import produce from 'immer';\nimport {\n  FETCH_PRODUCER_FEED,\n  FETCH_PRODUCER_FEED_SUCCESS,\n  FETCH_PRODUCER_FEED_ERROR,\n} from './constants';\n\nexport const initialState = {\n  fetchingProducerFeed: false,\n  fetchingProducerFeedError: false,\n  producerFeed: false,\n};\n\n/* eslint-disable default-case, no-param-reassign */\nconst RetailerDashboardPageReducer = (state = initialState, action) => produce(state, (draftState) => {\n  switch (action.type) {\n    default:\n      break;\n    case FETCH_PRODUCER_FEED:\n      draftState.fetchingProducerFeedError = false;\n      draftState.fetchingProducerFeed = true;\n      break;\n    case FETCH_PRODUCER_FEED_SUCCESS:\n      if (action.producerFeed) {\n        const { followedProducers, nearbyProducers } = action.producerFeed;\n        const producerInfo = followedProducers.map((producer) => [...producer.stock, ...producer.blog]);\n\n        const withProducerProps = producerInfo\n          .map((producerItems, index) => producerItems\n            .map((producerItem) => ({\n              producer: followedProducers[index].businessName, producerId: followedProducers[index].businessId, avatarSource: followedProducers[index].avatarSource, ...producerItem,\n            })))\n          .flat()\n          // eslint-disable-next-line no-nested-ternary\n          .sort((a, b) => (a.createdAt > b.createdAt) ? -1 : ((a.createdAt < b.createdAt) ? 1 : 0));\n        const groupedBeers = withProducerProps.reduce((groups, producerItem) => {\n          const groupsObj = groups;\n          if (producerItem.price && producerItem.display === 'Show') {\n            const date = producerItem.firstDisplayed.split('T')[0];\n            if (!groups[`${date}:${producerItem.producerId}`]) {\n              groupsObj[`${date}:${producerItem.producerId}`] = [];\n            }\n            groupsObj[`${date}:${producerItem.producerId}`].push(producerItem);\n          }\n          return groupsObj;\n        }, {});\n        const groupedBeersArray = Object.keys(groupedBeers).map((date) => ({\n          createdAt: date.split(':')[0],\n          producerItems: groupedBeers[date],\n        }));\n\n        const fullArrayWithBeerGrouped = [...withProducerProps.filter((producerItem) => !producerItem.price), ...groupedBeersArray, ...nearbyProducers];\n        const dateSorted = fullArrayWithBeerGrouped.sort((a, b) => {\n          if (a.createdAt > b.createdAt) return -1;\n          if (a.createdAt < b.createdAt) return 1;\n          return 0;\n        });\n        console.log('SORTED', dateSorted);\n\n        draftState.producerFeed = dateSorted;\n        draftState.fetchingProducerFeedError = false;\n      }\n      draftState.fetchingProducerFeed = false;\n      break;\n    case FETCH_PRODUCER_FEED_ERROR:\n      draftState.fetchingProducerFeedError = true;\n      draftState.fetchingProducerFeed = false;\n      break;\n  }\n});\n\nexport default RetailerDashboardPageReducer;\n","import {\n  call, put, debounce, spawn,\n} from 'redux-saga/effects';\nimport { FETCH_PRODUCER_FEED } from './constants';\nimport {\n  producerFeedFetched, producerFeedFetchError,\n} from './actions';\nimport { getPrivateRoute } from '../../utils/api';\n\nfunction* fetchProducerFeed() {\n  try {\n    const privateRoute = yield call(getPrivateRoute);\n    const fetchProducerFeedData = () => privateRoute.get('/retailer/producers');\n    const response = yield call(fetchProducerFeedData);\n\n    console.log('PRODUCER FEED RETRIEVED', response.data);\n\n    if (response.data) {\n      yield put(producerFeedFetched(response.data));\n    }\n  } catch (err) {\n    yield put(producerFeedFetchError(err));\n  }\n}\n\nfunction* fetchProducerFeedSaga() {\n  yield debounce(2000, FETCH_PRODUCER_FEED, fetchProducerFeed);\n}\n\nexport default function* rootSaga() {\n  yield spawn(fetchProducerFeedSaga);\n}\n","/*\n *\n * RetailerDashboardPage actions\n *\n */\n\nimport {\n  FETCH_PRODUCER_FEED,\n  FETCH_PRODUCER_FEED_SUCCESS,\n  FETCH_PRODUCER_FEED_ERROR,\n} from './constants';\n\nexport const fetchProducerFeed = () => ({\n  type: FETCH_PRODUCER_FEED,\n});\n\nexport const producerFeedFetched = (producerFeed) => ({\n  type: FETCH_PRODUCER_FEED_SUCCESS,\n  producerFeed,\n});\n\nexport const producerFeedFetchError = (error) => ({\n  type: FETCH_PRODUCER_FEED_ERROR,\n  error,\n});\n","import styled from 'styled-components';\n\nconst RetailerDashboardStyle = styled.div`\n  div.content {\n    div.summary {\n      height: 20px;\n    }\n    div.ui.segment {\n      max-width: 500px;\n      min-width: 500px;\n      margin: .5em 0 0;\n    }\n  }\n  div.images.extra {\n    display: flex;\n    img.circular {\n      min-width: 8em;\n    }\n\n    p {\n      font-size: 11px;\n      padding: 1em;\n    }\n  }\n  div.extra {\n    margin: 0;\n  }\n  .blog-text {\n    figure {\n      display: flex;\n      justify-content: center;\n    }\n\n    img {\n      display: block;\n      max-width: 100%;\n      max-height: 100%;\n      width: auto;\n      height: auto;\n    }\n  }\n`;\n\nexport default RetailerDashboardStyle;\n","// Convert numbers to words\n// copyright 25th July 2006, by Stephen Chapman http://javascript.about.com\n// permission to use this Javascript on your web page is granted\n// provided that all of the code (including this copyright notice) is\n// used exactly as shown (you can change the numbering system if you wish)\n\n// American Numbering System\nconst th = ['', 'thousand', 'million', 'billion', 'trillion'];\n// uncomment this line for English Number System\n// var th = ['','thousand','million', 'milliard','billion'];\n\nconst dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];\nconst tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];\nconst tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];\n\nconst numToWords = (number) => {\n  let s = number;\n  s = s.toString();\n  s = s.replace(/[, ]/g, '');\n  // eslint-disable-next-line eqeqeq\n  if (s != parseFloat(s)) return 'not a number';\n  let x = s.indexOf('.');\n  if (x === -1) x = s.length;\n  if (x > 15) return 'too big';\n  const n = s.split('');\n  let str = '';\n  let sk = 0;\n  for (let i = 0; i < x; i += 1) {\n    if ((x - i) % 3 === 2) {\n      if (n[i] === '1') {\n        str += `${tn[Number(n[i + 1])]} `;\n        i += 1;\n        sk = 1;\n      } else if (n[i] !== 0) {\n        str += `${tw[n[i] - 2]} `;\n        sk = 1;\n      }\n    } else if (n[i] !== 0) {\n      str += `${dg[n[i]]} `;\n      if ((x - i) % 3 === 0) str += 'hundred ';\n      sk = 1;\n    }\n    if ((x - i) % 3 === 1) {\n      if (sk) str += `${th[(x - i - 1) / 3]} `;\n      sk = 0;\n    }\n  }\n  if (x !== s.length) {\n    const y = s.length;\n    str += 'point ';\n    for (let i = x + 1; i < y; i += 1) { str += `${dg[n[i]]} `; }\n  }\n  return str.replace(/\\s+/g, ' ');\n};\n\nexport default numToWords;\n","/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Feed, Segment, Image, Button, Header, Divider,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { stateToHTML } from 'draft-js-export-html';\nimport { EditorState, convertFromRaw } from 'draft-js';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport timeAgo from '../../utils/timeAgo';\nimport numToWords from '../../utils/numToWords';\nimport { PACK_SIZES } from '../../utils/constants';\nimport { followProducer } from '../App/actions';\nimport { makeSelectProducerFollowing } from '../App/selectors';\n\nconst FeedItem = ({\n  producerItem, userProfile, producerFollow, producerFollowing,\n}) => {\n  const [followButtonClicked, setFollowButtonClicked] = useState(false);\n\n  useEffect(() => {\n    if (!producerFollowing) {\n      setFollowButtonClicked(false);\n    }\n  }, [producerFollowing]);\n\n  const handleFollowClick = async () => {\n    producerFollow(producerItem.sub);\n    setFollowButtonClicked(true);\n  };\n\n  const multiNewItemRender = (itemGroup) => {\n    const vowelRegex = '^[aieouAIEOU].*';\n    if (itemGroup.producerItems.length === 1) {\n      return (\n        <Feed.Event key={`${itemGroup.createdAt}${itemGroup.producerItems[0].producerId}`}>\n          <Feed.Label>\n            <img src={itemGroup.producerItems[0].avatarSource || '/images/avatars/blank-avatar.webp'} alt=\"producer avatar\" />\n          </Feed.Label>\n          <Feed.Content>\n            <Feed.Summary>\n              <Feed.User as=\"p\"><Link to={`/brewery/${itemGroup.producerItems[0].producerId}`}>{itemGroup.producerItems[0].producer}</Link></Feed.User>\n              {' '}\n              added a new beer\n              <Feed.Date>{timeAgo.format(Date.parse(itemGroup.producerItems[0].createdAt))}</Feed.Date>\n            </Feed.Summary>\n            <Segment>\n              <Feed.Extra text>\n                {itemGroup.producerItems[0].name}\n                {' - '}\n                {numToWords(Math.floor(itemGroup.producerItems[0].abv)).match(vowelRegex) ? ' an ' : ' a '}\n                {itemGroup.producerItems[0].abv}\n                {'% '}\n                {itemGroup.producerItems[0].style}\n                {' '}\n                in\n                {' '}\n                {PACK_SIZES[itemGroup.producerItems[0].packSize]}\n                .\n              </Feed.Extra>\n              {itemGroup.producerItems[0].imageSource && (\n                <Feed.Extra images>\n                  <Image className=\"product-image\" size=\"tiny\" bordered centered circular src={itemGroup.producerItems[0].imageSource} alt=\"product\" />\n                  <p>{itemGroup.producerItems[0].description}</p>\n                </Feed.Extra>\n              )}\n            </Segment>\n          </Feed.Content>\n        </Feed.Event>\n      );\n    }\n    return (\n      <Feed.Event key={`${itemGroup.createdAt}${itemGroup.producerItems[0].producerId}`}>\n        <Feed.Label>\n          <img src={itemGroup.producerItems[0].avatarSource || '/images/avatars/blank-avatar.webp'} alt=\"producer avatar\" />\n        </Feed.Label>\n        <Feed.Content>\n          <Feed.Summary>\n            <Feed.User as=\"p\"><Link to={`/brewery/${itemGroup.producerItems[0].producerId}`}>{itemGroup.producerItems[0].producer}</Link></Feed.User>\n            {' '}\n            added\n            {' '}\n            {itemGroup.producerItems.length}\n            {' '}\n            new beers\n            <Feed.Date>{timeAgo.format(Date.parse(itemGroup.producerItems[0].createdAt))}</Feed.Date>\n          </Feed.Summary>\n          <Segment>\n            {itemGroup.producerItems.map((producerSubItem, index) => (\n              <React.Fragment key={producerSubItem._id}>\n                <Feed.Extra text>\n                  {producerSubItem.name}\n                  {' - '}\n                  {numToWords(Math.floor(producerSubItem.abv)).match(vowelRegex) ? ' an ' : ' a '}\n                  {producerSubItem.abv}\n                  {'% '}\n                  {producerSubItem.style}\n                  {' '}\n                  in\n                  {' '}\n                  {PACK_SIZES[producerSubItem.packSize]}\n                  .\n                </Feed.Extra>\n                {\n                  producerSubItem.imageSource && (\n                    <Feed.Extra images>\n                      <Image className=\"product-image\" size=\"tiny\" bordered centered circular src={producerSubItem.imageSource} alt=\"product\" />\n                      <p>{producerSubItem.description}</p>\n                    </Feed.Extra>\n                  )\n                }\n                {index !== itemGroup.producerItems.length - 1 && (\n                  <Divider />\n                )}\n              </React.Fragment>\n            ))}\n          </Segment>\n        </Feed.Content>\n      </Feed.Event>\n    );\n  };\n\n  const newBlogRender = (item) => (\n    <Feed.Event key={item._id}>\n      <Feed.Label>\n        <img src={item.avatarSource || '/images/avatars/blank-avatar.webp'} alt=\"producer avatar\" />\n      </Feed.Label>\n      <Feed.Content>\n        <Feed.Summary>\n          <Feed.User as=\"p\"><Link to={`/brewery/${item.producerId}`}>{item.producer}</Link></Feed.User>\n          {' '}\n          posted some news\n          <Feed.Date>{timeAgo.format(Date.parse(item.createdAt))}</Feed.Date>\n        </Feed.Summary>\n        <Feed.Extra text>\n          <Segment>\n            <Header><i>{item.title}</i></Header>\n            <div className=\"blog-text\" dangerouslySetInnerHTML={{ __html: stateToHTML(EditorState.createWithContent(convertFromRaw(JSON.parse(item.blogData))).getCurrentContent()) }} />\n          </Segment>\n        </Feed.Extra>\n        {/* <Feed.Meta>\n            <Feed.Like>\n              <Icon name='like' />4 Likes\n          </Feed.Like>\n          </Feed.Meta> */}\n      </Feed.Content>\n    </Feed.Event>\n  );\n\n  const newProducerRender = (producer) => (\n    <Feed.Event key={producer.businessId}>\n      <Feed.Label>\n        <img src=\"/images/site-logo.png\" alt=\"producer avatar\" />\n      </Feed.Label>\n      <Feed.Content>\n        <Feed.Summary>\n          <Feed.User as=\"div\"><Link to={`/brewery/${producer.businessId}`}>{producer.businessName}</Link></Feed.User>\n          {' '}\n          has joined beerLocal, and they deliver to your area!\n          <Feed.Date>{timeAgo.format(Date.parse(producer.createdAt))}</Feed.Date>\n        </Feed.Summary>\n        <Segment>\n          <Feed.Extra images style={{ flexDirection: 'column' }}>\n            <div style={{ display: 'flex' }}>\n              <Image size=\"small\" centered src={producer.avatarSource || '/images/avatars/blank-avatar.webp'} alt=\"product\" />\n              <p style={{ marginBottom: '0', paddingTop: '0' }}>{producer.intro}</p>\n            </div>\n            <Button style={{ maxWidth: '100px', maxHeight: '30px', alignSelf: 'flex-end' }} size=\"mini\" loading={followButtonClicked} positive={userProfile.followedProducers.map((followedProducer) => followedProducer.sub).includes(producer.sub)} icon={userProfile.followedProducers.map((followedProducer) => followedProducer.sub).includes(producer.sub) ? 'check' : 'plus'} content={userProfile.followedProducers.map((followedProducer) => followedProducer.sub).includes(producer.sub) ? 'Following' : 'Follow'} onClick={handleFollowClick} />\n          </Feed.Extra>\n        </Segment>\n        {/* <Feed.Meta>\n            <Feed.Like>\n              <Icon name='like' />4 Likes\n          </Feed.Like>\n          </Feed.Meta> */}\n      </Feed.Content>\n    </Feed.Event>\n  );\n\n  if (producerItem.blogData) {\n    return newBlogRender(producerItem);\n  }\n  if (producerItem.producerItems && producerItem.producerItems.length) {\n    return multiNewItemRender(producerItem);\n  }\n  if (producerItem.role) {\n    return newProducerRender(producerItem);\n  }\n  return null;\n};\n\nFeedItem.propTypes = {\n  producerItem: PropTypes.object,\n  userProfile: PropTypes.shape({\n    followedProducers: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.object,\n      }),\n    ),\n  }),\n  producerFollow: PropTypes.func,\n  producerFollowing: PropTypes.bool,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  producerFollowing: makeSelectProducerFollowing(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    producerFollow: (producerSub) => dispatch(followProducer(producerSub)),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(withConnect)(FeedItem);\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the RetailerDashboardPage state domain\n */\n\nconst selectRetailerDashboardPageDomain = (state) => state.RetailerDashboardPage || initialState;\n\n/**\n * Other specific selectors\n */\n\nconst makeSelectProducerFeed = () => createSelector(\n  selectRetailerDashboardPageDomain,\n  (substate) => substate.producerFeed,\n);\n\nconst makeSelectProducerFeedFetching = () => createSelector(\n  selectRetailerDashboardPageDomain,\n  (substate) => substate.fetchingProducerFeed,\n);\n\nconst makeSelectProducerFeedFetchError = () => createSelector(\n  selectRetailerDashboardPageDomain,\n  (substate) => substate.fetchingProducerFeedError,\n);\n\n/**\n * Default selector used by RetailerDashboardPage\n */\n\nconst makeSelectRetailerDashboardPage = () => createSelector(\n  selectRetailerDashboardPageDomain,\n  (substate) => substate,\n);\n\nexport default makeSelectRetailerDashboardPage;\nexport {\n  selectRetailerDashboardPageDomain, makeSelectProducerFeed, makeSelectProducerFeedFetching, makeSelectProducerFeedFetchError,\n};\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport { createStructuredSelector } from 'reselect';\nimport {\n  Header, Segment, Feed, Dimmer, Loader,\n} from 'semantic-ui-react';\nimport { useInjectReducer } from '../../utils/injectReducer';\nimport { useInjectSaga } from '../../utils/injectSaga';\nimport reducer from './reducer';\nimport saga from './saga';\n\nimport PageWrapper from '../../components/PageWrapper';\nimport { makeSelectUser } from '../App/selectors';\nimport RetailerDashboardStyle from './RetailerDashboardStyle';\nimport FeedItem from './FeedItem';\nimport { fetchProducerFeed } from './actions';\nimport { makeSelectProducerFeed, makeSelectProducerFeedFetching } from './selectors';\n\nconst RetailerDashboardPage = ({\n  userProfile,\n  producerFeedFetch,\n  producerFeed,\n  producerFeedFetching,\n}) => {\n  useInjectReducer({ key: 'RetailerDashboardPage', reducer });\n  useInjectSaga({ key: 'RetailerDashboardPage', saga });\n\n  useEffect(() => {\n    producerFeedFetch();\n  }, [producerFeedFetch]);\n\n  if (!producerFeed) {\n    return null;\n  }\n\n  return (\n    <PageWrapper>\n      {producerFeedFetching && (\n        <Dimmer inverted active page>\n          <Loader inverted />\n        </Dimmer>\n      )}\n      <Segment basic className=\"primary wrapper\">\n        <Header as=\"h1\">Updates</Header>\n        <RetailerDashboardStyle>\n          <Feed size=\"large\">\n            {producerFeed.map((producerItem) => (\n              <React.Fragment key={`producerItem._id-${Math.random()}`}>\n                <FeedItem producerItem={producerItem} userProfile={userProfile} />\n              </React.Fragment>\n            ))}\n          </Feed>\n        </RetailerDashboardStyle>\n      </Segment>\n    </PageWrapper>\n  );\n};\n\nRetailerDashboardPage.propTypes = {\n  userProfile: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  producerFeedFetch: PropTypes.func,\n  producerFeed: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  producerFeedFetching: PropTypes.bool,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userProfile: makeSelectUser(),\n  producerFeed: makeSelectProducerFeed(),\n  producerFeedFetching: makeSelectProducerFeedFetching(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    producerFeedFetch: () => dispatch(fetchProducerFeed()),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(\n  withConnect,\n)(RetailerDashboardPage);\n","/*\n * ProducerDashboardPage Constants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with 'yourproject/YourComponent' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = 'yourproject/YourContainer/YOUR_ACTION_CONSTANT';\n */\n\nexport const FETCH_PRODUCER_DASHBOARD = 'beerlocal/ProducerDashboardPage/FETCH_PRODUCER_DASHBOARD';\nexport const FETCH_PRODUCER_DASHBOARD_SUCCESS = 'beerlocal/ProducerDashboardPage/FETCH_PRODUCER_DASHBOARD_SUCCESS';\nexport const FETCH_PRODUCER_DASHBOARD_ERROR = 'beerlocal/ProducerDashboardPage/FETCH_PRODUCER_DASHBOARD_ERROR';\n","import produce from 'immer';\nimport { merge, pick } from 'lodash';\nimport {\n  FETCH_PRODUCER_DASHBOARD,\n  FETCH_PRODUCER_DASHBOARD_SUCCESS,\n  FETCH_PRODUCER_DASHBOARD_ERROR,\n} from './constants';\n\nexport const initialState = {\n  fetchingProducerDashboard: false,\n  fetchingProducerDashboardError: false,\n  dashboardOrders: false,\n  dashboardRetailers: false,\n};\n\n/* eslint-disable default-case, no-param-reassign */\nconst ProducerDashboardPageReducer = (state = initialState, action) => produce(state, (draftState) => {\n  switch (action.type) {\n    default:\n      break;\n    case FETCH_PRODUCER_DASHBOARD:\n      draftState.fetchingProducerDashboardError = false;\n      draftState.fetchingProducerDashboard = true;\n      break;\n    case FETCH_PRODUCER_DASHBOARD_SUCCESS:\n      if (action.producerDashboard) {\n        const orders = merge(action.producerDashboard.orders.orders, action.producerDashboard.orders.businesses.map((business) => pick(business, ['businessName', 'businessId', 'avatarSource', 'location'])));\n        const { retailers } = action.producerDashboard.retailers;\n        draftState.dashboardOrders = orders;\n        draftState.dashboardRetailers = retailers;\n        draftState.fetchingProducerDashboardError = false;\n      }\n      draftState.fetchingProducerDashboard = false;\n      break;\n    case FETCH_PRODUCER_DASHBOARD_ERROR:\n      if (action.error) {\n        draftState.fetchingProducerDashboardError = action.error;\n      } else {\n        draftState.fetchingProducerDashboardError = true;\n      }\n      draftState.fetchingProducerDashboard = false;\n      break;\n  }\n});\n\nexport default ProducerDashboardPageReducer;\n","import {\n  call, put, debounce, spawn,\n} from 'redux-saga/effects';\nimport { FETCH_PRODUCER_DASHBOARD } from './constants';\nimport {\n  producerDashboardFetched, producerDashboardFetchError,\n} from './actions';\nimport { getPrivateRoute } from '../../utils/api';\n\nfunction* fetchProducerDashboard() {\n  try {\n    const privateRoute = yield call(getPrivateRoute);\n    const fetchOrderData = () => privateRoute.get('/orders');\n    const orderResponse = yield call(fetchOrderData);\n\n    const fetchRetailersData = () => privateRoute.get('/producer/retailers');\n    const retailersResponse = yield call(fetchRetailersData);\n\n    console.log('PRODUCER DASHBOARD DATA RETRIEVED');\n\n    if (orderResponse.data && retailersResponse.data) {\n      yield put(producerDashboardFetched({ orders: orderResponse.data, retailers: retailersResponse.data }));\n    }\n  } catch (err) {\n    yield put(producerDashboardFetchError(err));\n  }\n}\n\nfunction* fetchProducerDashboardSaga() {\n  yield debounce(2000, FETCH_PRODUCER_DASHBOARD, fetchProducerDashboard);\n}\n\nexport default function* rootSaga() {\n  yield spawn(fetchProducerDashboardSaga);\n}\n","/*\n *\n * ProducerDashboardPage actions\n *\n */\n\nimport {\n  FETCH_PRODUCER_DASHBOARD,\n  FETCH_PRODUCER_DASHBOARD_SUCCESS,\n  FETCH_PRODUCER_DASHBOARD_ERROR,\n} from './constants';\n\nexport const fetchProducerDashboard = () => ({\n  type: FETCH_PRODUCER_DASHBOARD,\n});\n\nexport const producerDashboardFetched = (producerDashboard) => ({\n  type: FETCH_PRODUCER_DASHBOARD_SUCCESS,\n  producerDashboard,\n});\n\nexport const producerDashboardFetchError = (error) => ({\n  type: FETCH_PRODUCER_DASHBOARD_ERROR,\n  error,\n});\n","import styled from 'styled-components';\n\nconst ProducerDashboardStyle = styled.div`\n\n  .my-masonry-grid {\n    display: -webkit-box; /* Not needed if autoprefixing */\n    display: -ms-flexbox; /* Not needed if autoprefixing */\n    display: flex;\n    margin-left: -30px; /* gutter size offset */\n    width: auto;\n  }\n  .my-masonry-grid_column {\n    padding-left: 30px; /* gutter size */\n    background-clip: padding-box;\n  }\n\n  /* Style your items */\n  .my-masonry-grid_column > div { /* change div to reference your elements you put in <Masonry> */\n  }\n\n  @media (max-width: 800px) {\n    .my-masonry-grid {\n      margin-left: -15px; /* gutter size offset */\n    }\n    .my-masonry-grid_column {\n      padding-left: 15px; /* gutter size offset */\n    }\n    .my-masonry-grid_column > div {\n      margin-bottom: 15px; /* space between items */\n    }\n  }\n\n  .sales-summary {\n    .ui.dividing.header {\n      margin-top: 0.75em;\n      margin-bottom: 10px;\n    }\n  }\n\n  .sales-averages {\n    .ui.header {\n      margin-top: 0;\n      margin-bottom: 5px;\n    }\n    .ui.header.top-level {\n      margin-top: 1.5em;\n    }\n    .ui.header.top-level:first-child {\n      margin-top: 0;\n    }\n  }\n`;\n\nexport default ProducerDashboardStyle;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport moment from 'moment';\n\nimport calcOrderTotal from '../../utils/calcOrderTotal';\n\nconst LineChart = ({\n  data, period, step, status,\n}) => {\n  const [dates, setDates] = useState([]);\n  const [values, setValues] = useState([]);\n\n  const [previousDates, setPreviousDates] = useState([]);\n  const [previousValues, setPreviousValues] = useState([]);\n\n  function* currentDateRange(periodString, stepString) {\n    const today = moment();\n    const startDate = moment().subtract(1, periodString).add(1, stepString);\n\n    while (startDate <= today) {\n      yield startDate.format();\n      startDate.add(1, stepString);\n    }\n  }\n\n  function* previousDateRange(periodString, stepString) {\n    const endDate = moment().subtract(1, periodString).subtract(1, 'day');\n    const startDate = moment().subtract(2, periodString).add(1, stepString).subtract(1, 'day');\n\n    while (startDate <= endDate) {\n      yield startDate.format();\n      startDate.add(1, stepString);\n    }\n  }\n\n  const mapDatesToTotals = (datesArr, orders, statusString, stepString) => datesArr.map((date) => {\n    let stepTotal = 0;\n    orders.forEach((orderItem) => {\n      if (orderItem.status === statusString && moment(orderItem.createdAt).isSame(date, stepString)) {\n        stepTotal += calcOrderTotal(orderItem.items);\n      }\n    });\n    return stepTotal;\n  });\n\n  useEffect(() => {\n    if (period && step) {\n      setDates([...currentDateRange(period, step)]);\n      setPreviousDates([...previousDateRange(period, step)]);\n    }\n  }, [period, step]);\n\n  useEffect(() => {\n    if (data && data.length && dates.length) {\n      const mappedDates = mapDatesToTotals(dates, data, status, step);\n      setValues(mappedDates);\n      const mappedPrevDates = mapDatesToTotals(\n        previousDates,\n        data,\n        status,\n        step,\n      );\n      setPreviousValues(mappedPrevDates);\n    }\n  }, [data, dates, previousDates, status, step]);\n\n  if (!values.length || !dates.length) {\n    return null;\n  }\n\n  const dataObj = {\n    labels: dates,\n    datasets: [\n      {\n        label: 'Current',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 3,\n        pointHitRadius: 10,\n        spanGaps: true,\n        xAxisID: 'x-axis',\n        yAxisID: 'y-axis',\n        data: values,\n      },\n      {\n        label: `Last ${period}`,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: '#cfcfcf',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: '#cfcfcf',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: '#cfcfcf',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        spanGaps: true,\n        xAxisID: 'x-axis',\n        yAxisID: 'y-axis',\n        data: previousValues,\n      },\n    ],\n  };\n\n  const toolTipFormat = {\n    day: 'ddd Do',\n    week: '[Week from] Do MMM',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q \\'YY',\n  };\n\n  const options = {\n    legend: {\n      display: false,\n    },\n    tooltips: {\n      callbacks: {\n        label: (tooltipItems) => `£${tooltipItems.value}`,\n      },\n    },\n    scales: {\n      yAxes: [{\n        id: 'y-axis',\n        ticks: {\n          maxTicksLimit: 4,\n          padding: 10,\n          suggestedMax: Math.max(values.reduce((a, b) => Math.max(a, b)), previousValues.reduce((a, b) => Math.max(a, b))) * 1.01,\n          callback(value) {\n            return `£${value}`;\n          },\n        },\n        gridLines: {\n          drawBorder: false,\n          drawTicks: false,\n        },\n      }],\n      xAxes: [{\n        id: 'x-axis',\n        type: 'time',\n        time: {\n          isoWeekday: false,\n          unit: step,\n          tooltipFormat: toolTipFormat[step],\n          displayFormats: {\n            day: 'ddd Do',\n            week: 'Do MMM',\n            quarter: '[Q]Q \\'YY',\n          },\n        },\n        ticks: {\n          padding: 5,\n          // min: moment(dates[0]).subtract(1, 'week').format(),\n        },\n        gridLines: {\n          zeroLineWidth: 0.5,\n          intersect: false,\n        },\n      }],\n    },\n  };\n  return (\n    <Line data={dataObj} height={200} options={options} />\n  );\n};\n\nLineChart.propTypes = {\n  data: PropTypes.array,\n  period: PropTypes.string,\n  step: PropTypes.string,\n  status: PropTypes.string,\n};\n\nexport default LineChart;\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the ProducerDashboardPage state domain\n */\n\nconst selectProducerDashboardPageDomain = (state) => state.ProducerDashboardPage || initialState;\n\n/**\n * Other specific selectors\n */\n\nconst makeSelectProducerDashboardOrders = () => createSelector(\n  selectProducerDashboardPageDomain,\n  (substate) => substate.dashboardOrders,\n);\n\nconst makeSelectProducerDashboardRetailers = () => createSelector(\n  selectProducerDashboardPageDomain,\n  (substate) => substate.dashboardRetailers,\n);\n\nconst makeSelectProducerDashboardFetching = () => createSelector(\n  selectProducerDashboardPageDomain,\n  (substate) => substate.fetchingProducerDashboard,\n);\n\nconst makeSelectProducerDashboardFetchError = () => createSelector(\n  selectProducerDashboardPageDomain,\n  (substate) => substate.fetchingProducerDashboardError,\n);\n\n/**\n * Default selector used by ProducerDashboardPage\n */\n\nconst makeSelectProducerDashboardPage = () => createSelector(\n  selectProducerDashboardPageDomain,\n  (substate) => substate,\n);\n\nexport default makeSelectProducerDashboardPage;\nexport {\n  selectProducerDashboardPageDomain,\n  makeSelectProducerDashboardOrders,\n  makeSelectProducerDashboardRetailers,\n  makeSelectProducerDashboardFetching,\n  makeSelectProducerDashboardFetchError,\n};\n","/* eslint-disable no-nested-ternary */\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport moment from 'moment';\nimport { values } from 'lodash';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  Header, Segment, Button, Grid, Icon, Image, Dimmer, Loader,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { TileLayer, Map } from 'react-leaflet';\nimport { useInjectReducer } from '../../utils/injectReducer';\nimport { useInjectSaga } from '../../utils/injectSaga';\nimport reducer from './reducer';\nimport saga from './saga';\n\nimport PageWrapper from '../../components/PageWrapper';\nimport { makeSelectUser } from '../App/selectors';\nimport ProducerDashboardStyle from './ProducerDashboardStyle';\nimport calcOrderTotal from '../../utils/calcOrderTotal';\nimport LineChart from './LineChart';\nimport { PACK_SIZES, PRODUCER_CHART_TIME_PERIODS, MAP_TILE_PROVIDER_URL } from '../../utils/constants';\nimport DistributionAreaDisplay from '../../components/DistributionAreaDisplay';\nimport MapMarker from '../../components/MapMarker';\nimport { fetchProducerDashboard } from './actions';\nimport {\n  makeSelectProducerDashboardFetching, makeSelectProducerDashboardRetailers, makeSelectProducerDashboardOrders,\n} from './selectors';\n\nconst ProducerDashboardPage = ({\n  userProfile,\n  producerDashboardFetch,\n  dashboardOrders,\n  dashBoardRetailers,\n  producerDashboardFetching,\n}) => {\n  useInjectReducer({ key: 'ProducerDashboardPage', reducer });\n  useInjectSaga({ key: 'ProducerDashboardPage', saga });\n\n  const [salesPeriod, setSalesPeriod] = useState('week');\n  const [periodSales, setPeriodSales] = useState({});\n  const [periodSalesDiff, setPeriodSalesDiff] = useState(0);\n  const [periodSalesAverageDiff, setPeriodSalesAverageDiff] = useState(0);\n  const [periodSalesOrderCountDiff, setPeriodSalesOrderCountDiff] = useState(0);\n  const [periodSalesItemCountDiff, setPeriodSalesItemCountDiff] = useState(0);\n  const [periodSalesAverageItemsDiff, setPeriodSalesAverageItemsDiff] = useState(0);\n  const [topCustomers, setTopCustomers] = useState([]);\n\n  const status = 'Pending';\n\n  useEffect(() => {\n    producerDashboardFetch();\n  }, [producerDashboardFetch]);\n\n  const periodSalesCalc = (ordersArr, period, previous) => {\n    let total = 0;\n    let orderCount = 0;\n    let itemCount = 0;\n\n    ordersArr.forEach((order) => {\n      if (previous && order.status === status && moment(order.createdAt).isBetween(moment().subtract(2, period), moment().subtract(1, period))) {\n        total += calcOrderTotal(order.items);\n        orderCount += 1;\n        order.items.forEach((orderItem) => {\n          itemCount += orderItem.orderQuant;\n        });\n      } else if (!previous && order.status === status && moment(order.createdAt).isAfter(moment().subtract(1, period))) {\n        total += calcOrderTotal(order.items);\n        orderCount += 1;\n        order.items.forEach((orderItem) => {\n          itemCount += orderItem.orderQuant;\n        });\n      }\n    });\n    const average = total / orderCount;\n    const averageItems = itemCount / orderCount;\n    return {\n      total, average, orderCount, itemCount, averageItems,\n    };\n  };\n\n  const topCustomersArr = (ordersArr, period) => {\n    const customerList = ordersArr.reduce((customers, order) => {\n      const customersObj = customers;\n      if (order.status === status && moment(order.createdAt).isAfter(moment().subtract(1, period))) {\n        if (!customersObj[order.businessName]) {\n          customersObj[order.businessName] = {\n            businessName: order.businessName,\n            businessId: order.businessId,\n            avatarSource: order.avatarSource,\n            location: order.location,\n            salesTotal: 0,\n          };\n        }\n        customersObj[order.businessName].salesTotal += calcOrderTotal(order.items);\n      }\n      return customersObj;\n    }, {});\n    return values(customerList).sort((a, b) => (a.salesTotal > b.salesTotal) ? -1 : ((a.salesTotal < b.salesTotal) ? 1 : 0));\n  };\n\n  const topItemsArr = (ordersArr, period) => {\n    if (!ordersArr.length) {\n      return null;\n    }\n\n    const itemList = ordersArr.reduce((items, order) => {\n      const itemsObj = items;\n      if (order.status === status && moment(order.createdAt).isAfter(moment().subtract(1, period))) {\n        order.items.forEach((item) => {\n          if (!itemsObj[item.id]) {\n            itemsObj[item.id] = {\n              id: item.id,\n              name: item.name,\n              packSize: item.packSize,\n              imageSource: item.imageSource,\n              salesTotal: 0,\n            };\n          }\n          itemsObj[item.id].salesTotal += (item.orderQuant * item.price);\n        });\n      }\n      return itemsObj;\n    }, {});\n    return values(itemList).sort((a, b) => (a.salesTotal > b.salesTotal) ? -1 : ((a.salesTotal < b.salesTotal) ? 1 : 0));\n  };\n\n  useEffect(() => {\n    if (dashboardOrders.length) {\n      const currentPeriodData = periodSalesCalc(dashboardOrders, salesPeriod);\n      const previousPeriodData = periodSalesCalc(dashboardOrders, salesPeriod, true);\n      setPeriodSales(currentPeriodData);\n      setPeriodSalesDiff(currentPeriodData.total - previousPeriodData.total);\n      setPeriodSalesAverageDiff(currentPeriodData.average - previousPeriodData.average);\n      setPeriodSalesAverageItemsDiff(currentPeriodData.averageItems - previousPeriodData.averageItems);\n      setPeriodSalesOrderCountDiff(currentPeriodData.orderCount - previousPeriodData.orderCount);\n      setPeriodSalesItemCountDiff(currentPeriodData.itemCount - previousPeriodData.itemCount);\n      setTopCustomers(topCustomersArr(dashboardOrders, salesPeriod));\n    }\n  }, [dashboardOrders, salesPeriod]);\n\n  const topItems = useMemo(() => topItemsArr(dashboardOrders, salesPeriod), [dashboardOrders, salesPeriod]);\n\n  if (!Object.keys(dashboardOrders).length || !Object.keys(periodSales).length) {\n    return null;\n  }\n\n  console.log(Number.isNaN(periodSales.averageItems));\n\n  // const periodOptions = [\n  //   { text: 'week', value: 'week' },\n  //   { text: 'quarter', value: 'quarter' },\n  //   { text: 'month', value: 'month' },\n  //   { text: 'year', value: 'year' },\n  // ];\n\n  return (\n    <PageWrapper>\n      {producerDashboardFetching && (\n        <Dimmer inverted active page>\n          <Loader inverted />\n        </Dimmer>\n      )}\n      <Segment basic className=\"primary wrapper\">\n        <ProducerDashboardStyle>\n          <Grid columns={2} verticalAlign=\"middle\">\n            <Grid.Column width=\"10\">\n              <Header as=\"h1\">\n                Hi\n                {' '}\n                {userProfile.businessName}\n                {', '}\n                here&apos;s how things are going.\n              </Header>\n            </Grid.Column>\n            <Grid.Column width=\"6\" textAlign=\"right\">\n              <Button.Group>\n                <Button active={salesPeriod === 'week'} onClick={() => setSalesPeriod('week')}>Week</Button>\n                <Button active={salesPeriod === 'month'} onClick={() => setSalesPeriod('month')}>Month</Button>\n                <Button active={salesPeriod === 'year'} onClick={() => setSalesPeriod('year')}>Year</Button>\n              </Button.Group>\n            </Grid.Column>\n          </Grid>\n          <Segment basic>\n            <Grid columns={3}>\n              <Grid.Column className=\"sales-summary\" width={6}>\n                <Header>\n                  This\n                  {' '}\n                  {salesPeriod}\n                  {' '}\n                  you&apos;ve sold\n                </Header>\n                <Header as=\"h1\" dividing>\n                  £\n                  {periodSales.total.toFixed(2)}\n                </Header>\n                That&apos;s\n                {' '}\n                {periodSalesDiff === 0 ? 'exactly the same as' : (\n                  <>\n                    £\n                    {Math.abs(periodSalesDiff).toFixed(2)}\n                    {' '}\n                    {periodSalesDiff > 0 ? 'more' : 'less'}\n                    {' '}\n                    than\n                  </>\n                )}\n                {' '}\n                last\n                {' '}\n                {salesPeriod}\n                {periodSalesDiff >= 0 ? '!' : '.'}\n                <Header as=\"h3\" dividing>\n                  {periodSales.orderCount}\n                  {' '}\n                  orders\n                </Header>\n                That&apos;s\n                {' '}\n                {periodSalesOrderCountDiff === 0 ? 'exactly the same as' : (\n                  <>\n                    {Math.abs(periodSalesOrderCountDiff)}\n                    {' '}\n                    {periodSalesOrderCountDiff > 0 ? 'more' : 'fewer'}\n                    {' '}\n                    than\n                  </>\n                )}\n                {' '}\n                last\n                {' '}\n                {salesPeriod}\n                {periodSalesOrderCountDiff >= 0 ? '!' : '.'}\n                <Header as=\"h3\" dividing>\n                  {periodSales.itemCount}\n                  {' '}\n                  items\n                </Header>\n                That&apos;s\n                {' '}\n                {periodSalesItemCountDiff === 0 ? 'exactly the same as' : (\n                  <>\n                    {Math.abs(periodSalesItemCountDiff)}\n                    {' '}\n                    {periodSalesItemCountDiff > 0 ? 'more' : 'fewer'}\n                    {' '}\n                    than\n                  </>\n                )}\n                {' '}\n                last\n                {' '}\n                {salesPeriod}\n                {periodSalesItemCountDiff >= 0 ? '!' : '.'}\n              </Grid.Column>\n              <Grid.Column width={7}>\n                <Segment>\n                  <LineChart data={dashboardOrders} period={salesPeriod} step={PRODUCER_CHART_TIME_PERIODS[salesPeriod]} status={status} />\n                </Segment>\n              </Grid.Column>\n              <Grid.Column className=\"sales-averages\" width={3}>\n                <Header as=\"h5\" className=\"top-level\">\n                  Average Sale Value\n                </Header>\n                <Header>\n                  {!Number.isNaN(periodSales.average)\n                    ? `£${periodSales.average.toFixed(2)}`\n                    : 'No sales to go on!'}\n                </Header>\n                {!Number.isNaN(periodSalesAverageDiff) && (\n                  <>\n                    {periodSalesAverageDiff === 0 ? 'Exactly the same as' : (\n                      <>\n                        £\n                        {Math.abs(periodSalesAverageDiff).toFixed(2)}\n                        {' '}\n                        {periodSalesAverageDiff > 0 ? 'more' : 'less'}\n                        {' '}\n                        than\n                      </>\n                    )}\n                    {' '}\n                    last\n                    {' '}\n                    {salesPeriod}\n                    {periodSalesAverageDiff >= 0 ? '!' : '.'}\n                  </>\n                )}\n                <Header as=\"h5\" className=\"top-level\">\n                  Average Items per Sale\n                </Header>\n                <Header>\n                  {!Number.isNaN(periodSales.averageItems)\n                    ? periodSales.averageItems.toFixed(1)\n                    : 'No sales to go on!'}\n                </Header>\n                {!Number.isNaN(periodSalesAverageItemsDiff) && (\n                  <>\n                    {periodSalesAverageItemsDiff === 0 ? 'Exactly the same as' : (\n                      <>\n                        {Math.abs(periodSalesAverageItemsDiff).toFixed(1)}\n                        {' '}\n                        {periodSalesAverageItemsDiff > 0 ? 'more' : 'fewer'}\n                        {' '}\n                        than\n                      </>\n                    )}\n                    {' '}\n                    last\n                    {' '}\n                    {salesPeriod}\n                    {periodSalesAverageItemsDiff >= 0 ? '!' : '.'}\n                  </>\n                )}\n              </Grid.Column>\n            </Grid>\n          </Segment>\n          <Segment>\n            <Header dividing>\n              Top Customers\n            </Header>\n            <Grid columns={2}>\n              {topCustomers.length ? topCustomers.map((customer) => (\n                <Grid.Row key={customer.businessId}>\n                  <Grid.Column width={12}>\n                    <Image style={{ marginRight: '0.5em' }} avatar bordered centered src={customer.avatarSource || '/images/avatars/blank-avatar.webp'} alt=\"user avatar\" />\n                    <Link to={`/brewery/${customer.businessId}`}>{customer.businessName}</Link>\n                  </Grid.Column>\n                  <Grid.Column width={4}>\n                    £\n                    {customer.salesTotal.toFixed(2)}\n                  </Grid.Column>\n                </Grid.Row>\n              ))\n                : (\n                  <Grid.Row>\n                    <Grid.Column width={16}>\n                      No customers so far this\n                      {' '}\n                      {salesPeriod}\n                      .\n                    </Grid.Column>\n                  </Grid.Row>\n                ) }\n            </Grid>\n          </Segment>\n          <Segment>\n            <Header dividing>\n              Top Items\n            </Header>\n            <Grid columns={2} verticalAlign=\"middle\">\n              {topItems.length ? topItems.map((item) => (\n                <Grid.Row key={item.id}>\n                  <Grid.Column width={8}>\n                    <Image style={{ marginRight: '0.5em' }} avatar bordered centered src={item.imageSource || '/images/products/blank-product.png'} alt=\"product\" />\n                    {item.name}\n                  </Grid.Column>\n                  <Grid.Column width={4}>\n                    {PACK_SIZES[item.packSize]}\n                  </Grid.Column>\n                  <Grid.Column width={4}>\n                    £\n                    {item.salesTotal.toFixed(2)}\n                  </Grid.Column>\n                </Grid.Row>\n              ))\n                : (\n                  <Grid.Row>\n                    <Grid.Column width={16}>\n                      No items sold so far this\n                      {' '}\n                      {salesPeriod}\n                      .\n                    </Grid.Column>\n                  </Grid.Row>\n                )}\n            </Grid>\n          </Segment>\n          <Segment>\n            <Map\n              className=\"profileViewMap\"\n              center={userProfile.location}\n              zoom={6}\n              zoomControl={false}\n              style={{\n                height: '400px',\n              }}\n            >\n              <TileLayer\n                url={MAP_TILE_PROVIDER_URL}\n              />\n              <DistributionAreaDisplay\n                distributionAreas={userProfile.distributionAreas}\n              />\n              <MapMarker location={userProfile.location} />\n              {topCustomers.map((customer) => (\n                <MapMarker key={customer.businessName} type=\"customer\" location={customer.location} name={customer.businessName} />\n              ))}\n              {dashBoardRetailers.filter((customer) => !topCustomers.map((customerObj) => customerObj.businessName).includes(customer.businessName)).map((customer) => (\n                <MapMarker key={customer.businessName} type=\"not-customer\" location={customer.location} name={customer.businessName} />\n              ))}\n            </Map>\n            <Icon style={{ marginTop: '1em' }} color=\"blue\" name=\"map marker alternate\" />\n            - current customers\n            {' '}\n            <Icon color=\"red\" name=\"map marker alternate\" />\n            - potential customers\n          </Segment>\n        </ProducerDashboardStyle>\n      </Segment>\n    </PageWrapper>\n  );\n};\n\nProducerDashboardPage.propTypes = {\n  userProfile: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  dashboardOrders: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  dashBoardRetailers: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  producerDashboardFetching: PropTypes.bool,\n  producerDashboardFetch: PropTypes.func,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userProfile: makeSelectUser(),\n  dashboardOrders: makeSelectProducerDashboardOrders(),\n  dashBoardRetailers: makeSelectProducerDashboardRetailers(),\n  producerDashboardFetching: makeSelectProducerDashboardFetching(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    producerDashboardFetch: () => dispatch(fetchProducerDashboard()),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(\n  withConnect,\n)(ProducerDashboardPage);\n","import styled from 'styled-components';\n\nconst HomepageStyle = styled.div`\n  height: 100%;\n  min-height: calc(100vh - 49px);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .ui.segment {\n    z-index: 2;\n  }\n\n  div.ui.header.primary {\n    color: #FDFDF0;\n    font-size: 5em;\n    font-family: 'Yantramanav', sans-serif;\n    font-weight: 700;\n    margin: 0;\n    letter-spacing: 1px;\n    line-height: 100%;\n  }\n\n  h5.ui.header.sub-header {\n    color: #FDFDF0;\n    font-size: 1.5em;\n    font-family: 'Yantramanav', sans-serif;\n    font-weight: 400;\n    margin: 0 0 1em 0;\n    letter-spacing: 0.5px;\n  }\n\n  .full-page {\n    z-index: 1;\n  }\n\n  .full-page::after {\n    background-color: rgba(0, 0, 0, 0.75);\n    content: ' ';\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    opacity: 1;\n    background-size: cover;\n    background-position: center;\n  }\n\n  .full-page::before {\n    background-image: url(\"./images/homepage-background-1.jpg\");\n    content: ' ';\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    opacity: 1;\n    background-size: cover;\n    background-position: center;\n    filter: blur(2px);\n  }\n`;\n\nexport default HomepageStyle;\n","/*\n * HomePage\n *\n * This is the first thing users see of our App, at the '/' route\n *\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  Header, Segment, Message, Button,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nimport messages from './messages';\nimport PageWrapper from '../../components/PageWrapper';\nimport { makeSelectUser } from '../App/selectors';\nimport RetailerDashboardPage from '../RetailerDashboardPage';\nimport ProducerDashboardPage from '../ProducerDashboardPage';\nimport HomepageStyle from './HomepageStyle';\n\nconst HomePage = ({ userProfile }) => {\n  const { isAuthenticated } = useAuth0();\n\n  // if (!userProfile.sub) {\n  //   userFetch();\n  // }\n  console.log('HOME');\n\n  const homeDisplay = (authenticated, user) => {\n    if (authenticated && !user) {\n      return (\n        <PageWrapper>\n          <Segment basic className=\"primary wrapper\">\n            <Header as=\"h1\">\n              <FormattedMessage {...messages.header} />\n            </Header>\n            <Message>\n              <Message.Header>Create your profile</Message.Header>\n              <p>\n                Click\n                {' '}\n                <strong>\n                  <Link to=\"/create\">here</Link>\n                </strong>\n                {' '}\n                to get started.\n              </p>\n            </Message>\n          </Segment>\n        </PageWrapper>\n      );\n    }\n    if (user && user.role === 'retailer') {\n      return <RetailerDashboardPage />;\n    }\n    if (user && user.role === 'producer') {\n      return <ProducerDashboardPage />;\n    }\n    return (\n      <PageWrapper>\n        <HomepageStyle>\n          <div className=\"full-page\" />\n          <Segment basic textAlign=\"center\">\n            <Header className=\"primary\">\n              BeerLocal\n            </Header>\n            <Header as=\"h5\" className=\"sub-header\">\n              Buy local. Sell local.\n            </Header>\n            <Button size=\"large\" inverted icon=\"angle right\" labelPosition=\"right\" content=\"Get Started\" />\n          </Segment>\n        </HomepageStyle>\n      </PageWrapper>\n    );\n  };\n\n  return (\n    <>\n      {homeDisplay(isAuthenticated, userProfile)}\n    </>\n  );\n};\n\nHomePage.propTypes = {\n  userProfile: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userProfile: makeSelectUser(),\n});\n\nconst withConnect = connect(\n  mapStateToProps,\n);\n\nexport default compose(\n  withConnect,\n)(HomePage);\n","/* eslint-disable no-param-reassign */\nconst calcOrderTotal = (orderItems) => orderItems.reduce((acc, val) => { acc += (val.orderChange !== 'delete' && val.price * val.orderQuant); return acc; }, 0);\n\nexport default calcOrderTotal;\n"],"sourceRoot":""}