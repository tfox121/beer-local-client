{"version":3,"sources":["utils/getImageUrl.js","utils/dataURItoBlob.js","utils/bucket.js","containers/CreateProfilePage/DistroMapStyle.js","../node_modules/semantic-ui-react/node_modules/lodash/mapValues.js","../node_modules/semantic-ui-react/node_modules/lodash/keyBy.js","../node_modules/semantic-ui-react/node_modules/lodash/_createAggregator.js","../node_modules/semantic-ui-react/node_modules/lodash/_arrayAggregator.js","../node_modules/semantic-ui-react/node_modules/lodash/_baseAggregator.js","containers/CreateProfilePage/CreateProfileNavStyle.js","containers/CreateProfilePage/CreateProfileNav.js","containers/CreateProfilePage/BusinessTypeSelectionStyle.js","containers/CreateProfilePage/BusinessTypeSelection.js","containers/CreateProfilePage/MarkerMapStyle.js","containers/CreateProfilePage/ImageSelectStyle.js","containers/CreateProfilePage/ImageSelect.js","containers/CreateProfilePage/ProducerForm.js","../node_modules/semantic-ui-react/dist/es/modules/Transition/TransitionGroup.js","../node_modules/semantic-ui-react/dist/es/modules/Transition/Transition.js","containers/CreateProfilePage/SelectDistroAreasForm.js","containers/CreateProfilePage/RetailerForm.js","containers/CreateProfilePage/CommsOptionsForm.js","containers/CreateProfilePage/index.js","../node_modules/semantic-ui-react/dist/es/lib/childMapping.js","../node_modules/semantic-ui-react/dist/es/lib/normalizeTransitionDuration.js","utils/phoneNumberValidation.js","containers/CreateProfilePage/SuggestBlockStyle.js"],"names":["getImageUrl","sub","type","productId","process","dataURItoBlob","dataURI","mime","split","binary","atob","array","i","length","push","charCodeAt","Blob","Uint8Array","getPresignedRoute","a","getPrivateRoute","privateRoute","post","response","console","log","data","imageToBucket","presignedRoute","imageDataURI","formData","FormData","Object","keys","fields","forEach","formKey","set","axios","url","headers","DistroMapStyle","styled","div","baseAssignValue","require","baseForOwn","baseIteratee","module","exports","object","iteratee","result","value","key","keyBy","createAggregator","arrayAggregator","baseAggregator","isArray","setter","initializer","collection","func","accumulator","index","baseEach","CreateProfileNavStyle","CreateProfileNav","profileStage","backClickHandler","forwardClickHandler","handleSubmit","backButton","Grid","Column","width","as","onClick","Icon","name","size","PROFILE_CREATION_STAGES","textAlign","Row","BusinessTypeSelectionStyle","BusinessTypeSelection","formValues","setFormValues","setProfileStage","useState","visible","setVisible","useEffect","columns","divided","centered","className","Header","MarkerMapStyle","ImageSelectStyle","ImageSelect","avatarSaved","setAvatarSaved","avatar","setAvatar","zoom","setZoom","imageResizeModalOpen","setImageResizeModalOpen","editorRef","createRef","avatarRef","sliderSettings","start","min","max","step","onChange","Image","src","bordered","circular","Button","inverted","basic","icon","current","click","id","ref","accept","hidden","e","target","files","Modal","open","onClose","floated","primary","content","canvasScaled","getImageScaledToCanvas","toDataURL","image","undefined","height","border","scale","color","Content","settings","ProducerForm","formErrors","setFormErrors","mapCentre","setMapCentre","zoomLevel","setZoomLevel","unformattedTel","setUnformattedTel","geosuggestEl","useRef","location","lat","lng","newErrors","telChange","newErrors2","salesContactNumber","ayt","reset","number","handleChange","Form","Input","label","businessName","required","error","pointing","primaryContactName","salesEmail","website","SuggestBlockStyle","google","maps","LatLng","radius","minlegnth","country","onSuggestSelect","suggestion","gmaps","address","formatted_address","onBlur","selectSuggest","autoActivateFirstSuggest","role","aria-atomic","TextArea","placeholder","intro","maxLength","INTRO_CHARACTER_LIMIT","style","fontSize","Checkbox","checked","terms","Map","center","zoomControl","TileLayer","MAP_TILE_PROVIDER_URL","MapMarker","TransitionGroup","_React$Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_defineProperty","_assertThisInitialized","nothing","childProps","reactKey","setState","state","children","_objectSpread","child","options","_this$props","props","animation","directional","duration","_options$visible","_options$transitionOn","transitionOnMount","React","createElement","Transition","onHide","handleOnHide","_children","_mapValues","getChildMapping","wrapChild","_inherits","_createClass","nextProps","_this2","prevMapping","nextMapping","mergeChildMappings","_forEach","hasPrev","_has","hasNext","prevChild","isLeaving","_get","_prevChild$props","cloneElement","ElementType","getElementType","rest","getUnhandledProps","_values","Component","Fragment","propTypes","TRANSITION_TYPE","ENTERING","EXITING","_Component","status","nextStatus","animating","durationType","durationValue","normalizeTransitionDuration","_invoke","timeoutId","setTimeout","handleComplete","handleStart","computeCompletedStatus","callback","computeNextStatus","_this$state","childClasses","_isNil","_includes","SUI","DIRECTIONAL_TRANSITIONS","cx","useKeyOnly","EXITED","unmountOnHide","ENTERED","UNMOUNTED","_this$props2","mountOnShow","initial","next","_this$state2","_this$props3","childStyle","animationDuration","_this$computeInitialS","computeInitialStatuses","_status","updateStatus","_this$computeStatuses","computeStatuses","clearTimeout","computeClasses","computeStyle","SelectDistroAreasForm","editableFG","geojsonData","leafletElement","toGeoJSON","distributionAreas","Group","hide","show","FeatureGroup","reactFGref","onFeatureGroupReady","position","onEdited","onCreated","layerType","onDeleted","draw","rectangle","circle","circlemarker","polyline","marker","polygon","allowIntersection","drawError","message","shapeOptions","Message","warning","RetailerForm","purchasingContactNumber","purchasingEmail","deliveryInstruction","DELIVERY_INSTRUCTION_CHARACTER_LIMIT","CommsOptionsForm","contactOptions","Segment","ordersEmail","ordersWebMobile","followingPhone","followingEmail","stretched","followingWebMobile","upcomingEmail","upcomingWebMobile","usEmail","usWebMobile","CreateProfilePage","userSave","savingUser","user","useAuth0","formTemplate","pictureFile","pictureFileExt","fileValid","producerFormTemplate","retailerFormTemplate","avatarRoute","setAvatarRoute","setAvatarRouteAsync","errors","features","avatarSource","Helmet","PageWrapper","PhoneNumber","isValid","Dimmer","active","page","Loader","mapStateToProps","createStructuredSelector","makeSelectSavingUser","withConnect","connect","dispatch","profileData","saveUser","compose","_keyBy","_filter","Children","toArray","isValidElement","getPendingKeys","prev","nextKeysPending","pendingKeys","_keys","prevKey","getValue","childMapping","_getPendingKeys","_getPendingKeys2","_slicedToArray","nextKey","pendingKey","getAsYouType"],"mappings":"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","file":"static/js/11.da279977.chunk.js","sourcesContent":["const getImageUrl = (sub, type, productId) => type === 'product'\n  ? `${process.env.REACT_APP_CLOUDFRONT_URL}${sub}/${type}/${productId}.png`\n  : `${process.env.REACT_APP_CLOUDFRONT_URL}${sub}/${type}.png`;\n\nexport default getImageUrl;\n","export default function dataURItoBlob(dataURI) {\n  const mime = dataURI.split(',')[0].split(':')[1].split(';')[0];\n  const binary = atob(dataURI.split(',')[1]);\n  const array = [];\n  for (let i = 0; i < binary.length; i += 1) {\n    array.push(binary.charCodeAt(i));\n  }\n  return new Blob([new Uint8Array(array)], { type: mime });\n}\n\nexport function binaryWithMimeToBlob(binary, mime) {\n  const array = [];\n  for (let i = 0; i < binary.length; i += 1) {\n    array.push(binary.charCodeAt(i));\n  }\n  return new Blob([new Uint8Array(array)], { type: mime });\n}\n","import axios from 'axios';\n\nimport dataURItoBlob from './dataURItoBlob';\nimport { getPrivateRoute } from './api';\n\nexport const getPresignedRoute = async (type, productId) => {\n  const privateRoute = await getPrivateRoute();\n  const response = await privateRoute.post('/image', { type, productId });\n  console.log(response);\n  return response.data;\n};\n\nexport const imageToBucket = async (presignedRoute, imageDataURI) => {\n  const formData = new FormData();\n\n  Object.keys(presignedRoute.fields).forEach((formKey) => {\n    formData.set(formKey, presignedRoute.fields[formKey]);\n  });\n  formData.set('file', dataURItoBlob(imageDataURI));\n  return axios.post(\n    presignedRoute.url,\n    formData,\n    {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    },\n  );\n};\n","import styled from 'styled-components';\n\nconst DistroMapStyle = styled.div`\n  height: 100%;\n  width: 100%;\n\n  .leaflet-container {\n    width: 95%;\n    height: 50vh;\n    display: block;\n    z-index: 1;\n    margin: 2em auto;\n  }\n`;\n\nexport default DistroMapStyle;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","import styled from 'styled-components';\n\nconst CreateProfileNavStyle = styled.div`\n  margin-top: auto;\n\n  button {\n    background: none;\n    border: none;\n    cursor: pointer;\n  }\n`;\n\nexport default CreateProfileNavStyle;\n","import React from 'react';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nimport CreateProfileNavStyle from './CreateProfileNavStyle';\n\nimport { PROFILE_CREATION_STAGES } from '../../utils/constants';\n\nconst CreateProfileNav = ({\n  profileStage,\n  backClickHandler,\n  forwardClickHandler,\n  handleSubmit,\n}) => {\n  const backButton = () => (\n    <Grid.Column width=\"2\" as=\"button\" onClick={backClickHandler}>\n      <Icon name=\"angle left\" size=\"big\" />\n      Back\n    </Grid.Column>\n  );\n\n  const forwardButton = () => (\n    <Grid.Column width=\"2\" as=\"button\" onClick={forwardClickHandler}>\n      <Icon name=\"angle right\" size=\"big\" />\n      Continue\n    </Grid.Column>\n  );\n\n  const tickButton = () => (\n    <Grid.Column width=\"2\" as=\"button\" onClick={handleSubmit}>\n      <Icon name=\"check\" size=\"large\" />\n      Complete\n    </Grid.Column>\n  );\n\n  switch (profileStage) {\n    case 0:\n      return null;\n    case PROFILE_CREATION_STAGES:\n      return (\n        <CreateProfileNavStyle>\n          <Grid textAlign=\"center\">\n            <Grid.Row>\n              {backButton()}\n              <Grid.Column width=\"12\" />\n              {tickButton()}\n            </Grid.Row>\n          </Grid>\n        </CreateProfileNavStyle>\n      );\n    default:\n      return (\n        <CreateProfileNavStyle>\n          <Grid textAlign=\"center\">\n            <Grid.Row>\n              {backButton()}\n              <Grid.Column width=\"12\" />\n              {forwardButton()}\n            </Grid.Row>\n          </Grid>\n        </CreateProfileNavStyle>\n      );\n  }\n};\n\nCreateProfileNav.propTypes = {\n  profileStage: PropTypes.number,\n  handleSubmit: PropTypes.func,\n  backClickHandler: PropTypes.func,\n  forwardClickHandler: PropTypes.func,\n};\n\nexport default CreateProfileNav;\n","import styled from 'styled-components';\n\nconst BusinessTypeSelectionStyle = styled.div`\n\ndiv.two.column.grid {\n  margin: auto;\n  height: 90%;\n  width: 90%;\n}\n\ndiv.two.column.grid > div.row {\n  height: 90%;\n  width: 90%;\n}\n/*\n.two.column.grid >  .row > button.column.typeSelector.brewery {\n  margin-right: 2px;\n} */\n\n.two.column.grid >  .row > button.column.typeSelector {\n  position: relative;\n  overflow: hidden;\n  background: none;\n  z-index: 1;\n  border: none;\n  cursor: pointer;\n  color: white;\n  min-height: 75vh;\n}\n\n.two.column.grid >  .row > button.column.typeSelector::after {\n  content: ' ';\n  display: block;\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  opacity: 0.5;\n  background-size: cover;\n  background-position: center;\n}\n\n.two.column.grid >  .row > button.column.typeSelector.producer::after {\n  background-image: url(\"./images/profileCreation/breweryBackground.jpg\");\n}\n\n.two.column.grid >  .row > button.column.typeSelector.retailer::after {\n  background-image: url(\"./images/profileCreation/retailerBackground.jpg\");\n}\n`;\n\nexport default BusinessTypeSelectionStyle;\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Header } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nimport BusinessTypeSelectionStyle from './BusinessTypeSelectionStyle';\n\nconst BusinessTypeSelection = ({\n  profileStage,\n  formValues,\n  setFormValues,\n  setProfileStage,\n}) => {\n  const [visible, setVisible] = useState(true);\n  const handleProducerClick = () => {\n    setFormValues({ ...formValues, type: 'producer' });\n    setProfileStage(1);\n  };\n\n  const handleRetailerClick = () => {\n    setFormValues({ ...formValues, type: 'retailer' });\n    setProfileStage(1);\n  };\n\n  useEffect(() => {\n    if (profileStage === 0) {\n      setVisible(true);\n      return;\n    }\n    setVisible(false);\n  }, [profileStage]);\n\n  return (\n    visible && (\n      <BusinessTypeSelectionStyle>\n        <Grid columns={2} divided centered>\n          <Grid.Row>\n            <Grid.Column\n              className=\"typeSelector producer\"\n              as=\"button\"\n              width={7}\n              textAlign=\"center\"\n              onClick={handleProducerClick}\n            >\n              <Header as=\"h1\">Producer</Header>\n            </Grid.Column>\n            <Grid.Column width={1} />\n            <Grid.Column\n              className=\"typeSelector retailer\"\n              as=\"button\"\n              width={7}\n              textAlign=\"center\"\n              onClick={handleRetailerClick}\n            >\n              <Header as=\"h1\">Retailer</Header>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </BusinessTypeSelectionStyle>\n    )\n  );\n};\n\nBusinessTypeSelection.propTypes = {\n  profileStage: PropTypes.number,\n  formValues: PropTypes.object,\n  setFormValues: PropTypes.func,\n  setProfileStage: PropTypes.func,\n};\n\nexport default BusinessTypeSelection;\n","import styled from 'styled-components';\n\nconst MarkerMapStyle = styled.div`\n  height: 70%;\n  width: 100%;\n\n  .leaflet-container {\n    width: 97%;\n    height: 80%;\n    display: block;\n    z-index: 1;\n    margin-top: 2em;\n  }\n`;\n\nexport default MarkerMapStyle;\n","import styled from 'styled-components';\n\nconst ImageSelectStyle = styled.div`\n  position: relative;\n  width: 100%;\n\n  button.button.image-button {\n    border-radius: 50%;\n    width: 48px;\n    height: 48px;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    background-color: #555;\n    color: white;\n    font-size: 16px;\n    padding: 12px 24px;\n    border: none;\n    cursor: pointer;\n\n    i.camera.icon {\n      height: auto;\n    }\n  }\n`;\n\nexport default ImageSelectStyle;\n","import React, { useState, createRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Image, Button, Modal,\n} from 'semantic-ui-react';\nimport { Slider } from 'react-semantic-ui-range';\nimport AvatarEditor from 'react-avatar-editor';\nimport ImageSelectStyle from './ImageSelectStyle';\n\nconst ImageSelect = ({ avatarSaved, setAvatarSaved }) => {\n  const [avatar, setAvatar] = useState({});\n  const [zoom, setZoom] = useState(1);\n  const [imageResizeModalOpen, setImageResizeModalOpen] = useState(false);\n\n  const editorRef = createRef();\n  const avatarRef = createRef();\n\n  useEffect(() => {\n    if (!avatar) {\n      setImageResizeModalOpen(false);\n    } else if (avatar.name) {\n      setImageResizeModalOpen(true);\n    }\n  }, [avatar]);\n\n  const sliderSettings = {\n    start: 1,\n    min: 0.5,\n    max: 3,\n    step: 0.05,\n    onChange: (value) => {\n      setZoom(value);\n    },\n  };\n\n  const handleModalClose = () => {\n    setAvatar({});\n    setImageResizeModalOpen(false);\n  };\n\n  const handleApply = () => {\n    if (editorRef.current) {\n      const canvasScaled = editorRef.current.getImageScaledToCanvas();\n      if (avatar.name) {\n        setAvatar({});\n        setAvatarSaved(canvasScaled.toDataURL());\n      }\n    }\n    setImageResizeModalOpen(false);\n  };\n\n  return (\n    <>\n      <strong>Profile Picture</strong>\n      <ImageSelectStyle>\n        <Image className=\"profile-image\" src={avatarSaved || '/images/avatars/blank-avatar.webp'} size=\"small\" bordered centered circular />\n        <Button inverted circular basic className=\"image-button\" icon=\"camera\" onClick={() => avatarRef.current.click()} />\n        <input\n          id=\"avatarUpload\"\n          ref={avatarRef}\n          type=\"file\"\n          accept=\".png,.jpg,.jpeg,.svg,.webp,.gif\"\n          hidden\n          onChange={(e) => setAvatar(e.target.files[0])}\n        />\n      </ImageSelectStyle>\n      <Modal className=\"image-resizer\" open={imageResizeModalOpen} onClose={handleModalClose}>\n        <Modal.Header>\n          <Button floated=\"left\" basic icon=\"left arrow\" onClick={() => setImageResizeModalOpen(false)} />\n          Edit picture\n          {' '}\n          <Button primary floated=\"right\" content=\"Apply\" onClick={handleApply} />\n        </Modal.Header>\n        <AvatarEditor\n          ref={editorRef}\n          image={avatar.name ? avatar : undefined}\n          width={avatar.name ? 300 : 750}\n          height={avatar.name ? 300 : 250}\n          border={25}\n          scale={zoom}\n          color={[255, 255, 255, 0.6]}\n        />\n        <Modal.Content>\n          <Slider value={zoom} color=\"blue\" settings={sliderSettings} />\n        </Modal.Content>\n      </Modal>\n    </>\n  );\n};\n\nImageSelect.propTypes = {\n  avatarSaved: PropTypes.string,\n  setAvatarSaved: PropTypes.func,\n};\n\nexport default ImageSelect;\n","import { TileLayer, Map } from 'react-leaflet';\nimport { Grid, Form } from 'semantic-ui-react';\nimport React, {\n  useEffect, useState, useRef,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Geosuggest from 'react-geosuggest';\nimport ayt from '../../utils/phoneNumberValidation';\n\nimport MapMarker from '../../components/MapMarker';\nimport SuggestBlockStyle from './SuggestBlockStyle';\nimport MarkerMapStyle from './MarkerMapStyle';\nimport ImageSelect from './ImageSelect';\nimport { INTRO_CHARACTER_LIMIT, MAP_TILE_PROVIDER_URL } from '../../utils/constants';\n\nconst ProducerForm = ({\n  formValues,\n  setFormValues,\n  formErrors,\n  setFormErrors,\n  profileStage,\n  mapCentre,\n  setMapCentre,\n  avatarSaved,\n  setAvatarSaved,\n}) => {\n  const [zoomLevel, setZoomLevel] = useState(5);\n  const [visible, setVisible] = useState(false);\n  const [unformattedTel, setUnformattedTel] = useState('');\n  const geosuggestEl = useRef(null);\n\n  useEffect(() => {\n    if (profileStage === 1 && formValues.type === 'producer') {\n      setVisible(true);\n      return;\n    }\n    setVisible(false);\n  }, [formValues.type, profileStage]);\n\n  useEffect(() => {\n    if (formValues.location && formValues.location.lat) {\n      setMapCentre([formValues.location.lat, formValues.location.lng]);\n      setZoomLevel(15);\n    }\n  }, [setMapCentre, formValues.location]);\n\n  useEffect(() => {\n    const newErrors = { ...formErrors };\n    const telChange = (e, { name, value }) => {\n      const newErrors2 = { ...formErrors };\n      delete newErrors2[name];\n      setFormErrors({ ...newErrors2 });\n      setFormValues({ ...formValues, [name]: value });\n    };\n\n    delete newErrors.salesContactNumber;\n    setFormErrors({ ...newErrors });\n    if (unformattedTel === '') {\n      ayt.reset(null);\n      telChange(null, { name: 'salesContactNumber', value: '' });\n    } else {\n      ayt.reset(unformattedTel);\n      telChange(null, { name: 'salesContactNumber', value: ayt.number() });\n    }\n  }, [unformattedTel, formErrors, setFormErrors, formValues, setFormValues]);\n\n  const handleChange = (e, { name, value }) => {\n    const newErrors = { ...formErrors };\n    delete newErrors[name];\n    setFormErrors({ ...newErrors });\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  const handleCheckboxChange = () => {\n    const newErrors = { ...formErrors };\n    delete newErrors.terms;\n    setFormErrors({ ...newErrors });\n    setFormValues({ ...formValues, terms: !formValues.terms });\n  };\n\n  const handleSuggestSelect = (suggestion) => {\n    if (suggestion) {\n      console.log(suggestion);\n      const { location, gmaps } = suggestion;\n      const newErrors = { ...formErrors };\n      delete newErrors.location;\n      setFormErrors({ ...newErrors });\n      setFormValues({ ...formValues, location, address: gmaps.formatted_address });\n    }\n  };\n\n  return (\n    visible && (\n      <Grid centered columns={2}>\n        <Grid.Row>\n          <Grid.Column width={10}>\n            <Form>\n              <Form.Input\n                label=\"Brewery name\"\n                name=\"businessName\"\n                value={formValues.businessName}\n                required\n                onChange={handleChange}\n                error={\n                  formErrors.businessName && {\n                    content: formErrors.businessName,\n                    pointing: 'above',\n                  }\n                }\n              />\n              <Form.Input\n                label=\"Sales contact name\"\n                name=\"primaryContactName\"\n                value={formValues.primaryContactName}\n                required\n                onChange={handleChange}\n                error={\n                  formErrors.primaryContactName && {\n                    content: formErrors.primaryContactName,\n                    pointing: 'above',\n                  }\n                }\n              />\n              <Form.Input\n                label=\"Sales email address\"\n                name=\"salesEmail\"\n                type=\"email\"\n                value={formValues.salesEmail}\n                required\n                onChange={handleChange}\n                error={\n                  formErrors.salesEmail && {\n                    content: formErrors.salesEmail,\n                    pointing: 'above',\n                  }\n                }\n              />\n              <Form.Input\n                label=\"Sales contact number\"\n                name=\"salesContactNumber\"\n                type=\"tel\"\n                value={formValues.salesContactNumber}\n                onChange={(e) => setUnformattedTel(e.target.value)}\n                error={\n                  formErrors.salesContactNumber && {\n                    content: formErrors.salesContactNumber,\n                    pointing: 'above',\n                  }\n                }\n              />\n              <Form.Input\n                label=\"Website\"\n                name=\"website\"\n                type=\"url\"\n                value={formValues.website}\n                onChange={handleChange}\n              />\n              <div\n                className={`${formErrors.location && 'error'} required field`}\n              >\n                <SuggestBlockStyle>\n                  <Geosuggest\n                    ref={geosuggestEl}\n                    label=\"Location\"\n                    id=\"breweryLocation\"\n                    location={\n                      // eslint-disable-next-line no-undef\n                      new google.maps.LatLng(mapCentre[0], mapCentre[1])\n                    }\n                    radius=\"1500\"\n                    minlegnth=\"3\"\n                    country=\"gb\"\n                    onSuggestSelect={handleSuggestSelect}\n                    onBlur={() => geosuggestEl.current.selectSuggest()}\n                    autoActivateFirstSuggest\n                    required\n                  />\n                </SuggestBlockStyle>\n                {formErrors.location && (\n                  <div\n                    className=\"ui pointing above prompt label\"\n                    role=\"alert\"\n                    aria-atomic=\"true\"\n                  >\n                    This field is required\n                  </div>\n                )}\n              </div>\n              <br />\n              <Form.TextArea\n                label=\"Intro\"\n                placeholder=\"Tell us more about the brewery...\"\n                value={formValues.intro}\n                name=\"intro\"\n                onChange={handleChange}\n                maxLength={INTRO_CHARACTER_LIMIT}\n              />\n              {!!formValues.intro.length && (\n                <p style={{ textAlign: 'right', fontSize: '10px' }}>\n                  {formValues.intro.length}\n                  /\n                  {INTRO_CHARACTER_LIMIT}\n                </p>\n              )}\n              <Form.Checkbox\n                label=\"I agree to the Terms and Conditions\"\n                name=\"terms\"\n                // value={formValues.terms}\n                checked={formValues.terms}\n                required\n                onChange={handleCheckboxChange}\n                error={\n                  formErrors.terms && {\n                    content: formErrors.terms,\n                    pointing: 'right',\n                  }\n                }\n              />\n            </Form>\n          </Grid.Column>\n          <Grid.Column width={6}>\n            <ImageSelect avatarSaved={avatarSaved} setAvatarSaved={setAvatarSaved} />\n            {formValues.location && formValues.location.lat && (\n              <MarkerMapStyle>\n                <Map center={mapCentre} zoom={zoomLevel} zoomControl={false}>\n                  <TileLayer\n                    url={MAP_TILE_PROVIDER_URL}\n                  />\n                  <MapMarker location={formValues.location} />\n                </Map>\n              </MarkerMapStyle>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  );\n};\n\nProducerForm.propTypes = {\n  formValues: PropTypes.object,\n  setFormValues: PropTypes.func,\n  formErrors: PropTypes.object,\n  setFormErrors: PropTypes.func,\n  profileStage: PropTypes.number,\n  mapCentre: PropTypes.array,\n  setMapCentre: PropTypes.func,\n  avatarSaved: PropTypes.string,\n  setAvatarSaved: PropTypes.func,\n};\n\nexport default ProducerForm;\n","import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _values from \"lodash/values\";\nimport _get from \"lodash/get\";\nimport _has from \"lodash/has\";\nimport _forEach from \"lodash/forEach\";\nimport _mapValues from \"lodash/mapValues\";\nimport PropTypes from 'prop-types';\nimport React, { cloneElement, Fragment } from 'react';\nimport { getChildMapping, getElementType, getUnhandledProps, mergeChildMappings, SUI } from '../../lib';\nimport Transition from './Transition';\n\n/**\n * A Transition.Group animates children as they mount and unmount.\n */\nvar TransitionGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TransitionGroup, _React$Component);\n\n  function TransitionGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TransitionGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TransitionGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnHide\", function (nothing, childProps) {\n      var reactKey = childProps.reactKey;\n\n      _this.setState(function (state) {\n        var children = _objectSpread({}, state.children);\n\n        delete children[reactKey];\n        return {\n          children: children\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"wrapChild\", function (child) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _this$props = _this.props,\n          animation = _this$props.animation,\n          directional = _this$props.directional,\n          duration = _this$props.duration;\n      var key = child.key;\n      var _options$visible = options.visible,\n          visible = _options$visible === void 0 ? true : _options$visible,\n          _options$transitionOn = options.transitionOnMount,\n          transitionOnMount = _options$transitionOn === void 0 ? false : _options$transitionOn;\n      return React.createElement(Transition, {\n        animation: animation,\n        directional: directional,\n        duration: duration,\n        key: key,\n        onHide: _this.handleOnHide,\n        reactKey: key,\n        transitionOnMount: transitionOnMount,\n        visible: visible\n      }, child);\n    });\n\n    var _children = _this.props.children;\n    _this.state = {\n      children: _mapValues(getChildMapping(_children), function (child) {\n        return _this.wrapChild(child);\n      })\n    };\n    return _this;\n  } // eslint-disable-next-line camelcase\n\n\n  _createClass(TransitionGroup, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var prevMapping = this.state.children;\n      var nextMapping = getChildMapping(nextProps.children);\n      var children = mergeChildMappings(prevMapping, nextMapping);\n\n      _forEach(children, function (child, key) {\n        var hasPrev = _has(prevMapping, key);\n\n        var hasNext = _has(nextMapping, key);\n\n        var prevChild = prevMapping[key];\n        var isLeaving = !_get(prevChild, 'props.visible'); // Heads up!\n        // An item is new (entering), it will be picked from `nextChildren`, so it should be wrapped\n\n        if (hasNext && (!hasPrev || isLeaving)) {\n          children[key] = _this2.wrapChild(child, {\n            transitionOnMount: true\n          });\n          return;\n        } // Heads up!\n        // An item is old (exiting), it will be picked from `prevChildren`, so it has been already\n        // wrapped, so should be only updated\n\n\n        if (!hasNext && hasPrev && !isLeaving) {\n          children[key] = cloneElement(prevChild, {\n            visible: false\n          });\n          return;\n        } // Heads up!\n        // An item item hasn't changed transition states, but it will be picked from `nextChildren`,\n        // so we should wrap it again\n\n\n        var _prevChild$props = prevChild.props,\n            visible = _prevChild$props.visible,\n            transitionOnMount = _prevChild$props.transitionOnMount;\n        children[key] = _this2.wrapChild(child, {\n          transitionOnMount: transitionOnMount,\n          visible: visible\n        });\n      });\n\n      this.setState({\n        children: children\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.state.children;\n      var ElementType = getElementType(TransitionGroup, this.props);\n      var rest = getUnhandledProps(TransitionGroup, this.props);\n      return React.createElement(ElementType, rest, _values(children));\n    }\n  }]);\n\n  return TransitionGroup;\n}(React.Component);\n\n_defineProperty(TransitionGroup, \"defaultProps\", {\n  as: Fragment,\n  animation: 'fade',\n  duration: 500\n});\n\n_defineProperty(TransitionGroup, \"handledProps\", [\"animation\", \"as\", \"children\", \"directional\", \"duration\"]);\n\nexport { TransitionGroup as default };\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Named animation event to used. Must be defined in CSS. */\n  animation: PropTypes.oneOfType([PropTypes.oneOf(SUI.TRANSITIONS), PropTypes.string]),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Whether it is directional animation event or not. Use it only for custom transitions. */\n  directional: PropTypes.bool,\n\n  /** Duration of the CSS transition animation in milliseconds. */\n  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    hide: PropTypes.number.isRequired,\n    show: PropTypes.number.isRequired\n  }), PropTypes.string])\n} : {};","import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _includes from \"lodash/includes\";\nimport _isNil from \"lodash/isNil\";\nimport _get from \"lodash/get\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { cloneElement, Component } from 'react';\nimport { normalizeTransitionDuration, SUI, useKeyOnly } from '../../lib';\nimport TransitionGroup from './TransitionGroup';\nvar TRANSITION_TYPE = {\n  ENTERING: 'show',\n  EXITING: 'hide'\n  /**\n   * A transition is an animation usually used to move content in or out of view.\n   */\n\n};\n\nvar Transition =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Transition, _Component);\n\n  function Transition() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Transition);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Transition)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleStart\", function () {\n      var duration = _this.props.duration;\n      var status = _this.nextStatus;\n      _this.nextStatus = null;\n\n      _this.setState({\n        status: status,\n        animating: true\n      }, function () {\n        var durationType = TRANSITION_TYPE[status];\n        var durationValue = normalizeTransitionDuration(duration, durationType);\n\n        _invoke(_this.props, 'onStart', null, _objectSpread({}, _this.props, {\n          status: status\n        }));\n\n        _this.timeoutId = setTimeout(_this.handleComplete, durationValue);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleComplete\", function () {\n      var current = _this.state.status;\n\n      _invoke(_this.props, 'onComplete', null, _objectSpread({}, _this.props, {\n        status: current\n      }));\n\n      if (_this.nextStatus) {\n        _this.handleStart();\n\n        return;\n      }\n\n      var status = _this.computeCompletedStatus();\n\n      var callback = current === Transition.ENTERING ? 'onShow' : 'onHide';\n\n      _this.setState({\n        status: status,\n        animating: false\n      }, function () {\n        _invoke(_this.props, callback, null, _objectSpread({}, _this.props, {\n          status: status\n        }));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateStatus\", function () {\n      var animating = _this.state.animating;\n\n      if (_this.nextStatus) {\n        _this.nextStatus = _this.computeNextStatus();\n        if (!animating) _this.handleStart();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeClasses\", function () {\n      var _this$props = _this.props,\n          animation = _this$props.animation,\n          directional = _this$props.directional,\n          children = _this$props.children;\n      var _this$state = _this.state,\n          animating = _this$state.animating,\n          status = _this$state.status;\n\n      var childClasses = _get(children, 'props.className');\n\n      var isDirectional = _isNil(directional) ? _includes(SUI.DIRECTIONAL_TRANSITIONS, animation) : directional;\n\n      if (isDirectional) {\n        return cx(animation, childClasses, useKeyOnly(animating, 'animating'), useKeyOnly(status === Transition.ENTERING, 'in'), useKeyOnly(status === Transition.EXITING, 'out'), useKeyOnly(status === Transition.EXITED, 'hidden'), useKeyOnly(status !== Transition.EXITED, 'visible'), 'transition');\n      }\n\n      return cx(animation, childClasses, useKeyOnly(animating, 'animating transition'));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeCompletedStatus\", function () {\n      var unmountOnHide = _this.props.unmountOnHide;\n      var status = _this.state.status;\n      if (status === Transition.ENTERING) return Transition.ENTERED;\n      return unmountOnHide ? Transition.UNMOUNTED : Transition.EXITED;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeInitialStatuses\", function () {\n      var _this$props2 = _this.props,\n          visible = _this$props2.visible,\n          mountOnShow = _this$props2.mountOnShow,\n          transitionOnMount = _this$props2.transitionOnMount,\n          unmountOnHide = _this$props2.unmountOnHide;\n\n      if (visible) {\n        if (transitionOnMount) {\n          return {\n            initial: Transition.EXITED,\n            next: Transition.ENTERING\n          };\n        }\n\n        return {\n          initial: Transition.ENTERED\n        };\n      }\n\n      if (mountOnShow || unmountOnHide) return {\n        initial: Transition.UNMOUNTED\n      };\n      return {\n        initial: Transition.EXITED\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeNextStatus\", function () {\n      var _this$state2 = _this.state,\n          animating = _this$state2.animating,\n          status = _this$state2.status;\n      if (animating) return status === Transition.ENTERING ? Transition.EXITING : Transition.ENTERING;\n      return status === Transition.ENTERED ? Transition.EXITING : Transition.ENTERING;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeStatuses\", function (props) {\n      var status = _this.state.status;\n      var visible = props.visible;\n\n      if (visible) {\n        return {\n          current: status === Transition.UNMOUNTED && Transition.EXITED,\n          next: status !== Transition.ENTERING && status !== Transition.ENTERED && Transition.ENTERING\n        };\n      }\n\n      return {\n        next: (status === Transition.ENTERING || status === Transition.ENTERED) && Transition.EXITING\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeStyle\", function () {\n      var _this$props3 = _this.props,\n          children = _this$props3.children,\n          duration = _this$props3.duration;\n      var status = _this.state.status;\n\n      var childStyle = _get(children, 'props.style');\n\n      var type = TRANSITION_TYPE[status];\n      var animationDuration = type && \"\".concat(normalizeTransitionDuration(duration, type), \"ms\");\n      return _objectSpread({}, childStyle, {\n        animationDuration: animationDuration\n      });\n    });\n\n    var _this$computeInitialS = _this.computeInitialStatuses(),\n        _status = _this$computeInitialS.initial,\n        next = _this$computeInitialS.next;\n\n    _this.nextStatus = next;\n    _this.state = {\n      status: _status\n    };\n    return _this;\n  } // ----------------------------------------\n  // Lifecycle\n  // ----------------------------------------\n\n\n  _createClass(Transition, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateStatus();\n    } // eslint-disable-next-line camelcase\n\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$computeStatuses = this.computeStatuses(nextProps),\n          status = _this$computeStatuses.current,\n          next = _this$computeStatuses.next;\n\n      this.nextStatus = next;\n      if (status) this.setState({\n        status: status\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateStatus();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeoutId);\n    } // ----------------------------------------\n    // Callback handling\n    // ----------------------------------------\n\n  }, {\n    key: \"render\",\n    // ----------------------------------------\n    // Render\n    // ----------------------------------------\n    value: function render() {\n      var children = this.props.children;\n      var status = this.state.status;\n      if (status === Transition.UNMOUNTED) return null;\n      return cloneElement(children, {\n        className: this.computeClasses(),\n        style: this.computeStyle()\n      });\n    }\n  }]);\n\n  return Transition;\n}(Component);\n\n_defineProperty(Transition, \"defaultProps\", {\n  animation: 'fade',\n  duration: 500,\n  visible: true,\n  mountOnShow: true,\n  transitionOnMount: false,\n  unmountOnHide: false\n});\n\n_defineProperty(Transition, \"ENTERED\", 'ENTERED');\n\n_defineProperty(Transition, \"ENTERING\", 'ENTERING');\n\n_defineProperty(Transition, \"EXITED\", 'EXITED');\n\n_defineProperty(Transition, \"EXITING\", 'EXITING');\n\n_defineProperty(Transition, \"UNMOUNTED\", 'UNMOUNTED');\n\n_defineProperty(Transition, \"Group\", TransitionGroup);\n\n_defineProperty(Transition, \"handledProps\", [\"animation\", \"children\", \"directional\", \"duration\", \"mountOnShow\", \"onComplete\", \"onHide\", \"onShow\", \"onStart\", \"reactKey\", \"transitionOnMount\", \"unmountOnHide\", \"visible\"]);\n\nexport { Transition as default };\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Named animation event to used. Must be defined in CSS. */\n  animation: PropTypes.oneOfType([PropTypes.oneOf(SUI.TRANSITIONS), PropTypes.string]),\n\n  /** Primary content. */\n  children: PropTypes.element.isRequired,\n\n  /** Whether it is directional animation event or not. Use it only for custom transitions. */\n  directional: PropTypes.bool,\n\n  /** Duration of the CSS transition animation in milliseconds. */\n  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    hide: PropTypes.number,\n    show: PropTypes.number\n  }), PropTypes.string]),\n\n  /** Show the component; triggers the enter or exit animation. */\n  visible: PropTypes.bool,\n\n  /** Wait until the first \"enter\" transition to mount the component (add it to the DOM). */\n  mountOnShow: PropTypes.bool,\n\n  /**\n   * Callback on each transition that changes visibility to shown.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onComplete: PropTypes.func,\n\n  /**\n   * Callback on each transition that changes visibility to hidden.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Callback on each transition that changes visibility to shown.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * Callback on animation start.\n   *\n   * @param {null}\n   * @param {object} data - All props with status.\n   */\n  onStart: PropTypes.func,\n\n  /** React's key of the element. */\n  reactKey: PropTypes.string,\n\n  /** Run the enter animation when the component mounts, if it is initially shown. */\n  transitionOnMount: PropTypes.bool,\n\n  /** Unmount the component (remove it from the DOM) when it is not shown. */\n  unmountOnHide: PropTypes.bool\n} : {};","/* eslint-disable global-require */\nimport React, { useState, useEffect } from 'react';\nimport { Transition, Message } from 'semantic-ui-react';\nimport { Map, TileLayer, FeatureGroup } from 'react-leaflet';\nimport { EditControl } from 'react-leaflet-draw';\nimport PropTypes from 'prop-types';\n\nimport MapMarker from '../../components/MapMarker';\nimport DistroMapStyle from './DistroMapStyle';\nimport { MAP_TILE_PROVIDER_URL } from '../../utils/constants';\n\nconst SelectDistroAreasForm = ({\n  formValues,\n  setFormValues,\n  formErrors,\n  setFormErrors,\n  profileStage,\n  mapCentre,\n}) => {\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    if (profileStage === 2 && formValues.type === 'producer') {\n      setVisible(true);\n      return;\n    }\n    setVisible(false);\n  }, [formValues.type, profileStage]);\n\n  let editableFG = null;\n\n  const onFeatureGroupReady = (reactFGref) => {\n    if (reactFGref) {\n      editableFG = reactFGref;\n    }\n  };\n\n  const onChange = () => {\n    if (!editableFG || !onChange) {\n      return;\n    }\n    const geojsonData = editableFG.leafletElement.toGeoJSON();\n\n    const newErrors = { ...formErrors };\n    delete newErrors.distributionAreas;\n    setFormErrors({ ...newErrors });\n    setFormValues({ ...formValues, distributionAreas: geojsonData });\n  };\n\n  const onEdited = () => {\n    onChange();\n  };\n\n  const onCreated = (e) => {\n    const type = e.layerType;\n    console.log('onCreated: something else created:', type, e);\n\n    onChange();\n  };\n\n  const onDeleted = () => {\n    onChange();\n  };\n\n  return (\n    <Transition.Group animation=\"fade\" duration={{ hide: 500, show: 2000 }}>\n      {visible && (\n        <>\n          <p>\n            Use the tools at the top right to draw shapes corresponding to the\n            areas that you distribute to.\n            <br />\n            Make sure to complete your shape by clicking the first point again\n            or the &quot;Finish&quot; button at the top right.\n            <br />\n            Hit &quot;Complete&quot; below when you&apos;re done\n          </p>\n          <DistroMapStyle>\n            <Map center={mapCentre} zoom={10} zoomControl={false}>\n              <TileLayer\n                url={MAP_TILE_PROVIDER_URL}\n              />\n              <MapMarker location={formValues.location} />\n              <FeatureGroup\n                ref={(reactFGref) => {\n                  onFeatureGroupReady(reactFGref);\n                }}\n              >\n                <EditControl\n                  position=\"topright\"\n                  onEdited={onEdited}\n                  onCreated={onCreated}\n                  onDeleted={onDeleted}\n                  draw={{\n                    rectangle: false,\n                    circle: false,\n                    circlemarker: false,\n                    polyline: false,\n                    marker: false,\n                    polygon: {\n                      allowIntersection: false,\n                      drawError: {\n                        color: '#e1e100',\n                        message:\n                          \"<strong>Oh snap!<strong> you can't draw that!\",\n                      },\n                      shapeOptions: {\n                        color: '#009dd6',\n                      },\n                    },\n                  }}\n                />\n              </FeatureGroup>\n            </Map>\n          </DistroMapStyle>\n          {formErrors.distributionAreas && (\n            <Message warning>\n              <Message.Header>Error</Message.Header>\n              <p>{formErrors.distributionAreas}</p>\n            </Message>\n          )}\n        </>\n      )}\n    </Transition.Group>\n  );\n};\n\nSelectDistroAreasForm.propTypes = {\n  profileStage: PropTypes.number,\n  formValues: PropTypes.object,\n  setFormValues: PropTypes.func,\n  mapCentre: PropTypes.array,\n  formErrors: PropTypes.object,\n  setFormErrors: PropTypes.func,\n};\n\nexport default SelectDistroAreasForm;\n","import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { TileLayer, Map } from 'react-leaflet';\nimport { Grid, Form } from 'semantic-ui-react';\nimport Geosuggest from 'react-geosuggest';\n\nimport ayt from '../../utils/phoneNumberValidation';\n\nimport MapMarker from '../../components/MapMarker';\nimport MarkerMapStyle from './MarkerMapStyle';\nimport SuggestBlockStyle from './SuggestBlockStyle';\nimport ImageSelect from './ImageSelect';\nimport { DELIVERY_INSTRUCTION_CHARACTER_LIMIT, MAP_TILE_PROVIDER_URL } from '../../utils/constants';\n\nconst RetailerForm = ({\n  formValues,\n  setFormValues,\n  formErrors,\n  setFormErrors,\n  profileStage,\n  mapCentre,\n  setMapCentre,\n  avatarSaved,\n  setAvatarSaved,\n}) => {\n  const [zoomLevel, setZoomLevel] = useState(5);\n  const [visible, setVisible] = useState(false);\n  const [unformattedTel, setUnformattedTel] = useState('');\n  const geosuggestEl = useRef(null);\n\n  useEffect(() => {\n    if (profileStage === 1 && formValues.type === 'retailer') {\n      setVisible(true);\n      return;\n    }\n    setVisible(false);\n  }, [formValues.type, profileStage]);\n\n  useEffect(() => {\n    if (formValues.location && formValues.location.lat) {\n      setMapCentre([formValues.location.lat, formValues.location.lng]);\n      setZoomLevel(15);\n    }\n  }, [setMapCentre, formValues.location]);\n\n  useEffect(() => {\n    const newErrors = { ...formErrors };\n    const telChange = (e, { name, value }) => {\n      const newErrors2 = { ...formErrors };\n      delete newErrors2[name];\n      setFormErrors({ ...newErrors2 });\n      setFormValues({ ...formValues, [name]: value });\n    };\n    delete newErrors.purchasingContactNumber;\n    setFormErrors({ ...newErrors });\n    if (unformattedTel === '') {\n      ayt.reset(null);\n      telChange(null, { name: 'purchasingContactNumber', value: '' });\n    } else {\n      ayt.reset(unformattedTel);\n      telChange(null, {\n        name: 'purchasingContactNumber',\n        value: ayt.number(),\n      });\n    }\n  }, [unformattedTel, formErrors, setFormErrors, formValues, setFormValues]);\n\n  const handleChange = (e, { name, value }) => {\n    const newErrors = { ...formErrors };\n    delete newErrors[name];\n    setFormErrors({ ...newErrors });\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  const handleCheckboxChange = () => {\n    const newErrors = { ...formErrors };\n    delete newErrors.terms;\n    setFormErrors({ ...newErrors });\n    setFormValues({ ...formValues, terms: !formValues.terms });\n  };\n\n  const handleSuggestSelect = (suggestion) => {\n    if (suggestion) {\n      const { location, gmaps } = suggestion;\n      const newErrors = { ...formErrors };\n      delete newErrors.location;\n      setFormErrors({ ...newErrors });\n      setFormValues({ ...formValues, location, address: gmaps.formatted_address });\n    }\n  };\n\n  return (\n    visible && (\n      <Grid centered columns={2}>\n        <Grid.Row>\n          <Grid.Column width={10}>\n            <Form>\n              <Form.Input\n                label=\"Premises name\"\n                name=\"businessName\"\n                value={formValues.businessName}\n                required\n                onChange={handleChange}\n                error={\n                  formErrors.businessName && {\n                    content: formErrors.businessName,\n                    pointing: 'above',\n                  }\n                }\n              />\n              <Form.Input\n                label=\"Primary contact name\"\n                name=\"primaryContactName\"\n                value={formValues.primaryContactName}\n                required\n                onChange={handleChange}\n                error={\n                  formErrors.primaryContactName && {\n                    content: formErrors.primaryContactName,\n                    pointing: 'above',\n                  }\n                }\n              />\n              <Form.Input\n                label=\"Purchasing email address\"\n                name=\"purchasingEmail\"\n                type=\"email\"\n                value={formValues.purchasingEmail}\n                required\n                onChange={handleChange}\n                error={\n                  formErrors.purchasingEmail && {\n                    content: formErrors.purchasingEmail,\n                    pointing: 'above',\n                  }\n                }\n              />\n              <Form.Input\n                label=\"Purchasing contact number\"\n                name=\"purchasingContactNumber\"\n                type=\"tel\"\n                value={formValues.purchasingContactNumber}\n                onChange={(e) => setUnformattedTel(e.target.value)}\n                error={\n                  formErrors.purchasingContactNumber && {\n                    content: formErrors.purchasingContactNumber,\n                    pointing: 'above',\n                  }\n                }\n              />\n              <div\n                className={`${formErrors.location && 'error'} required field`}\n              >\n                <SuggestBlockStyle>\n                  <Geosuggest\n                    ref={geosuggestEl}\n                    label=\"Location\"\n                    id=\"Location\"\n                    location={\n                      // eslint-disable-next-line no-undef\n                      new google.maps.LatLng(mapCentre[0], mapCentre[1])\n                    }\n                    radius=\"1500\"\n                    minlegnth=\"3\"\n                    country=\"gb\"\n                    onSuggestSelect={handleSuggestSelect}\n                    onBlur={() => geosuggestEl.current.selectSuggest()}\n                    autoActivateFirstSuggest\n                    required\n                  />\n                </SuggestBlockStyle>\n                {formErrors.location && (\n                  <div\n                    className=\"ui pointing above prompt label\"\n                    role=\"alert\"\n                    aria-atomic=\"true\"\n                  >\n                    This field is required\n                  </div>\n                )}\n              </div>\n              <br />\n              <Form.TextArea\n                label=\"Delivery Instruction\"\n                placeholder=\"Any delivery restrictions or instructions...\"\n                value={formValues.deliveryInstruction}\n                name=\"deliveryInstruction\"\n                onChange={handleChange}\n                maxLength={DELIVERY_INSTRUCTION_CHARACTER_LIMIT}\n              />\n              {!!formValues.deliveryInstruction.length && (\n                <p style={{ textAlign: 'right', fontSize: '10px' }}>\n                  {formValues.deliveryInstruction.length}\n                  /\n                  {DELIVERY_INSTRUCTION_CHARACTER_LIMIT}\n                </p>\n              )}\n              <Form.Checkbox\n                label=\"I agree to the Terms and Conditions\"\n                name=\"terms\"\n                // value={formValues.terms}\n                checked={formValues.terms}\n                required\n                onChange={handleCheckboxChange}\n                error={\n                  formErrors.terms && {\n                    content: formErrors.terms,\n                    pointing: 'right',\n                  }\n                }\n              />\n            </Form>\n          </Grid.Column>\n          <Grid.Column width={6}>\n            <ImageSelect avatarSaved={avatarSaved} setAvatarSaved={setAvatarSaved} />\n            {formValues.location && formValues.location.lat && (\n              <MarkerMapStyle>\n                <Map center={mapCentre} zoom={zoomLevel} zoomControl={false}>\n                  <TileLayer\n                    url={MAP_TILE_PROVIDER_URL}\n                  />\n                  <MapMarker location={formValues.location} />\n                </Map>\n              </MarkerMapStyle>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    )\n  );\n};\n\nRetailerForm.propTypes = {\n  formValues: PropTypes.object,\n  setFormValues: PropTypes.func,\n  formErrors: PropTypes.object,\n  setFormErrors: PropTypes.func,\n  profileStage: PropTypes.number,\n  mapCentre: PropTypes.array,\n  setMapCentre: PropTypes.func,\n  avatarSaved: PropTypes.string,\n  setAvatarSaved: PropTypes.func,\n};\n\nexport default RetailerForm;\n","/* eslint-disable global-require */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Transition, Header, Segment, Form, Grid,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst CommsOptionsForm = ({ formValues, setFormValues, profileStage }) => {\n  const [visible, setVisible] = useState(false);\n\n  const { contactOptions } = formValues;\n\n  // const contactOptions = {};\n\n  useEffect(() => {\n    if (profileStage === 2 && formValues.type === 'retailer') {\n      setVisible(true);\n      return;\n    }\n    setVisible(false);\n  }, [formValues.type, profileStage]);\n\n  // const handleChange = (event) => {\n  //   console.log(event.target.name);\n  // };\n\n  return (\n    <Transition.Group animation=\"fade\" duration={{ hide: 500, show: 2000 }}>\n      {visible && (\n        <>\n          <Segment textAlign=\"left\" basic>\n            <Header as=\"h2\">Notification preferences</Header>\n            <p>Choose how you receive notifications</p>\n            <Form>\n              <Segment.Group>\n                <Segment>\n                  <Header as=\"h3\">Orders</Header>\n                  <p>\n                    Notifications for any orders you place, including\n                    confirmations, reminders, etc.\n                  </p>\n                  <Grid>\n                    <Grid.Column width={2}>\n                      <Form.Checkbox\n                        label=\"Email\"\n                        name=\"ordersEmail\"\n                        checked={contactOptions.ordersEmail || false}\n                        onChange={() => setFormValues({\n                          ...formValues,\n                          contactOptions: {\n                            ...contactOptions,\n                            ordersEmail: !contactOptions.ordersEmail,\n                          },\n                        })}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={14}>\n                      <Form.Checkbox\n                        label=\"Web & Mobile\"\n                        name=\"ordersWebMobile\"\n                        checked={contactOptions.ordersWebMobile || false}\n                        onChange={() => setFormValues({\n                          ...formValues,\n                          contactOptions: {\n                            ...contactOptions,\n                            ordersWebMobile: !contactOptions.ordersWebMobile,\n                          },\n                        })}\n                      />\n                    </Grid.Column>\n                  </Grid>\n                </Segment>\n                <Segment>\n                  <Header as=\"h3\">Following</Header>\n                  <p>Contact from breweries that you follow.</p>\n                  <Grid>\n                    {formValues.purchasingContactNumber && (\n                      <Grid.Column width={2}>\n                        <Form.Checkbox\n                          label=\"Phone\"\n                          name=\"followingPhone\"\n                          checked={contactOptions.followingPhone || false}\n                          onChange={() => setFormValues({\n                            ...formValues,\n                            contactOptions: {\n                              ...contactOptions,\n                              followingPhone: !contactOptions.followingPhone,\n                            },\n                          })}\n                        />\n                      </Grid.Column>\n                    )}\n                    <Grid.Column width={2}>\n                      <Form.Checkbox\n                        label=\"Email\"\n                        name=\"followingEmail\"\n                        checked={contactOptions.followingEmail || false}\n                        onChange={() => setFormValues({\n                          ...formValues,\n                          contactOptions: {\n                            ...contactOptions,\n                            followingEmail: !contactOptions.followingEmail,\n                          },\n                        })}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={12} stretched>\n                      <Form.Checkbox\n                        label=\"Web & Mobile\"\n                        name=\"followingWebMobile\"\n                        checked={contactOptions.followingWebMobile || false}\n                        onChange={() => setFormValues({\n                          ...formValues,\n                          contactOptions: {\n                            ...contactOptions,\n                            followingWebMobile: !contactOptions.followingWebMobile,\n                          },\n                        })}\n                      />\n                    </Grid.Column>\n                  </Grid>\n                </Segment>\n                <Segment>\n                  <Header as=\"h3\">Upcoming</Header>\n                  <p>\n                    Contact from us about new and upcoming breweries in your\n                    area.\n                  </p>\n                  <Grid>\n                    <Grid.Column width={2}>\n                      <Form.Checkbox\n                        label=\"Email\"\n                        name=\"upcomingEmail\"\n                        checked={contactOptions.upcomingEmail || false}\n                        onChange={() => setFormValues({\n                          ...formValues,\n                          contactOptions: {\n                            ...contactOptions,\n                            upcomingEmail: !contactOptions.upcomingEmail,\n                          },\n                        })}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={14}>\n                      <Form.Checkbox\n                        label=\"Web & Mobile\"\n                        name=\"upcomingWebMobile\"\n                        checked={contactOptions.upcomingWebMobile || false}\n                        onChange={() => setFormValues({\n                          ...formValues,\n                          contactOptions: {\n                            ...contactOptions,\n                            upcomingWebMobile: !contactOptions.upcomingWebMobile,\n                          },\n                        })}\n                      />\n                    </Grid.Column>\n                  </Grid>\n                </Segment>\n                <Segment>\n                  <Header as=\"h3\">Us!</Header>\n                  <p>\n                    Occasional curated content from us with news and events in\n                    your area.\n                  </p>\n                  <Grid>\n                    <Grid.Column width={2}>\n                      <Form.Checkbox\n                        label=\"Email\"\n                        name=\"usEmail\"\n                        checked={contactOptions.usEmail || false}\n                        onChange={() => setFormValues({\n                          ...formValues,\n                          contactOptions: {\n                            ...contactOptions,\n                            usEmail: !contactOptions.usEmail,\n                          },\n                        })}\n                      />\n                    </Grid.Column>\n                    <Grid.Column width={14}>\n                      <Form.Checkbox\n                        label=\"Web & Mobile\"\n                        name=\"usWebMobile\"\n                        checked={contactOptions.usWebMobile || false}\n                        onChange={() => setFormValues({\n                          ...formValues,\n                          contactOptions: {\n                            ...contactOptions,\n                            usWebMobile: !contactOptions.usWebMobile,\n                          },\n                        })}\n                      />\n                    </Grid.Column>\n                  </Grid>\n                </Segment>\n              </Segment.Group>\n            </Form>\n          </Segment>\n        </>\n      )}\n    </Transition.Group>\n  );\n};\n\nCommsOptionsForm.propTypes = {\n  profileStage: PropTypes.number,\n  formValues: PropTypes.object,\n  setFormValues: PropTypes.func,\n};\n\nexport default CommsOptionsForm;\n","/**\n *\n * CreateProfilePage\n *\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { FormattedMessage } from 'react-intl';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport {\n  Segment, Header, Dimmer, Loader,\n} from 'semantic-ui-react';\nimport PhoneNumber from 'awesome-phonenumber';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nimport { Helmet } from 'react-helmet';\n// import messages from './messages';\nimport { saveUser } from '../App/actions';\n\nimport CreateProfileNav from './CreateProfileNav';\nimport BusinessTypeSelection from './BusinessTypeSelection';\nimport ProducerForm from './ProducerForm';\nimport SelectDistroAreasForm from './SelectDistroAreasForm';\nimport RetailerForm from './RetailerForm';\nimport CommsOptionsForm from './CommsOptionsForm';\nimport PageWrapper from '../../components/PageWrapper';\nimport { getPresignedRoute, imageToBucket } from '../../utils/bucket';\nimport getImageUrl from '../../utils/getImageUrl';\nimport { makeSelectSavingUser } from '../App/selectors';\n\nexport function CreateProfilePage({ userSave, savingUser }) {\n  // useInjectReducer({ key: 'createProfilePage', reducer });\n  // useInjectSaga({ key: 'createProfilePage', saga });\n\n  const { user } = useAuth0();\n\n  const formTemplate = {\n    type: '',\n    businessName: '',\n    primaryContactName: '',\n    location: {},\n    address: '',\n    avatar: false,\n    terms: true,\n    pictureFile: undefined,\n    pictureFileExt: undefined,\n    fileValid: true,\n  };\n\n  const producerFormTemplate = {\n    salesEmail: '',\n    salesContactNumber: '',\n    website: '',\n    intro: '',\n    distributionAreas: {},\n  };\n\n  const retailerFormTemplate = {\n    purchasingEmail: '',\n    purchasingContactNumber: '',\n    deliveryInstruction: '',\n    contactOptions: {},\n  };\n\n  const [avatarSaved, setAvatarSaved] = useState(undefined);\n  const [avatarRoute, setAvatarRoute] = useState({});\n  const [formValues, setFormValues] = useState(formTemplate);\n  const [formErrors, setFormErrors] = useState({});\n  const [profileStage, setProfileStage] = useState(0);\n  const [mapCentre, setMapCentre] = useState([54.00366, -2.547855]);\n\n  useEffect(() => {\n    if (profileStage === 0 && Object.keys(formValues).length !== Object.keys(formTemplate).length) {\n      setFormValues(formTemplate);\n      setFormErrors({});\n    }\n  }, [profileStage, formTemplate, formValues]);\n\n  useEffect(() => {\n    if (\n      formValues.type === 'producer'\n      && Object.keys(formValues).length === Object.keys(formTemplate).length\n    ) {\n      setFormValues({ ...formValues, ...producerFormTemplate });\n    }\n    if (\n      formValues.type === 'retailer'\n      && Object.keys(formValues).length === Object.keys(formTemplate).length\n    ) {\n      setFormValues({ ...formValues, ...retailerFormTemplate });\n    }\n  }, [formValues, formTemplate, producerFormTemplate, retailerFormTemplate]);\n\n  useEffect(() => {\n    if (avatarSaved) {\n      const setAvatarRouteAsync = async () => {\n        setAvatarRoute(await getPresignedRoute('avatar'));\n      };\n      setAvatarRouteAsync();\n    }\n    return () => {\n      setAvatarRoute({});\n    };\n  }, [avatarSaved]);\n\n  // useEffect(() => {\n  //   console.log('CHECKING');\n  //   if (formValues.pictureFile && !formValues.fileValid) {\n  //     setFormValues({\n  //       ...formValues,\n  //       fileValid: !!ACCEPTED_IMAGE_FORMATS[formValues.pictureFile.type],\n  //       pictureFileExt: ACCEPTED_IMAGE_FORMATS[formValues.pictureFile.type],\n  //     });\n  //   }\n  // }, [formValues.pictureFile, formValues]);\n\n  const backClickHandler = () => {\n    setProfileStage(profileStage - 1);\n  };\n\n  const forwardClickHandler = () => {\n    const errors = {};\n\n    if (formValues.type === 'retailer') {\n      const puchasingNumber = new PhoneNumber(formValues.purchasingContactNumber, 'GB');\n      if (!puchasingNumber.isValid()) {\n        errors.purchasingContactNumber = 'This is not a valid phone number';\n      }\n      if (!formValues.purchasingEmail) {\n        errors.purchasingEmail = 'This field is required';\n      }\n      if (!formValues.primaryContactName) {\n        errors.primaryContactName = 'This field is required';\n      }\n    } else if (formValues.type === 'producer') {\n      const salesNumber = new PhoneNumber(formValues.salesContactNumber, 'GB');\n      if (!salesNumber.isValid()) {\n        errors.salesContactNumber = 'This is not a valid phone number';\n      }\n      if (!formValues.salesEmail) {\n        errors.salesEmail = 'This field is required';\n      }\n    }\n    if (!formValues.businessName) {\n      errors.businessName = 'This field is required';\n    }\n    if (!formValues.terms) {\n      errors.terms = 'This field is required';\n    }\n    if (formValues.location && !formValues.location.lat) {\n      errors.location = 'This field is required';\n    }\n    if (!formValues.fileValid) {\n      errors.pictureFile = 'Invalid file type';\n    }\n\n    if (!Object.keys(errors).length) {\n      setProfileStage(profileStage + 1);\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  const handleSubmit = async () => {\n    const errors = {};\n\n    if (formValues.type === 'producer') {\n      if (formValues.distributionAreas && (!formValues.distributionAreas.features || !formValues.distributionAreas.features.length)) {\n        errors.distributionAreas = 'You need to save at least one distribution area. If you have already drawn a shape, make sure you click \\'Finish\\' in order to proceed';\n      }\n    }\n\n    if (!Object.keys(errors).length) {\n      let avatarSource;\n      if (avatarSaved) {\n        const response = await imageToBucket(avatarRoute, avatarSaved);\n        if (response.status === 204) {\n          avatarSource = getImageUrl(user.sub, 'avatar');\n        }\n      }\n      console.log('SAVING', { ...formValues, avatarSource });\n      userSave({ ...formValues, avatarSource });\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>beerLocal - Create your profile</title>\n        <meta name=\"description\" content=\"Profile creation form\" />\n      </Helmet>\n      <PageWrapper>\n        <Segment basic textAlign=\"center\" className=\"primary wrapper\">\n          <Header as=\"h1\">Complete your profile</Header>\n          <BusinessTypeSelection\n            profileStage={profileStage}\n            setProfileStage={setProfileStage}\n            formValues={formValues}\n            setFormValues={setFormValues}\n          />\n          <ProducerForm\n            formValues={formValues}\n            setFormValues={setFormValues}\n            formErrors={formErrors}\n            setFormErrors={setFormErrors}\n            profileStage={profileStage}\n            mapCentre={mapCentre}\n            setMapCentre={setMapCentre}\n            avatarSaved={avatarSaved}\n            setAvatarSaved={setAvatarSaved}\n          />\n          <SelectDistroAreasForm\n            formValues={formValues}\n            setFormValues={setFormValues}\n            profileStage={profileStage}\n            mapCentre={mapCentre}\n            formErrors={formErrors}\n            setFormErrors={setFormErrors}\n          />\n          <RetailerForm\n            formValues={formValues}\n            setFormValues={setFormValues}\n            formErrors={formErrors}\n            setFormErrors={setFormErrors}\n            profileStage={profileStage}\n            mapCentre={mapCentre}\n            setMapCentre={setMapCentre}\n            avatarSaved={avatarSaved}\n            setAvatarSaved={setAvatarSaved}\n          />\n          <CommsOptionsForm\n            formValues={formValues}\n            setFormValues={setFormValues}\n            profileStage={profileStage}\n          />\n          <CreateProfileNav\n            backClickHandler={backClickHandler}\n            forwardClickHandler={forwardClickHandler}\n            profileStage={profileStage}\n            handleSubmit={handleSubmit}\n          />\n        </Segment>\n        {savingUser && (\n          <Dimmer inverted active page>\n            <Loader inverted />\n          </Dimmer>\n        )}\n      </PageWrapper>\n    </>\n  );\n}\n\nCreateProfilePage.propTypes = {\n  userSave: PropTypes.func,\n  savingUser: PropTypes.bool,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  savingUser: makeSelectSavingUser(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    userSave: (profileData) => dispatch(saveUser(profileData)),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(withConnect)(CreateProfilePage);\n","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _has from \"lodash/has\";\nimport _keys from \"lodash/keys\";\nimport _forEach from \"lodash/forEach\";\nimport _filter from \"lodash/filter\";\nimport _keyBy from \"lodash/keyBy\";\nimport { Children, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {object} children Element's children\n * @return {object} Mapping of key to child\n */\n\nexport var getChildMapping = function getChildMapping(children) {\n  return _keyBy(_filter(Children.toArray(children), isValidElement), 'key');\n};\n\nvar getPendingKeys = function getPendingKeys(prev, next) {\n  var nextKeysPending = {};\n  var pendingKeys = [];\n\n  _forEach(_keys(prev), function (prevKey) {\n    if (!_has(next, prevKey)) {\n      pendingKeys.push(prevKey);\n      return;\n    }\n\n    if (pendingKeys.length) {\n      nextKeysPending[prevKey] = pendingKeys;\n      pendingKeys = [];\n    }\n  });\n\n  return [nextKeysPending, pendingKeys];\n};\n\nvar getValue = function getValue(key, prev, next) {\n  return _has(next, key) ? next[key] : prev[key];\n};\n/**\n * When you're adding or removing children some may be added or removed in the same render pass. We want to show *both*\n * since we want to simultaneously animate elements in and out. This function takes a previous set of keys and a new set\n * of keys and merges them with its best guess of the correct ordering.\n *\n * @param {object} prev Prev children as returned from `getChildMapping()`\n * @param {object} next Next children as returned from `getChildMapping()`\n * @return {object} A key set that contains all keys in `prev` and all keys in `next` in a reasonable order\n */\n\n\nexport var mergeChildMappings = function mergeChildMappings() {\n  var prev = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var childMapping = {};\n\n  var _getPendingKeys = getPendingKeys(prev, next),\n      _getPendingKeys2 = _slicedToArray(_getPendingKeys, 2),\n      nextKeysPending = _getPendingKeys2[0],\n      pendingKeys = _getPendingKeys2[1];\n\n  _forEach(_keys(next), function (nextKey) {\n    if (_has(nextKeysPending, nextKey)) {\n      _forEach(nextKeysPending[nextKey], function (pendingKey) {\n        childMapping[pendingKey] = getValue(pendingKey, prev, next);\n      });\n    }\n\n    childMapping[nextKey] = getValue(nextKey, prev, next);\n  });\n\n  _forEach(pendingKeys, function (pendingKey) {\n    childMapping[pendingKey] = getValue(pendingKey, prev, next);\n  });\n\n  return childMapping;\n};","/**\n * Normalizes the duration of a transition.\n * @param {number|object} duration The value to normalize.\n * @param {'hide'|'show'} type The type of transition.\n * @returns {number}\n */\nexport default (function (duration, type) {\n  return typeof duration === 'number' || typeof duration === 'string' ? duration : duration[type];\n});","import PhoneNumber from 'awesome-phonenumber';\n\nconst ayt = PhoneNumber.getAsYouType('GB');\n\nexport default ayt;\n","import styled from 'styled-components';\n\nconst SuggestBlockStyle = styled.div`\n  /**\n * The geosuggest module\n * NOTE: duplicated font-sizes' are for browsers which don't support rem (only IE 8)\n */\n  .geosuggest {\n    font-size: 18px;\n    font-size: 1rem;\n    position: relative;\n    /* width: 50%;\n  margin: 1em auto; */\n    text-align: left;\n  }\n  .geosuggest__input {\n    width: 100%;\n    border: 2px solid transparent;\n    box-shadow: 0 0 1px #3d464d;\n    padding: 0.5em 1em;\n    -webkit-transition: border 0.2s, box-shadow 0.2s;\n    transition: border 0.2s, box-shadow 0.2s;\n  }\n  .geosuggest__input:focus {\n    border-color: #267dc0;\n    box-shadow: 0 0 0 transparent;\n  }\n  .geosuggest__suggests {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    right: 0;\n    max-height: 25em;\n    padding: 0;\n    margin-top: -1px;\n    background: #fff;\n    border: 2px solid #267dc0;\n    border-top-width: 0;\n    overflow-x: hidden;\n    overflow-y: auto;\n    list-style: none;\n    z-index: 5;\n    -webkit-transition: max-height 0.2s, border 0.2s;\n    transition: max-height 0.2s, border 0.2s;\n  }\n  .geosuggest__suggests--hidden {\n    max-height: 0;\n    overflow: hidden;\n    border-width: 0;\n  }\n\n  /**\n * A geosuggest item\n */\n  .geosuggest__item {\n    font-size: 18px;\n    font-size: 1rem;\n    padding: 0.5em 0.65em;\n    cursor: pointer;\n  }\n  .geosuggest__item:hover,\n  .geosuggest__item:focus {\n    background: #f5f5f5;\n  }\n  .geosuggest__item--active {\n    background: #267dc0;\n    color: #fff;\n  }\n  .geosuggest__item--active:hover,\n  .geosuggest__item--active:focus {\n    background: #ccc;\n  }\n  .geosuggest__item__matched-text {\n    font-weight: bold;\n  }\n\n  .geosuggest__label {\n    display: block;\n    margin: 0 0 0.28571429rem 0;\n    color: rgba(0, 0, 0, 0.87);\n    font-size: 0.92857143em;\n    font-weight: 700;\n    text-transform: none;\n  }\n`;\n\nexport default SuggestBlockStyle;\n"],"sourceRoot":""}