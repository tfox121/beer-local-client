{"version":3,"sources":["containers/App/reducer.js","utils/checkStore.js","utils/rbac-rules.js","components/Can/index.js","utils/history.js","containers/App/constants.js","i18n.js","utils/reducerInjectors.js","utils/injectReducer.js","utils/sagaInjectors.js","utils/injectSaga.js","reducers.js","containers/LanguageProvider/reducer.js","containers/LanguageProvider/constants.js","components/MapMarker/index.js","utils/geoJsonContainsCoords.js","components/PageWrapper/index.js","utils/timeAgo.js","components/DistributionAreaDisplay/index.js","utils/constants.js","containers/App/actions.js","containers/App/selectors.js","utils/checkUserStatus.js","utils/loadable.js","containers/HomePage/Loadable.js","containers/CreateProfilePage/Loadable.js","containers/ProducerProfilePage/Loadable.js","containers/ProducerOrdersPage/Loadable.js","containers/NotFoundPage/Loadable.js","components/NavBar/messages.js","components/NavBar/selectors.js","components/NavBar/Notification.js","components/NavBar/UserMenuItems.js","components/NavBar/NavBarStyle.js","components/NavBar/index.js","components/ProtectedRoute/index.js","containers/ProducerListPage/constants.js","containers/ProducerListPage/reducer.js","containers/ProducerListPage/saga.js","containers/ProducerListPage/actions.js","containers/ProducerListPage/selectors.js","containers/ProducerListPage/ProducerListPageStyle.js","containers/ProducerListPage/ProducerListItem.js","containers/ProducerListPage/index.js","containers/OrderPage/Loadable.js","containers/App/saga.js","global-styles.js","containers/App/index.js","containers/LanguageProvider/selectors.js","containers/LanguageProvider/index.js","index.js","configureStore.js","utils/getAuthToken.js","utils/api.js"],"names":["initialState","fetchingUser","fetchUserError","updatingUser","updatingUserError","savingUser","userSaveError","user","followingProducer","followProducerError","appReducer","state","action","produce","draftState","type","FETCH_USER","FETCH_USER_SUCCESS","FETCH_USER_ERROR","error","CLEAR_USER","UPDATE_USER","UPDATE_USER_SUCCESS","UPDATE_USER_ERROR","SAVE_USER","SAVE_USER_SUCCESS","profile","SAVE_USER_ERROR","FOLLOW_PRODUCER","FOLLOW_PRODUCER_SUCCESS","followedProducers","FOLLOW_PRODUCER_ERROR","checkStore","store","shape","dispatch","isFunction","subscribe","getState","replaceReducer","runSaga","injectedReducers","isObject","injectedSagas","invariant","conformsTo","rbacRules","visitor","static","producer","dynamic","userId","postOwnerId","retailer","admin","Can","role","perform","data","yes","no","rules","permissions","staticPermissions","includes","dynamicPermissions","permissionCondition","check","defaultProps","history","createBrowserHistory","addLocaleData","require","enLocaleData","enTranslationMessages","DEFAULT_LOCALE","translationMessages","en","formatTranslationMessages","locale","messages","defaultFormattedMessages","Object","keys","reduce","formattedMessages","key","formattedMessage","assign","injectReducerFactory","isValid","reducer","isString","isEmpty","Reflect","has","createReducer","getInjectors","injectReducer","useInjectReducer","context","React","useContext","ReactReduxContext","useEffect","allowedModes","RESTART_ON_REMOUNT","DAEMON","ONCE_TILL_UNMOUNT","checkKey","checkDescriptor","descriptor","saga","mode","injectSagaFactory","args","newDescriptor","hasSaga","task","ejectSagaFactory","cancel","injectSaga","ejectSaga","useInjectSaga","injectors","rootReducer","combineReducers","language","languageProviderReducer","router","connectRouter","global","globalReducer","draft","blueMarkerIconMarkup","renderToStaticMarkup","size","color","name","redMarkerIconMarkup","manIconMarkup","dotIconMarkup","blueMarkerIcon","divIcon","html","className","iconAnchor","redMarkerIcon","manIcon","dotIcon","MapMarker","location","position","icon","geoJsonContainsCoords","polygonsObj","latlng","lat","lng","rwGeoJson","rewind","geoContains","PageWrapperStyle","styled","Container","PageWrapper","children","TimeAgo","addLocale","memo","distributionAreas","ref","reactFGref","setTimeout","features","length","customGeoJSON","GeoJSON","leafletFG","leafletElement","eachLayer","layer","removeLayer","addLayer","onFeatureGroupReady","PROFILE_CREATION_STAGES","PACK_SIZES","BLOG_ITEMS_PER_PAGE","DELIVERY_INSTRUCTION_CHARACTER_LIMIT","INTRO_CHARACTER_LIMIT","BLOG_CHARACTER_LIMIT","ORDER_MESSAGE_CHARACTER_LIMIT","PRODUCT_DESCRIPTION_CHARACTER_LIMIT","NOTIFICATION_TYPES","newOrder","orderStatusChange","newOrderMessage","BLOG_EDITOR_TOOLBAR","options","inline","list","inDropdown","textAlign","link","PRODUCER_CHART_TIME_PERIODS","year","quarter","month","week","MAP_TILE_PROVIDER_URL","fetchUser","userFetched","userFetchError","saveUser","profileData","userSaved","clearUser","updateUser","updateObj","pathname","userUpdated","userUpdateError","followProducer","producerSub","producerFollowed","producerFollowError","selectGlobal","selectRouter","makeSelectUser","createSelector","globalState","makeSelectFetchingUser","makeSelectUserFetchError","makeSelectSavingUser","makeSelectProducerFollowing","substate","makeSelectLocation","routerState","checkUserStatus","authLoading","authError","authenticated","userLoading","userLoadingError","userData","console","log","userStatusObj","registered","loading","notFound","response","status","loadable","importFunc","fallback","LazyComponent","lazy","props","Dimmer","active","inverted","page","Loader","scope","defineMessages","home","id","defaultMessage","logIn","logOut","signedInAs","yourProfile","settings","mapStateToProps","createStructuredSelector","userProfile","withConnect","connect","pushRoute","path","push","compose","notification","useState","notificationObj","setNotificationObj","handleClick","a","NotificationLinkStyled","Link","read","NotificationDropdownStyled","Dropdown","Item","NotificationTimeStyled","div","onClick","to","resourceId","Grid","width","Column","Image","src","image","alt","avatar","notificationType","author","message","notificationCopy","timeAgo","format","Date","parse","updatedAt","UserMenuItems","avatarSource","notifications","businessName","useAuth0","isAuthenticated","loginWithRedirect","logout","notificationsArr","setNotificationsArr","unreadNotifications","setUnreadNotifications","unreadNotificationCount","filter","handleClose","getPrivateRoute","privateRoute","patch","NotificationCircle","StyledDropdownMenu","Menu","onClose","item","Icon","fitted","scrolling","direction","map","Fragment","_id","disabled","trigger","Header","NavBarStyle","header","activeItem","setActiveItem","handleItemClick","e","businessId","fixed","Responsive","as","text","maxWidth","content","minWidth","ProtectedRoute","isEnabled","FETCH_PRODUCERS","fetchingProducers","fetchProducersError","producers","producerListPageReducer","fetchProducers","producersData","fetchProducersData","publicRoute","get","call","responseWithImages","put","takeLatest","selectProducerListPageDomain","ProducerListPage","ProducerListPageStyle","producerFollowing","producerFollow","followButtonClicked","setFollowButtonClicked","handleFollowClick","sub","Table","Row","Cell","bordered","centered","circular","style","display","Button","maxHeight","marginLeft","title","followedProducer","positive","intro","Map","center","zoom","zoomControl","TileLayer","url","DistributionAreaDisplay","producersFetch","producersClear","setFilter","followedFilter","areaFilter","distantPurchasingFilter","profileOptions","distantPurchasing","Helmet","Segment","basic","floated","value","onChange","placeholder","multiple","selection","unstackable","Body","producerArr","filteredProducers","filterCombine","fetchUserSaga","updateUserSaga","saveUserSaga","followProducerSaga","rootSaga","fetchUserData","business","split","updateUserProfile","saveUserData","formValues","post","followData","follow","debounce","spawn","GlobalStyle","createGlobalStyle","AppWrapper","userFetch","userClear","isLoading","userStatus","checkStatus","padded","href","exact","component","HomePage","CreateProfilePage","ProducerProfilePage","ProducerOrdersPage","OrderPage","NotFoundPage","selectLanguage","languageState","Children","only","composeEnhancers","reduxSagaMonitorOptions","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","enhancers","applyMiddleware","createStore","run","configureStore","MOUNT_NODE","document","getElementById","render","ReactDOM","domain","process","clientId","redirectUri","window","origin","audience","cacheLocation","Intl","Promise","resolve","then","all","catch","err","getToken","authSession","getTokenSilently","baseURL","axios","createAuth0Client","client_id","Authorization","headers","timeout","create"],"mappings":"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","file":"static/js/main.330f0853.chunk.js","sourcesContent":["/*\n *\n * App reducer\n *\n */\nimport produce from 'immer';\nimport {\n  FETCH_USER,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_ERROR,\n  UPDATE_USER,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER_ERROR,\n  SAVE_USER,\n  SAVE_USER_SUCCESS,\n  SAVE_USER_ERROR,\n  CLEAR_USER,\n  FOLLOW_PRODUCER,\n  FOLLOW_PRODUCER_SUCCESS,\n  FOLLOW_PRODUCER_ERROR,\n} from './constants';\n\nexport const initialState = {\n  fetchingUser: false,\n  fetchUserError: false,\n  updatingUser: false,\n  updatingUserError: false,\n  savingUser: false,\n  userSaveError: false,\n  user: false,\n  followingProducer: false,\n  followProducerError: false,\n};\n\n/* eslint-disable default-case, no-param-reassign */\nconst appReducer = (state = initialState, action) => produce(state, (draftState) => {\n  switch (action.type) {\n    default:\n      break;\n    case FETCH_USER:\n      draftState.fetchUserError = false;\n      draftState.fetchingUser = true;\n      break;\n    case FETCH_USER_SUCCESS:\n      if (action.user) {\n        draftState.user = { ...action.user };\n        draftState.fetchUserError = false;\n      }\n      draftState.fetchingUser = false;\n      break;\n    case FETCH_USER_ERROR:\n      if (action.error) {\n        draftState.fetchUserError = action.error;\n      } else {\n        draftState.fetchUserError = true;\n      }\n      draftState.fetchingUser = false;\n      break;\n    case CLEAR_USER:\n      draftState.user = false;\n      break;\n    case UPDATE_USER:\n      draftState.updatingUserError = false;\n      draftState.updatingUser = true;\n      break;\n    case UPDATE_USER_SUCCESS:\n      if (action.user) {\n        draftState.user = action.user;\n        draftState.updatingUserError = false;\n      }\n      draftState.updatingUser = false;\n      break;\n    case UPDATE_USER_ERROR:\n      draftState.updatingUserError = true;\n      draftState.updatingUser = false;\n      break;\n    case SAVE_USER:\n      draftState.userSaveError = false;\n      draftState.savingUser = true;\n      break;\n    case SAVE_USER_SUCCESS:\n      if (action.profile) {\n        draftState.user = action.profile;\n        draftState.userSaveError = false;\n      }\n      draftState.savingUser = false;\n      break;\n    case SAVE_USER_ERROR:\n      draftState.savingUser = false;\n      draftState.userSaveError = true;\n      break;\n    case FOLLOW_PRODUCER:\n      draftState.followProducerError = false;\n      draftState.followingProducer = true;\n      break;\n    case FOLLOW_PRODUCER_SUCCESS:\n      if (action.followedProducers) {\n        draftState.user.followedProducers = [...action.followedProducers];\n        draftState.followingProducer = false;\n      }\n      break;\n    case FOLLOW_PRODUCER_ERROR:\n      draftState.followProducerError = true;\n      draftState.followingProducer = false;\n      break;\n      // case CLOSE_SESSION_SUCCESS:\n      //   draftState.session = false;\n      //   draftState.closingSession = false;\n      //   break;\n  }\n});\n\nexport default appReducer;\n","import { conformsTo, isFunction, isObject } from 'lodash';\nimport invariant from 'invariant';\n\n/**\n * Validate the shape of redux store\n */\nexport default function checkStore(store) {\n  const shape = {\n    dispatch: isFunction,\n    subscribe: isFunction,\n    getState: isFunction,\n    replaceReducer: isFunction,\n    runSaga: isFunction,\n    injectedReducers: isObject,\n    injectedSagas: isObject,\n  };\n  invariant(\n    conformsTo(store, shape),\n    '(app/utils...) injectors: Expected a valid redux store',\n  );\n}\n","const rbacRules = {\n  visitor: {\n    static: ['posts:list', 'home-page:visit'],\n  },\n  producer: {\n    static: [\n      'producer-menu:visit',\n      'orders:reject',\n      'orders:confirm',\n      'orders:edit',\n      'posts:list',\n      'posts:create',\n      'users:getSelf',\n      'home-page:visit',\n      'dashboard-page:visit',\n    ],\n    dynamic: {\n      'posts:edit': ({ userId, postOwnerId }) => {\n        if (!userId || !postOwnerId) return false;\n        return userId === postOwnerId;\n      },\n    },\n  },\n  retailer: {\n    static: [\n      'retailer-menu:visit',\n      'orders:changes-confirm',\n      'orders:cancel',\n      'posts:list',\n      'posts:create',\n      'users:getSelf',\n      'home-page:visit',\n      'dashboard-page:visit',\n    ],\n    dynamic: {\n      'posts:edit': ({ userId, postOwnerId }) => {\n        if (!userId || !postOwnerId) return false;\n        return userId === postOwnerId;\n      },\n    },\n  },\n  admin: {\n    static: [\n      'posts:list',\n      'posts:create',\n      'posts:edit',\n      'posts:delete',\n      'users:get',\n      'users:getSelf',\n      'home-page:visit',\n      'dashboard-page:visit',\n    ],\n  },\n};\n\nexport default rbacRules;\n","/**\n *\n * Can\n *\n */\n\nimport rbacRules from '../../utils/rbac-rules';\n\nconst check = (rules, role, action, data) => {\n  const permissions = rules[role];\n  // console.log('CAN', rules, role, action, data);\n\n  if (!permissions) {\n    // role is not present in the rules\n    return false;\n  }\n\n  const staticPermissions = permissions.static;\n\n  if (staticPermissions && staticPermissions.includes(action)) {\n    // static rule not provided for action\n    return true;\n  }\n\n  const dynamicPermissions = permissions.dynamic;\n\n  if (dynamicPermissions) {\n    const permissionCondition = dynamicPermissions[action];\n    if (!permissionCondition) {\n      // dynamic rule not provided for action\n      return false;\n    }\n\n    return permissionCondition(data);\n  }\n  return false;\n};\n\nconst Can = ({\n  role, perform, data, yes, no,\n}) => check(rbacRules, role, perform, data) ? yes() : no();\n\nCan.defaultProps = {\n  yes: () => null,\n  no: () => null,\n};\n\nexport default Can;\n","import { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\nexport default history;\n","/*\n * AppConstants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with 'yourproject/YourComponent' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = 'yourproject/YourContainer/YOUR_ACTION_CONSTANT';\n */\n\nexport const FETCH_USER = 'beerlocal/App/FETCH_USER';\nexport const FETCH_USER_SUCCESS = 'beerlocal/App/FETCH_USER_SUCCESS';\nexport const FETCH_USER_ERROR = 'beerlocal/App/FETCH_USER_ERROR';\nexport const UPDATE_USER = 'beerlocal/App/UPDATE_USER';\nexport const UPDATE_USER_SUCCESS = 'beerlocal/App/UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_ERROR = 'beerlocal/App/UPDATE_USER_ERROR';\nexport const CLEAR_USER = 'beerlocal/App/CLEAR_USER';\nexport const FOLLOW_PRODUCER = 'beerlocal/App/FOLLOW_PRODUCER';\nexport const FOLLOW_PRODUCER_SUCCESS = 'beerlocal/App/FOLLOW_PRODUCER_SUCCESS';\nexport const FOLLOW_PRODUCER_ERROR = 'beerlocal/App/FOLLOW_PRODUCER_ERROR';\nexport const SAVE_USER = 'beerlocal/App/SAVE_USER';\nexport const SAVE_USER_SUCCESS = 'beerlocal/App/SAVE_USER_SUCCESS';\nexport const SAVE_USER_ERROR = 'beerlocal/App/SAVE_USER_ERROR';\n","/**\n * i18n.js\n *\n * This will setup the i18n language files and locale data for your app.\n *\n *   IMPORTANT: This file is used by the internal build\n *   script `extract-intl`, and must use CommonJS module syntax\n *   You CANNOT use import/export in this file.\n */\nconst addLocaleData = require('react-intl').addLocaleData; //eslint-disable-line\nconst enLocaleData = require('react-intl/locale-data/en');\n\nconst enTranslationMessages = require('./translations/en.json');\n\naddLocaleData(enLocaleData);\n\nexport const DEFAULT_LOCALE = 'en';\n\nexport const appLocales = [\n  'en',\n];\n\nexport const formatTranslationMessages = (locale, messages) => {\n  const defaultFormattedMessages = locale !== DEFAULT_LOCALE\n    ? formatTranslationMessages(DEFAULT_LOCALE, enTranslationMessages)\n    : {};\n  const flattenFormattedMessages = (formattedMessages, key) => {\n    const formattedMessage = !messages[key] && locale !== DEFAULT_LOCALE\n      ? defaultFormattedMessages[key]\n      : messages[key];\n    return Object.assign(formattedMessages, { [key]: formattedMessage });\n  };\n  return Object.keys(messages).reduce(flattenFormattedMessages, {});\n};\n\nexport const translationMessages = {\n  en: formatTranslationMessages('en', enTranslationMessages),\n};\n","import invariant from 'invariant';\nimport { isEmpty, isFunction, isString } from 'lodash';\n\nimport checkStore from './checkStore';\nimport createReducer from '../reducers';\n\nexport function injectReducerFactory(store, isValid) {\n  return function injectReducer(key, reducer) {\n    if (!isValid) checkStore(store);\n\n    invariant(\n      isString(key) && !isEmpty(key) && isFunction(reducer),\n      '(app/utils...) injectReducer: Expected `reducer` to be a reducer function',\n    );\n\n    // Check `store.injectedReducers[key] === reducer` for hot reloading when a key is the same but a reducer is different\n    if (\n      Reflect.has(store.injectedReducers, key)\n      && store.injectedReducers[key] === reducer\n    ) return;\n\n    store.injectedReducers[key] = reducer; // eslint-disable-line no-param-reassign\n    store.replaceReducer(createReducer(store.injectedReducers));\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectReducer: injectReducerFactory(store, true),\n  };\n}\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ReactReduxContext } from 'react-redux';\n\nimport getInjectors from './reducerInjectors';\n\n/**\n * Dynamically injects a reducer\n *\n * @param {string} key A key of the reducer\n * @param {function} reducer A reducer that will be injected\n *\n */\nexport default ({ key, reducer }) => (WrappedComponent) => {\n  class ReducerInjector extends React.Component {\n    static test = 'test'\n\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withReducer(${WrappedComponent.displayName\n      || WrappedComponent.name\n      || 'Component'})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      getInjectors(context.store).injectReducer(key, reducer);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(ReducerInjector, WrappedComponent);\n};\n\nconst useInjectReducer = ({ key, reducer }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    getInjectors(context.store).injectReducer(key, reducer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport { useInjectReducer };\n","import invariant from 'invariant';\nimport {\n  isEmpty, isFunction, isString, conformsTo,\n} from 'lodash';\n\nimport checkStore from './checkStore';\nimport { DAEMON, ONCE_TILL_UNMOUNT, RESTART_ON_REMOUNT } from './constants';\n\nconst allowedModes = [RESTART_ON_REMOUNT, DAEMON, ONCE_TILL_UNMOUNT];\n\nconst checkKey = (key) => invariant(\n  isString(key) && !isEmpty(key),\n  '(app/utils...) injectSaga: Expected `key` to be a non empty string',\n);\n\nconst checkDescriptor = (descriptor) => {\n  const shape = {\n    saga: isFunction,\n    mode: (mode) => isString(mode) && allowedModes.includes(mode),\n  };\n  invariant(\n    conformsTo(descriptor, shape),\n    '(app/utils...) injectSaga: Expected a valid saga descriptor',\n  );\n};\n\nexport function injectSagaFactory(store, isValid) {\n  return function injectSaga(key, descriptor = {}, args) {\n    if (!isValid) checkStore(store);\n\n    const newDescriptor = {\n      ...descriptor,\n      mode: descriptor.mode || DAEMON,\n    };\n    const { saga, mode } = newDescriptor;\n\n    checkKey(key);\n    checkDescriptor(newDescriptor);\n\n    let hasSaga = Reflect.has(store.injectedSagas, key);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const oldDescriptor = store.injectedSagas[key];\n      // enable hot reloading of daemon and once-till-unmount sagas\n      if (hasSaga && oldDescriptor.saga !== saga) {\n        oldDescriptor.task.cancel();\n        hasSaga = false;\n      }\n    }\n\n    if (\n      !hasSaga\n      || (hasSaga && mode !== DAEMON && mode !== ONCE_TILL_UNMOUNT)\n    ) {\n      /* eslint-disable no-param-reassign */\n      store.injectedSagas[key] = {\n        ...newDescriptor,\n        task: store.runSaga(saga, args),\n      };\n      /* eslint-enable no-param-reassign */\n    }\n  };\n}\n\nexport function ejectSagaFactory(store, isValid) {\n  return function ejectSaga(key) {\n    if (!isValid) checkStore(store);\n\n    checkKey(key);\n\n    if (Reflect.has(store.injectedSagas, key)) {\n      const descriptor = store.injectedSagas[key];\n      if (descriptor.mode && descriptor.mode !== DAEMON) {\n        descriptor.task.cancel();\n        // Clean up in production; in development we need `descriptor.saga` for hot reloading\n        if (process.env.NODE_ENV === 'production') {\n          // Need some value to be able to detect `ONCE_TILL_UNMOUNT` sagas in `injectSaga`\n          store.injectedSagas[key] = 'done'; // eslint-disable-line no-param-reassign\n        }\n      }\n    }\n  };\n}\n\nexport default function getInjectors(store) {\n  checkStore(store);\n\n  return {\n    injectSaga: injectSagaFactory(store, true),\n    ejectSaga: ejectSagaFactory(store, true),\n  };\n}\n","import React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ReactReduxContext } from 'react-redux';\n\nimport getInjectors from './sagaInjectors';\n\n/**\n * Dynamically injects a saga, passes component's props as saga arguments\n *\n * @param {string} key A key of the saga\n * @param {function} saga A root saga that will be injected\n * @param {string} [mode] By default (constants.DAEMON) the saga will be started\n * on component mount and never canceled or started again. Another two options:\n *   - constants.RESTART_ON_REMOUNT — the saga will be started on component mount and\n *   cancelled with `task.cancel()` on component unmount for improved performance,\n *   - constants.ONCE_TILL_UNMOUNT — behaves like 'RESTART_ON_REMOUNT' but never runs it again.\n *\n */\nexport default ({ key, saga, mode }) => (WrappedComponent) => {\n  class InjectSaga extends React.Component {\n    static WrappedComponent = WrappedComponent;\n\n    static contextType = ReactReduxContext;\n\n    static displayName = `withSaga(${WrappedComponent.displayName\n      || WrappedComponent.name\n      || 'Component'})`;\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.injectors = getInjectors(context.store);\n\n      this.injectors.injectSaga(key, { saga, mode }, this.props);\n    }\n\n    componentWillUnmount() {\n      this.injectors.ejectSaga(key);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return hoistNonReactStatics(InjectSaga, WrappedComponent);\n};\n\nconst useInjectSaga = ({ key, saga, mode }) => {\n  const context = React.useContext(ReactReduxContext);\n  React.useEffect(() => {\n    const injectors = getInjectors(context.store);\n    injectors.injectSaga(key, { saga, mode });\n\n    return () => {\n      injectors.ejectSaga(key);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport { useInjectSaga };\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport history from './utils/history';\nimport languageProviderReducer from './containers/LanguageProvider/reducer';\nimport globalReducer from './containers/App/reducer';\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createReducer(injectedReducers = {}) {\n  const rootReducer = combineReducers({\n    language: languageProviderReducer,\n    router: connectRouter(history),\n    global: globalReducer,\n    ...injectedReducers,\n  });\n\n  return rootReducer;\n}\n","/*\n *\n * LanguageProvider reducer\n *\n */\nimport produce from 'immer';\n\nimport { CHANGE_LOCALE } from './constants';\nimport { DEFAULT_LOCALE } from '../../i18n';\n\nexport const initialState = {\n  locale: DEFAULT_LOCALE,\n};\n\n/* eslint-disable default-case, no-param-reassign */\nconst languageProviderReducer = (state = initialState, action) => produce(state, (draft) => {\n  switch (action.type) {\n    case CHANGE_LOCALE:\n      draft.locale = action.locale;\n      break;\n  }\n});\n\nexport default languageProviderReducer;\n","/*\n *\n * LanguageProvider constants\n *\n */\n\nexport const CHANGE_LOCALE = 'app/LanguageToggle/CHANGE_LOCALE';\n","/**\n *\n * MapMarker\n *\n */\n\nimport React from 'react';\nimport { Marker, Popup } from 'react-leaflet';\nimport PropTypes from 'prop-types';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { divIcon } from 'leaflet';\nimport { Icon } from 'semantic-ui-react';\n\nconst blueMarkerIconMarkup = renderToStaticMarkup(<Icon size=\"big\" color=\"blue\" name=\"map marker alternate\" />);\nconst redMarkerIconMarkup = renderToStaticMarkup(<Icon size=\"big\" color=\"red\" name=\"map marker alternate\" />);\nconst manIconMarkup = renderToStaticMarkup(<Icon size=\"big\" name=\"street view\" />);\nconst dotIconMarkup = renderToStaticMarkup(<Icon name=\"dot circle outline\" color=\"blue\" />);\n\nconst blueMarkerIcon = divIcon({\n  html: blueMarkerIconMarkup,\n  className: 'blue-marker-icon',\n  iconAnchor: [14, 19],\n});\n\nconst redMarkerIcon = divIcon({\n  html: redMarkerIconMarkup,\n  className: 'red-marker-icon',\n  iconAnchor: [14, 19],\n});\n\nconst manIcon = divIcon({\n  html: manIconMarkup,\n  className: 'man-icon',\n  iconAnchor: [14, 19],\n});\n\nconst dotIcon = divIcon({\n  html: dotIconMarkup,\n  className: 'dot-icon',\n  // iconAnchor: [14, 19],\n});\n\nfunction MapMarker({ location, type, name }) {\n  switch (type) {\n    case ('customer'):\n      return (\n        <Marker position={location} icon={blueMarkerIcon}>\n          <Popup>\n            <span>{name}</span>\n          </Popup>\n        </Marker>\n      );\n    case ('not-customer'):\n      return (\n        <Marker position={location} icon={redMarkerIcon}>\n          <Popup>\n            <span>{name}</span>\n          </Popup>\n        </Marker>\n      );\n    case ('user'):\n      return (\n        <Marker position={location} icon={manIcon}>\n          <Popup>\n            <span>Your location.</span>\n          </Popup>\n        </Marker>\n      );\n    default:\n      return (\n        <Marker position={location} icon={dotIcon}>\n          <Popup>\n            <span>Brewery location.</span>\n          </Popup>\n        </Marker>\n      );\n  }\n}\n\nMapMarker.propTypes = {\n  location: PropTypes.object,\n  type: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default MapMarker;\n","import { geoContains } from 'd3';\nimport rewind from '@mapbox/geojson-rewind';\n\nconst geoJsonContainsCoords = (polygonsObj, latlng) => {\n  if (!polygonsObj) {\n    return false;\n  }\n  const { lat, lng } = latlng;\n  const rwGeoJson = rewind(polygonsObj, true);\n  return geoContains(rwGeoJson, [lng, lat]);\n};\n\nexport default geoJsonContainsCoords;\n","/**\n *\n * PageWrapper\n *\n */\n\nimport styled from 'styled-components';\nimport React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst PageWrapperStyle = styled(Container)`\n  &&& {\n    background-color: white;\n    min-height: calc(100vh - 49px);\n    /* min-width: 800px; */\n\n  @media only screen and (max-width: 767px) {\n    margin-left: 0 !important;\n    margin-right: 0 !important;\n  }\n\n    div.ui.text.loader {\n      min-height: 100%;\n    }\n    /* .page-container {\n      height: calc(100vh - 49px);\n    } */\n\n    div.ui.basic.segment.wrapper {\n      width: 100%;\n      border-left: 1px solid rgb(230, 236, 240);\n      border-right: 1px solid rgb(230, 236, 240);\n      margin: 0;\n      padding-top: 1.5em;\n      /* padding-bottom: 28px; */\n      padding-left: 2em;\n      padding-right: 2em;\n      @media only screen and (max-width: 767px) {\n        padding-left: 0.5em !important;\n        padding-right: 0.5em !important;\n      }\n    }\n\n    div.ui.basic.primary.segment {\n      height: 100%;\n      min-height: 690px;\n      display: flex;\n      flex-direction: column;\n    }\n  }\n`;\n\nconst PageWrapper = ({ children }) => (\n  <PageWrapperStyle>\n    {children}\n  </PageWrapperStyle>\n);\n\nPageWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.element]),\n};\n\nexport default PageWrapper;\n","import TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\n\nTimeAgo.addLocale(en);\n\nexport default new TimeAgo('en-UK');\n","/**\n *\n * DistributionAreaDisplay\n *\n */\n\nimport React, { memo } from 'react';\nimport { FeatureGroup } from 'react-leaflet';\nimport PropTypes from 'prop-types';\n\nconst DistributionAreaDisplay = ({ distributionAreas }) => {\n  const onFeatureGroupReady = (reactFGref) => {\n    setTimeout(() => {\n      if (reactFGref) {\n        if (\n          distributionAreas\n          && distributionAreas.features\n          && distributionAreas.features.length > 0\n        ) {\n          // eslint-disable-next-line global-require\n          const L = require('leaflet');\n\n          const customGeoJSON = new L.GeoJSON(distributionAreas);\n\n          const leafletFG = reactFGref.leafletElement;\n\n          if (leafletFG) {\n            leafletFG.eachLayer((layer) => {\n              leafletFG.removeLayer(layer);\n            });\n\n            customGeoJSON.eachLayer((layer) => {\n              leafletFG.addLayer(layer);\n            });\n          }\n        }\n      }\n    }, 0);\n  };\n\n  return (\n    <FeatureGroup\n      ref={(reactFGref) => {\n        onFeatureGroupReady(reactFGref);\n      }}\n    />\n  );\n};\n\nDistributionAreaDisplay.propTypes = {\n  distributionAreas: PropTypes.object,\n};\n\nexport default memo(DistributionAreaDisplay);\n","export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';\nexport const DAEMON = '@@saga-injector/daemon';\nexport const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';\nexport const ACCEPTED_IMAGE_FORMATS = {\n  'image/png': 'png',\n  'image/jpeg': 'jpg',\n  'image/svg+xml': 'svg',\n  'image/webp': 'webp',\n  'image/gif': 'gif',\n};\nexport const PROFILE_CREATION_STAGES = 2;\nexport const STOCK_HEADERS = [\n  'Name',\n  'Style',\n  'ABV',\n  'Pack Size',\n  'List Price',\n  'Availability',\n];\nexport const PACK_SIZES = {\n  '30l': '30L',\n  '50l': '50L',\n  '9g': '9g',\n  '12x330': '12x330ml',\n  '24x330': '24x330ml',\n  '24x440': '24x440ml',\n};\n\nexport const BLOG_ITEMS_PER_PAGE = 1;\nexport const DELIVERY_INSTRUCTION_CHARACTER_LIMIT = 300;\nexport const INTRO_CHARACTER_LIMIT = 600;\nexport const BLOG_CHARACTER_LIMIT = 1500;\nexport const ORDER_MESSAGE_CHARACTER_LIMIT = 450;\nexport const PRODUCT_DESCRIPTION_CHARACTER_LIMIT = 600;\n\nexport const NOTIFICATION_TYPES = {\n  newOrder: 'new_order',\n  orderStatusChange: 'order_status_change',\n  newOrderMessage: 'new_order_message',\n};\n\nexport const BLOG_EDITOR_TOOLBAR = {\n  options: ['inline', 'blockType', 'fontSize', 'fontFamily', 'list', 'textAlign', 'colorPicker', 'link', 'emoji', 'image', 'remove', 'history'],\n  inline: { options: ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript'] },\n  list: { inDropdown: true },\n  textAlign: { inDropdown: true },\n  link: { inDropdown: true },\n};\n\nexport const PRODUCER_CHART_TIME_PERIODS = {\n  year: 'quarter',\n  quarter: 'month',\n  month: 'week',\n  week: 'day',\n};\n\nexport const MAP_TILE_PROVIDER_URL = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n","/*\n *\n * App actions\n *\n */\n\nimport {\n  FETCH_USER,\n  FETCH_USER_SUCCESS,\n  FETCH_USER_ERROR,\n  UPDATE_USER,\n  UPDATE_USER_SUCCESS,\n  UPDATE_USER_ERROR,\n  SAVE_USER,\n  SAVE_USER_SUCCESS,\n  SAVE_USER_ERROR,\n  CLEAR_USER,\n  FOLLOW_PRODUCER,\n  FOLLOW_PRODUCER_SUCCESS,\n  FOLLOW_PRODUCER_ERROR,\n} from './constants';\n\nexport const fetchUser = () => ({\n  type: FETCH_USER,\n});\n\nexport const userFetched = (user) => ({\n  type: FETCH_USER_SUCCESS,\n  user,\n});\n\nexport const userFetchError = (error) => ({\n  type: FETCH_USER_ERROR,\n  error,\n});\n\nexport const saveUser = (profileData) => ({\n  type: SAVE_USER,\n  profileData,\n});\n\nexport const userSaved = (profile) => ({\n  type: SAVE_USER_SUCCESS,\n  profile,\n});\n\nexport const userSaveError = (error) => ({\n  type: SAVE_USER_ERROR,\n  error,\n});\n\nexport const clearUser = () => ({\n  type: CLEAR_USER,\n});\n\nexport const updateUser = (updateObj, pathname) => ({\n  type: UPDATE_USER,\n  updateObj,\n  pathname,\n});\n\nexport const userUpdated = (user) => ({\n  type: UPDATE_USER_SUCCESS,\n  user,\n});\n\nexport const userUpdateError = (error) => ({\n  type: UPDATE_USER_ERROR,\n  error,\n});\n\nexport const followProducer = (producerSub) => ({\n  type: FOLLOW_PRODUCER,\n  producerSub,\n});\n\nexport const producerFollowed = ({ followedProducers }) => ({\n  type: FOLLOW_PRODUCER_SUCCESS,\n  followedProducers,\n});\n\nexport const producerFollowError = (error) => ({\n  type: FOLLOW_PRODUCER_ERROR,\n  error,\n});\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\nconst selectGlobal = (state) => state.global || initialState;\n\nconst selectRouter = (state) => state.router;\n\nconst makeSelectUser = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.user,\n);\n\nconst makeSelectFetchingUser = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.fetchingUser,\n);\n\nconst makeSelectUserFetchError = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.fetchUserError,\n);\n\nconst makeSelectSavingUser = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.savingUser,\n);\n\nconst makeSelectUserSaveError = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.userSaveError,\n);\nconst makeSelectProducerFollowing = () => createSelector(\n  selectGlobal,\n  (substate) => substate.followingProducer,\n);\n\nconst makeSelectLocation = () => createSelector(\n  selectRouter,\n  (routerState) => routerState.location,\n);\n\nexport {\n  makeSelectUser,\n  makeSelectFetchingUser,\n  makeSelectUserFetchError,\n  makeSelectSavingUser,\n  makeSelectUserSaveError,\n  makeSelectLocation,\n  makeSelectProducerFollowing,\n};\n","const checkUserStatus = (authLoading, authError, authenticated, userLoading, userLoadingError, userData) => {\n  console.log('CHECKING');\n  const userStatusObj = {\n    authenticated: false, registered: false, loading: false, error: false, notFound: false,\n  };\n  if (authLoading) {\n    userStatusObj.loading = true;\n  }\n  if (authError) {\n    userStatusObj.error = authError;\n    userStatusObj.loading = false;\n    return userStatusObj;\n  }\n  if (authenticated) {\n    userStatusObj.authenticated = true;\n    // necessary in order to prevent routes from rendering before user retrieved.\n    userStatusObj.loading = true;\n  }\n  if (userLoading) {\n    userStatusObj.loading = true;\n  }\n  if (userLoadingError) {\n    if (userLoadingError.response && userLoadingError.response.status === 404) {\n      userStatusObj.loading = false;\n      userStatusObj.notFound = true;\n    } else {\n      userStatusObj.error = userLoadingError;\n      return userStatusObj;\n    }\n  }\n  if (userData) {\n    userStatusObj.loading = false;\n    userStatusObj.registered = true;\n  }\n  return userStatusObj;\n};\n\nexport default checkUserStatus;\n","import React, { lazy, Suspense } from 'react';\n\nconst loadable = (importFunc, { fallback = null } = { fallback: null }) => {\n  const LazyComponent = lazy(importFunc);\n\n  return (props) => (\n    <Suspense fallback={fallback}>\n      <LazyComponent {...props} />\n    </Suspense>\n  );\n};\n\nexport default loadable;\n","/**\n * Asynchronously loads the component for HomePage\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","/**\n *\n * Asynchronously loads the component for CreateProfilePage\n *\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","/**\n *\n * Asynchronously loads the component for ProducerProfilePage\n *\n */\n\nimport React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'), {\n  fallback: (\n    <Dimmer active inverted page>\n      <Loader />\n    </Dimmer>\n  ),\n});\n","/**\n *\n * Asynchronously loads the component for ProducerProfilePage\n *\n */\n\nimport React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'), {\n  fallback: (\n    <Dimmer active inverted page>\n      <Loader />\n    </Dimmer>\n  ),\n});\n","/**\n * Asynchronously loads the component for NotFoundPage\n */\n\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'));\n","/*\n * NavBar Messages\n *\n * This contains all the text for the NavBar component.\n */\n\nimport { defineMessages } from 'react-intl';\n\nexport const scope = 'app.components.NavBar';\n\nexport default defineMessages({\n  home: {\n    id: `${scope}.navbar.home`,\n    defaultMessage: 'Home',\n  },\n  logIn: {\n    id: `${scope}.navbar.logIn`,\n    defaultMessage: 'Log In',\n  },\n  logOut: {\n    id: `${scope}.navbar.logOut`,\n    defaultMessage: 'Log Out',\n  },\n  signedInAs: {\n    id: `${scope}.navbar.signed_in_as`,\n    defaultMessage: 'Signed in as ',\n  },\n  yourProfile: {\n    id: `${scope}.navbar.your_profile`,\n    defaultMessage: 'Your profile',\n  },\n  settings: {\n    id: `${scope}.navbar.settings`,\n    defaultMessage: 'Settings',\n  },\n});\n","import { createSelector } from 'reselect';\nimport { initialState } from '../../containers/App/reducer';\n\nconst selectGlobal = (state) => state.global || initialState;\n\nexport const makeSelectUser = () => createSelector(\n  selectGlobal,\n  (globalState) => globalState.user,\n);\n","/**\n *\n * Notification\n *\n */\n\nimport React, { useState, memo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n// import { FormattedMessage } from 'react-intl';\nimport {\n  Dropdown, Image, Grid,\n} from 'semantic-ui-react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { push } from 'connected-react-router';\nimport { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n// import messages from './messages';\nimport { makeSelectUser } from './selectors';\nimport { NOTIFICATION_TYPES } from '../../utils/constants';\nimport timeAgo from '../../utils/timeAgo';\n\nfunction Notification({ notification }) {\n  const [notificationObj, setNotificationObj] = useState({});\n\n  useEffect(() => {\n    if (notification) {\n      setNotificationObj({ ...notification });\n    }\n  }, [notification]);\n\n  const handleClick = async () => {\n    // const privateRoute = await getPrivateRoute();\n    // const response = await privateRoute.patch(`/user/notification/${notificationObj._id}`);\n    // const newNotification = response.data.notifications.filter((notif) => notif._id === notificationObj._id)[0];\n    // setNotificationObj({ ...newNotification });\n  };\n\n  const notificationCopy = (notificationType, author) => {\n    let message;\n    switch (notificationType) {\n      case NOTIFICATION_TYPES.newOrder:\n        message = (\n          <>\n            You have a new order from\n            {' '}\n            {author}\n            !\n          </>\n        );\n        break;\n      case NOTIFICATION_TYPES.orderStatusChange:\n        message = (\n          <>\n            The status of your order from\n            {' '}\n            {author}\n            {' '}\n            has changed.\n          </>\n        );\n        break;\n      case NOTIFICATION_TYPES.newOrderMessage:\n        message = (\n          <>\n            Your order with\n            {' '}\n            {author}\n            {' '}\n            has a new message.\n          </>\n        );\n        break;\n      default:\n        message = 'You have a new notification. And this is it...';\n        break;\n    }\n    return message;\n  };\n\n  const NotificationLinkStyled = styled(Link)`\n  &&& {\n    color: ${() => notification.read ? 'black' : ''};\n  }\n  `;\n\n  const NotificationDropdownStyled = styled(Dropdown.Item)`\n    &&& {\n      background-color: ${() => notification.read ? '' : '#edf2fa !important'};\n      border-bottom: 1px solid #d9d9d9;\n\n      div.ui.grid {\n\n        div.two.wide.column {\n          padding-left: 0.5em;\n          padding-right: 0;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n\n        div.fourteen.wide.column {\n          padding-left: 0.5em;\n\n          .notification-text-content {\n            white-space: normal;\n            min-width: 300px;\n            padding-right: 15px\n          }\n        }\n      }\n    }\n  `;\n\n  const NotificationTimeStyled = styled.div`\n    font-size: 10px;\n    margin-top: 0.5em;\n  `;\n\n  return (\n    <NotificationLinkStyled onClick={handleClick} to={`/order/${notificationObj.resourceId}`}>\n      <NotificationDropdownStyled>\n        <Grid width={16}>\n          <Grid.Column width={2}>\n            <Image src={notificationObj.image || '/images/avatars/blank-avatar.webp'} alt=\"user avatar\" avatar />\n          </Grid.Column>\n          <Grid.Column width={14}>\n            <div className=\"notification-text-content\">{notificationCopy(notificationObj.type, notificationObj.name)}</div>\n            <NotificationTimeStyled className=\"notification-time\">{timeAgo.format(Date.parse(notification.updatedAt))}</NotificationTimeStyled>\n          </Grid.Column>\n        </Grid>\n      </NotificationDropdownStyled>\n    </NotificationLinkStyled>\n    // <Feed.Event>\n    //   <Feed.Label>\n    //     <Image src={notificationObj.image || '/images/avatars/blank-avatar.webp'} alt=\"user avatar\" avatar circular />\n    //   </Feed.Label>\n    //   <Feed.Content>\n    //     <Feed.Summary>\n    //       {notificationCopy(notificationObj.type, notificationObj.name)}\n    //     </Feed.Summary>\n    //     <Feed.Meta>\n    //       <Feed.Date>{timeAgo.format(Date.parse(notification.updatedAt))}</Feed.Date>\n    //     </Feed.Meta>\n    //   </Feed.Content>\n    // </Feed.Event>\n\n  );\n}\n\nNotification.propTypes = {\n  notification: PropTypes.object,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userProfile: makeSelectUser(),\n});\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    pushRoute: (path) => dispatch(push(path)),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(\n  withConnect,\n  memo,\n)(Notification);\n\n// export default Notification;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  Dropdown, Menu, Image, Icon,\n} from 'semantic-ui-react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nimport styled from 'styled-components';\nimport messages from './messages';\nimport Notification from './Notification';\nimport { getPrivateRoute } from '../../utils/api';\n\nexport default function UserMenuItems({ avatarSource, notifications, businessName }) {\n  const {\n    user, isAuthenticated, loginWithRedirect, logout,\n  } = useAuth0();\n  const [notificationsArr, setNotificationsArr] = useState([]);\n  const [unreadNotifications, setUnreadNotifications] = useState(0);\n\n  useEffect(() => {\n    if (notifications) {\n      setNotificationsArr([...notifications]);\n    }\n  }, [notifications]);\n\n  useEffect(() => {\n    if (notificationsArr) {\n      const unreadNotificationCount = notificationsArr.filter((notification) => (\n        notification.read === false\n      )).length;\n      setUnreadNotifications(unreadNotificationCount);\n    }\n  }, [notificationsArr]);\n\n  const handleClose = async () => {\n    if (unreadNotifications) {\n      const privateRoute = await getPrivateRoute();\n      const response = await privateRoute.patch('/user/notifications');\n      setNotificationsArr([...response.data.notifications]);\n    }\n  };\n\n  const NotificationCircle = styled.div`\n    position: absolute;\n    display: flex;\n    right: 10px;\n    bottom: 8.5px;\n    background-color: red;\n    height: 12px;\n    width: 12px;\n    font-size: 10px;\n    color: white;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n  `;\n\n  const StyledDropdownMenu = styled(Dropdown.Menu)`\n    &&& {\n      @media only screen and (max-width: 425px) {\n        left: 0;\n        right: 0;\n        top: 50px;\n        position: fixed;\n\n        .item {\n          white-space: normal;\n        }\n      }\n    }\n  `;\n\n  if (isAuthenticated) {\n    // eslint-disable-next-line no-unused-expressions\n    return (\n      <>\n        <Dropdown\n          onClose={handleClose}\n          item\n          icon={(\n            <>\n              <Icon\n                fitted\n                size=\"large\"\n                name={unreadNotifications ? 'bell' : 'bell outline'}\n                color={unreadNotifications ? 'blue' : 'black'}\n              />\n              {!!unreadNotifications && (\n                <NotificationCircle>\n                  {unreadNotifications}\n                </NotificationCircle>\n              )}\n            </>\n          )}\n          scrolling\n        >\n          <StyledDropdownMenu onClick={handleClose} direction=\"left\">\n            {notificationsArr.length ? notificationsArr.map((notification) => (\n              <React.Fragment key={notification._id}>\n                <Notification notification={notification} />\n              </React.Fragment>\n            ))\n              : (\n                <Dropdown.Item disabled>\n                  No notifications.\n                </Dropdown.Item>\n              )}\n          </StyledDropdownMenu>\n        </Dropdown>\n        <Dropdown\n          item\n          trigger={(\n            <div>\n              <Image src={avatarSource || '/images/avatars/blank-avatar.webp'} avatar />\n            </div>\n          )}\n        >\n          <Dropdown.Menu>\n            <Dropdown.Header>\n              <FormattedMessage {...messages.signedInAs} />\n              {' '}\n              {businessName || user.name}\n            </Dropdown.Header>\n            {/* <Dropdown.Item>\n              <FormattedMessage {...messages.yourProfile} />\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <FormattedMessage {...messages.settings} />\n            </Dropdown.Item> */}\n            <Dropdown.Item onClick={() => logout()}>\n              <FormattedMessage {...messages.logOut} />\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    );\n  }\n  return (\n    <Menu.Item onClick={loginWithRedirect}>\n      <FormattedMessage {...messages.logIn} />\n    </Menu.Item>\n  );\n}\n\nUserMenuItems.propTypes = {\n  avatarSource: PropTypes.string,\n  notifications: PropTypes.array,\n  businessName: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nconst NavBarStyle = styled.header`\n  .ui.menu {\n    font-family: 'Yantramanav', sans-serif;\n    font-weight: 400;\n  }\n\n  a.item {\n    font-size: 1.2em;\n  }\n\n  .item.home-button {\n    font-size: 1.8em;\n    padding: 0.6em;\n    font-weight: 700;\n  }\n\n  .ui.item.dropdown {\n    font-size: 1.1em;\n    font-weight: 700;\n  }\n`;\n\nexport default NavBarStyle;\n","/**\n *\n * NavBar\n *\n */\n\nimport React, { useState, memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Menu, Responsive, Dropdown } from 'semantic-ui-react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { push } from 'connected-react-router';\n\nimport UserMenuItems from './UserMenuItems';\nimport Can from '../Can';\n\nimport { makeSelectUser } from './selectors';\nimport NavBarStyle from './NavBarStyle';\n\nfunction NavBar({ userProfile, pushRoute }) {\n  const [activeItem, setActiveItem] = useState('');\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name);\n    switch (name) {\n      case '/':\n        setActiveItem('');\n        pushRoute('/');\n        break;\n      case '/brewery/profile':\n        pushRoute(`/brewery/${userProfile.businessId}`);\n        break;\n      case '/sales/orders':\n        pushRoute('/sales/orders');\n        break;\n      case '/breweries':\n        pushRoute('/breweries');\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <NavBarStyle>\n      <Menu fixed=\"top\">\n        {userProfile ? (\n          <Responsive as={Dropdown} text=\"BeerLocal\" item maxWidth={425}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                content=\"Home\"\n                name=\"/\"\n                active={activeItem === '/'}\n                onClick={handleItemClick}\n              />\n              <Can\n                role={userProfile.role}\n                perform=\"producer-menu:visit\"\n                yes={() => (\n                  <>\n                    <Dropdown.Item\n                      content=\"Your Store\"\n                      active={activeItem === '/brewery/profile'}\n                      onClick={handleItemClick}\n                      name=\"/brewery/profile\"\n                    />\n                    <Dropdown.Item\n                      content=\"Orders\"\n                      active={activeItem === '/sales/orders'}\n                      onClick={handleItemClick}\n                      name=\"/sales/orders\"\n                    />\n                  </>\n                )}\n              />\n              <Can\n                role={userProfile.role}\n                perform=\"retailer-menu:visit\"\n                yes={() => (\n                  <>\n                    <Dropdown.Item\n                      name=\"/breweries\"\n                      content=\"Breweries\"\n                      active={activeItem === '/breweries'}\n                      onClick={handleItemClick}\n                    />\n                    <Dropdown.Item\n                      content=\"Orders\"\n                      active={activeItem === '/sales/orders'}\n                      onClick={handleItemClick}\n                      name=\"/sales/orders\"\n                    />\n                  </>\n                )}\n              />\n            </Dropdown.Menu>\n          </Responsive>\n        )\n          : (\n            <Responsive\n              as={Menu.Item}\n              name=\"/\"\n              active={activeItem === '/'}\n              onClick={handleItemClick}\n              maxWidth={425}\n              className=\"home-button\"\n            >\n              BeerLocal\n            </Responsive>\n          )}\n        <Responsive\n          as={Menu.Item}\n          name=\"/\"\n          active={activeItem === '/'}\n          onClick={handleItemClick}\n          minWidth={426}\n          className=\"home-button\"\n        >\n          BeerLocal\n        </Responsive>\n        <Responsive as={React.Fragment} minWidth={426}>\n          <Can\n            role={userProfile.role}\n            perform=\"producer-menu:visit\"\n            yes={() => (\n              <>\n                <Menu.Item\n                  content=\"Your Store\"\n                  active={activeItem === '/brewery/profile'}\n                  onClick={handleItemClick}\n                  name=\"/brewery/profile\"\n                />\n                <Menu.Item\n                  content=\"Orders\"\n                  active={activeItem === '/sales/orders'}\n                  onClick={handleItemClick}\n                  name=\"/sales/orders\"\n                />\n              </>\n            )}\n          />\n          <Can\n            role={userProfile.role}\n            perform=\"retailer-menu:visit\"\n            yes={() => (\n              <>\n                <Menu.Item\n                  name=\"/breweries\"\n                  content=\"Breweries\"\n                  active={activeItem === '/breweries'}\n                  onClick={handleItemClick}\n                />\n                <Menu.Item\n                  content=\"Orders\"\n                  active={activeItem === '/sales/orders'}\n                  onClick={handleItemClick}\n                  name=\"/sales/orders\"\n                />\n              </>\n            )}\n          />\n        </Responsive>\n        <Menu.Menu position=\"right\">\n          <UserMenuItems\n            notifications={userProfile.notifications}\n            avatarSource={userProfile.avatarSource}\n            businessName={userProfile.businessName}\n          />\n        </Menu.Menu>\n      </Menu>\n    </NavBarStyle>\n  );\n}\n\nNavBar.propTypes = {\n  userProfile: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  pushRoute: PropTypes.func,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userProfile: makeSelectUser(),\n});\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    pushRoute: (path) => dispatch(push(path)),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(\n  withConnect,\n  memo,\n)(NavBar);\n\n// export default NavBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ isEnabled, ...props }) => (isEnabled) ? <Route {...props} /> : <Redirect to=\"/\" />;\n\nProtectedRoute.propTypes = {\n  isEnabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n};\n\nexport default ProtectedRoute;\n","/*\n * ProducerListPageConstants\n * Each action has a corresponding type, which the reducer knows and picks up on.\n * To avoid weird typos between the reducer and the actions, we save them as\n * constants here. We prefix them with 'yourproject/YourComponent' so we avoid\n * reducers accidentally picking up actions they shouldn't.\n *\n * Follow this format:\n * export const YOUR_ACTION_CONSTANT = 'yourproject/YourContainer/YOUR_ACTION_CONSTANT';\n */\n\nexport const FETCH_PRODUCERS = 'beerlocal/App/FETCH_PRODUCERS';\nexport const FETCH_PRODUCERS_SUCCESS = 'beerlocal/App/FETCH_PRODUCERS_SUCCESS';\nexport const FETCH_PRODUCERS_ERROR = 'beerlocal/App/FETCH_PRODUCERS_ERROR';\nexport const CLEAR_PRODUCERS = 'beerlocal/App/CLEAR_PRODUCERS';\n","/*\n *\n * ProducerListPage reducer\n *\n */\nimport produce from 'immer';\nimport {\n  FETCH_PRODUCERS,\n  FETCH_PRODUCERS_SUCCESS,\n  FETCH_PRODUCERS_ERROR,\n  CLEAR_PRODUCERS,\n} from './constants';\n\nexport const initialState = {\n  fetchingProducers: false,\n  fetchProducersError: false,\n  producers: false,\n};\n\n/* eslint-disable default-case, no-param-reassign */\nconst producerListPageReducer = (state = initialState, action) => produce(state, (draftState) => {\n  switch (action.type) {\n    default:\n      break;\n    case FETCH_PRODUCERS:\n      draftState.fetchProducersError = false;\n      draftState.fetchingProducers = true;\n      break;\n    case FETCH_PRODUCERS_SUCCESS:\n      if (action.producers) {\n        draftState.producers = action.producers;\n        draftState.fetchProducersError = false;\n      }\n      draftState.fetchingProducers = false;\n      break;\n    case FETCH_PRODUCERS_ERROR:\n      draftState.fetchProducersError = true;\n      draftState.fetchingProducers = false;\n      break;\n    case CLEAR_PRODUCERS:\n      draftState.producers = false;\n      break;\n      // case CLOSE_SESSION_SUCCESS:\n      //   draftState.session = false;\n      //   draftState.closingSession = false;\n      //   break;\n  }\n});\n\nexport default producerListPageReducer;\n","import {\n  call, put, takeLatest,\n} from 'redux-saga/effects';\nimport { FETCH_PRODUCERS } from './constants';\nimport { producersFetched, producersFetchError } from './actions';\nimport { publicRoute } from '../../utils/api';\n\nfunction* fetchProducers() {\n  try {\n    const fetchProducersData = () => publicRoute.get('/producers');\n    const response = yield call(fetchProducersData);\n\n    // const images = yield all(response.data.map((producer) => call(getAvatar, producer.businessId)));\n\n    const responseWithImages = response.data.map((producer) => ({\n      ...producer,\n      /* avatarSource: images[index]  */\n    }));\n\n    if (response.data) {\n      yield put(producersFetched(responseWithImages));\n    }\n  } catch (err) {\n    console.error(err);\n    yield put(producersFetchError(err));\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\nexport default function* producersData() {\n  yield takeLatest(FETCH_PRODUCERS, fetchProducers);\n}\n","/*\n *\n * ProducerListPage actions\n *\n */\n\nimport {\n  FETCH_PRODUCERS,\n  FETCH_PRODUCERS_SUCCESS,\n  FETCH_PRODUCERS_ERROR,\n  CLEAR_PRODUCERS,\n} from './constants';\n\nexport const fetchProducers = () => ({\n  type: FETCH_PRODUCERS,\n});\n\nexport function producersFetched(producers) {\n  return {\n    type: FETCH_PRODUCERS_SUCCESS,\n    producers,\n  };\n}\n\nexport function producersFetchError(error) {\n  return {\n    type: FETCH_PRODUCERS_ERROR,\n    error,\n  };\n}\n\nexport function clearProducers() {\n  return {\n    type: CLEAR_PRODUCERS,\n  };\n}\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the ProducerListPage state domain\n */\n\nconst selectProducerListPageDomain = (state) => state.ProducerListPage || initialState;\n\n/**\n * Other specific selectors\n */\nconst makeSelectProducerList = () => createSelector(\n  selectProducerListPageDomain,\n  (substate) => substate.producers,\n);\n\n/**\n * Default selector used by ProducerListPage\n */\n\nconst makeSelectProducerListPage = () => createSelector(\n  selectProducerListPageDomain,\n  (substate) => substate,\n);\n\nexport default makeSelectProducerListPage;\nexport { selectProducerListPageDomain, makeSelectProducerList };\n","import styled from 'styled-components';\n\nconst ProducerListPageStyle = styled.div`\n.leaflet-container {\n  height: 200px;\n  width: 200px;\n  display: block;\n  z-index: 1;\n  margin: auto;\n}\n\n.image-link {\n  cursor: pointer;\n}\n`;\n\nexport default ProducerListPageStyle;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Image, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { Map, TileLayer } from 'react-leaflet';\nimport { push } from 'connected-react-router';\n\nimport DistributionAreaDisplay from '../../components/DistributionAreaDisplay';\nimport MapMarker from '../../components/MapMarker';\nimport { followProducer } from '../App/actions';\nimport { makeSelectProducerFollowing } from '../App/selectors';\nimport { MAP_TILE_PROVIDER_URL } from '../../utils/constants';\n\nconst ProducerListItem = ({\n  producer, user, producerFollow, producerFollowing, pushRoute,\n}) => {\n  const [followButtonClicked, setFollowButtonClicked] = useState(false);\n\n  useEffect(() => {\n    if (!producerFollowing) {\n      setFollowButtonClicked(false);\n    }\n  }, [producerFollowing]);\n\n  const handleFollowClick = async () => {\n    producerFollow(producer.sub);\n    setFollowButtonClicked(true);\n  };\n\n  const handleClick = (businessId) => {\n    pushRoute(`/brewery/${businessId}`);\n  };\n\n  return (\n    <Table.Row key={producer._id}>\n      <Table.Cell width={5}><Image className=\"image-link\" onClick={() => handleClick(producer.businessId)} src={producer.avatarSource || '/images/avatars/blank-avatar.webp'} size=\"small\" bordered centered circular /></Table.Cell>\n      <Table.Cell width={6}>\n        <div style={{ display: 'flex' }}>\n          <Link to={`/brewery/${producer.businessId}`}><h2>{producer.businessName}</h2></Link>\n          <Button size=\"mini\" style={{ maxWidth: '100px', maxHeight: '30px', marginLeft: '1em' }} title={`${user.followedProducers.map((followedProducer) => followedProducer.sub).includes(producer.sub) ? 'Unfollow ' : 'Follow '}${producer.businessName}`} loading={followButtonClicked} positive={user.followedProducers.map((followedProducer) => followedProducer.sub).includes(producer.sub)} icon={user.followedProducers.map((followedProducer) => followedProducer.sub).includes(producer.sub) ? 'check' : 'plus'} onClick={handleFollowClick} />\n        </div>\n        <p>{producer.intro}</p>\n      </Table.Cell>\n      <Table.Cell width={5}>\n        <Map center={producer.location} zoom={6} zoomControl={false}>\n          <TileLayer\n            url={MAP_TILE_PROVIDER_URL}\n          />\n          <DistributionAreaDisplay distributionAreas={producer.distributionAreas} />\n          <MapMarker location={producer.location} />\n          <MapMarker type=\"user\" location={user.location} />\n        </Map>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nProducerListItem.propTypes = {\n  producer: PropTypes.object,\n  user: PropTypes.object,\n  producerFollow: PropTypes.func,\n  producerFollowing: PropTypes.bool,\n  pushRoute: PropTypes.func,\n};\n\nconst mapStateToProps = createStructuredSelector({\n  producerFollowing: makeSelectProducerFollowing(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    producerFollow: (producerSub) => dispatch(followProducer(producerSub)),\n    pushRoute: (path) => dispatch(push(path)),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(withConnect)(ProducerListItem);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { push } from 'connected-react-router';\nimport {\n  Header, Segment, Table, Dropdown, Grid,\n} from 'semantic-ui-react';\nimport { createStructuredSelector } from 'reselect';\n\nimport { Helmet } from 'react-helmet';\nimport geoJsonContainsCoords from '../../utils/geoJsonContainsCoords';\nimport { useInjectReducer } from '../../utils/injectReducer';\nimport { useInjectSaga } from '../../utils/injectSaga';\nimport PageWrapper from '../../components/PageWrapper';\n// import { loadSession, closeSession } from './actions';\nimport reducer from './reducer';\nimport saga from './saga';\nimport { makeSelectProducerList } from './selectors';\nimport { fetchProducers, clearProducers } from './actions';\nimport ProducerListPageStyle from './ProducerListPageStyle';\nimport { makeSelectUser } from '../App/selectors';\nimport ProducerListItem from './ProducerListItem';\n\nconst key = 'ProducerListPage';\n\nconst ProducerListPage = ({\n  producers, producersFetch, user,\n}) => {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n\n  // const [areaFilterToggle, setareaFilterToggle] = useState(true);\n  // const [followedFilterToggle, setfollowedFilterToggle] = useState(false);\n  const [filter, setFilter] = useState(['area']);\n\n  const followedProducers = !!user && user.followedProducers.map((producer) => producer.sub);\n\n  const followedFilter = (producer) => followedProducers.includes(producer.sub);\n\n  const areaFilter = (producer) => geoJsonContainsCoords(producer.distributionAreas, user.location);\n\n  const distantPurchasingFilter = (producer) => (producer.profileOptions.distantPurchasing || geoJsonContainsCoords(producer.distributionAreas, user.location));\n\n  // const filteredProducers = !!producers && !!user && producers.filter();\n\n  const filterCombine = (producerArr) => {\n    let filteredProducers = [...producerArr];\n    if (filter.includes('area')) {\n      filteredProducers = filteredProducers.filter(areaFilter);\n    }\n    if (filter.includes('followed')) {\n      filteredProducers = filteredProducers.filter(followedFilter);\n    }\n    if (filter.includes('distantPurchasing')) {\n      filteredProducers = filteredProducers.filter(distantPurchasingFilter);\n    }\n    return filteredProducers;\n  };\n\n  // console.log('FILTERED', filteredProducers);\n\n  // if (producers && user) {\n  //   producers.forEach((producer) => {\n  //     console.log(checkPolygonsContainCoords(producer.distributionAreas, user.location));\n  //   });\n  // }\n\n  const handleChange = (e, { value }) => {\n    setFilter(value);\n  };\n\n  useEffect(() => {\n    producersFetch();\n  }, [producersFetch]);\n\n  // const handleClick = (businessId) => {\n  //   pushRoute(`/brewery/${businessId}`);\n  // };\n\n  if (!user || !producers.length) {\n    return null;\n  }\n\n  const filterOptions = [\n    { key: 'area', text: 'In my area', value: 'area' },\n    { key: 'followed', text: 'Followed breweries', value: 'followed' },\n    { key: 'distantPurchasing', text: 'Can ship to me', value: 'distantPurchasing' },\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>beerLocal - Breweries</title>\n        <meta name=\"description\" content=\"A list of breweries\" />\n      </Helmet>\n      <PageWrapper>\n        <ProducerListPageStyle>\n          <Segment basic className=\"primary wrapper\">\n            <Grid width={16}>\n              <Grid.Column width={6}>\n                <Header as=\"h1\" floated=\"left\">Breweries</Header>\n              </Grid.Column>\n              <Grid.Column width={10} textAlign=\"right\">\n                <Dropdown value={filter} onChange={handleChange} placeholder=\"Filter\" multiple selection options={filterOptions} />\n                {/* <Checkbox label=\"In my area\" toggle checked={areaFilterToggle} onClick={() => setareaFilterToggle(!areaFilterToggle)} />\n              {' '}\n              <Checkbox label=\"Followed\" toggle checked={followedFilterToggle} onClick={() => setfollowedFilterToggle(!followedFilterToggle)} /> */}\n              </Grid.Column>\n            </Grid>\n            <Table basic unstackable>\n              <Table.Body>\n                {producers && filterCombine(producers).map((producer) => (\n                  <React.Fragment key={producer._id}>\n                    <ProducerListItem user={user} producer={producer} />\n                  </React.Fragment>\n                ))}\n              </Table.Body>\n            </Table>\n          </Segment>\n        </ProducerListPageStyle>\n      </PageWrapper>\n    </>\n  );\n};\n\nProducerListPage.propTypes = {\n  producers: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  producersFetch: PropTypes.func,\n  user: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\n\nconst mapStateToProps = createStructuredSelector({\n  producers: makeSelectProducerList(),\n  user: makeSelectUser(),\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    producersFetch: () => dispatch(fetchProducers()),\n    producersClear: () => dispatch(clearProducers()),\n    pushRoute: (path) => dispatch(push(path)),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(\n  withConnect,\n)(ProducerListPage);\n","/**\n *\n * Asynchronously loads the component for ProducerProfilePage\n *\n */\n\nimport React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport loadable from '../../utils/loadable';\n\nexport default loadable(() => import('./index'), {\n  fallback: (\n    <Dimmer active inverted page>\n      <Loader />\n    </Dimmer>\n  ),\n});\n","/**\n * Gets the repositories of the user from Github\n */\n\nimport {\n  call, put, spawn, debounce, takeLatest,\n} from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport {\n  FETCH_USER, UPDATE_USER, SAVE_USER, FOLLOW_PRODUCER,\n} from './constants';\nimport {\n  userFetched, userFetchError, userUpdated, userUpdateError, userSaved, userSaveError, producerFollowed, producerFollowError,\n} from './actions';\nimport { getPrivateRoute } from '../../utils/api';\n\nfunction* fetchUser() {\n  try {\n    const privateRoute = yield call(getPrivateRoute);\n    const fetchUserData = () => privateRoute.get('/user');\n    const response = yield call(fetchUserData);\n\n    console.log('USER RETRIEVED', response.data);\n    if (Object.keys(response.data.user).length && Object.keys(response.data.business).length) {\n      yield put(userFetched({\n        ...response.data.business, ...response.data.user,\n      }));\n    } else {\n      console.log('NO USER FOUND');\n      // yield put(push('/create'));\n    }\n  } catch (err) {\n    yield put(userFetchError(err));\n    // yield put(push('/create'));\n  }\n}\n\nfunction* updateUser({ updateObj, pathname }) {\n  try {\n    const businessId = pathname.split('/')[2];\n    const privateRoute = yield call(getPrivateRoute);\n    const updateUserProfile = () => privateRoute.patch('/user', updateObj);\n    const response = yield call(updateUserProfile);\n\n    console.log('USER UPDATED', response.data);\n    if (Object.keys(response.data.user).length && Object.keys(response.data.business).length) {\n      yield put(userUpdated({\n        ...response.data.user, ...response.data.business,\n      }));\n      if (response.data.user.businessId !== businessId) {\n        yield put(push(`/brewery/${response.data.user.businessId}`));\n      }\n    }\n  } catch (err) {\n    yield put(userUpdateError(err));\n  }\n}\n\nfunction* saveUser({ profileData }) {\n  try {\n    // Call our request helper (see 'utils/request')\n    const privateRoute = yield call(getPrivateRoute);\n\n    console.log(profileData);\n\n    const saveUserData = (formValues) => privateRoute.post(\n      '/user', formValues,\n    );\n\n    const response = yield call(saveUserData, profileData);\n\n    if (response.data.user && response.data.business) {\n      yield put(userSaved({\n        ...response.data.business, ...response.data.user,\n      }));\n      if (profileData.type === 'producer') {\n        yield put(push(`/brewery/${response.data.user.businessId}`));\n      } else {\n        yield put(push('/'));\n      }\n    }\n  } catch (err) {\n    yield put(userSaveError(err));\n  }\n}\n\nfunction* followProducer({ producerSub }) {\n  try {\n    const privateRoute = yield call(getPrivateRoute);\n    const followData = () => privateRoute.patch('/user/follow', { follow: producerSub });\n\n    const response = yield call(followData);\n\n    if (response.data) {\n      yield put(producerFollowed(response.data));\n    }\n  } catch (err) {\n    console.log('ERROR', err);\n    yield put(producerFollowError(err));\n  }\n}\n\n/**\n * Root saga manages watcher lifecycle\n */\n// export default function* userData() {\n//   yield takeLatest(FETCH_USER, fetchUser);\n// }\n\nfunction* fetchUserSaga() {\n  // See example in containers/HomePage/saga.js\n  yield debounce(500, FETCH_USER, fetchUser);\n}\n\nfunction* updateUserSaga() {\n  yield debounce(1000, UPDATE_USER, updateUser);\n}\n\nfunction* saveUserSaga() {\n  yield takeLatest(SAVE_USER, saveUser);\n}\n\nfunction* followProducerSaga() {\n  yield debounce(1000, FOLLOW_PRODUCER, followProducer);\n}\n\nexport default function* rootSaga() {\n  yield spawn(fetchUserSaga);\n  yield spawn(updateUserSaga);\n  yield spawn(saveUserSaga);\n  yield spawn(followProducerSaga);\n}\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    height: calc(100% - 27.5px);\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n\n  body {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n\n  body.fontLoaded {\n    font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n\n  #app {\n    min-height: 100%;\n    min-width: 100%;\n    overflow: auto;\n  }\n\n  p,\n  label {\n    line-height: 1.5em;\n  }\n\n  .ui.top.fixed.menu {\n    height: 50px;\n  }\n\n  /* stock modal */\n  .ui.large.modal {\n    width: 90%;\n  }\n\n    button.stock-save {\n    min-width: 71.36px;\n  }\n\n  button.stock-save > i.check.icon {\n    margin: 0 !important;\n  }\n\n  /* Blog editor */\n\n  .blog-editor {\n    min-height: 300px;\n    cursor: text;\n    border: 1px solid #F1F1F1;\n    padding: 0 1em;\n\n  }\n\n  .blogpost-modal-actions {\n    display: flex;\n  }\n\n  .blogpost-modal-actions > div {\n    margin-right: auto;\n    display: flex;\n    align-items: center;\n  }\n\n  div.checkbox > input:checked~label:after {\n    top: -2px !important;\n  }\n\n  div.image-resizer.ui.modal {\n    width: unset;\n  }\n\n  /* Modal Style */\n  div.ui.modal {\n    @media only screen and (max-width: 425px) {\n      left: 0px;\n      min-width: 800px;\n    }\n  }\n\n  /* Pagination Style */\n  div.ui.pagination {\n    a {\n      justify-content: center;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","/**\n *\n * App.js\n *\n * This component is the skeleton around the actual pages, and should only\n * contain code that should be seen on all pages. (e.g. navigation bar)\n *\n */\n\nimport React, { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport styled from 'styled-components';\nimport {\n  Dimmer, Loader, Button, Segment, Header,\n} from 'semantic-ui-react';\n\nimport {\n  makeSelectUser,\n  makeSelectFetchingUser,\n  makeSelectUserFetchError,\n  makeSelectLocation,\n} from './selectors';\nimport { useInjectReducer } from '../../utils/injectReducer';\nimport { useInjectSaga } from '../../utils/injectSaga';\nimport checkUserStatus from '../../utils/checkUserStatus';\nimport HomePage from '../HomePage/Loadable';\nimport CreateProfilePage from '../CreateProfilePage/Loadable';\nimport ProducerProfilePage from '../ProducerProfilePage/Loadable';\nimport ProducerOrdersPage from '../ProducerOrdersPage/Loadable';\nimport NotFoundPage from '../NotFoundPage/Loadable';\nimport NavBar from '../../components/NavBar';\nimport ProtectedRoute from '../../components/ProtectedRoute';\nimport ProducerListPage from '../ProducerListPage';\nimport OrderPage from '../OrderPage/Loadable';\n// import { loadSession, closeSession } from './actions';\nimport reducer from './reducer';\nimport saga from './saga';\n\nimport GlobalStyle from '../../global-styles';\nimport { fetchUser, clearUser } from './actions';\n\nconst key = 'global';\nconst AppWrapper = styled.div`\n  background-color: #FDFDF0;\n  min-width: 100%;\n  // max-width: calc(768px + 16px * 2);\n  margin: 49px auto 0;\n  display: flex;\n  min-height: calc(100vh - 51px);\n  // padding: 0 16px;\n  flex-direction: column;\n`;\n\nconst App = ({\n  userProfile, userFetch, userClear, location, fetchingUser, userFetchError,\n}) => {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n  const { isAuthenticated, isLoading, error } = useAuth0();\n\n  const userStatus = checkUserStatus(isLoading, error, isAuthenticated, fetchingUser, userFetchError, userProfile);\n\n  console.log(userStatus);\n\n  useEffect(() => {\n    const checkStatus = checkUserStatus(isLoading, error, isAuthenticated, fetchingUser, userFetchError, userProfile);\n    if (checkStatus.authenticated && !userStatus.registered && !userStatus.notFound) {\n      console.log('FETCHING');\n      userFetch();\n    }\n    if (!checkStatus.authenticated && !checkStatus.loading && checkStatus.registered) {\n      console.log('CLEARING USER');\n      userClear();\n    }\n    return () => {\n      if (!checkStatus.authenticated && !checkStatus.loading && checkStatus.registered) {\n        console.log('CLEARING USER');\n        userClear();\n      }\n    };\n  }, [userProfile, isAuthenticated, userFetch, userClear, isLoading, fetchingUser, error, userFetchError, userStatus]);\n\n  useEffect(() => {\n    const checkStatus = checkUserStatus(\n      isLoading,\n      error,\n      isAuthenticated,\n      fetchingUser,\n      userFetchError,\n      userProfile,\n    );\n    if (checkStatus.authenticated && userStatus.registered) {\n      console.log('FETCHING');\n      userFetch();\n    }\n  }, [\n    location.pathname,\n    error,\n    fetchingUser,\n    isAuthenticated,\n    isLoading,\n    userFetch,\n    userFetchError,\n    userProfile,\n    userStatus.registered,\n  ]);\n\n  if (userStatus.error) {\n    console.log('User fetch error', userStatus.error);\n    return (\n      <Dimmer active page>\n        <Segment padded=\"very\">\n          <Header as=\"h2\">There has been an error.</Header>\n          <Button as=\"a\" href=\"/\">Return to home</Button>\n        </Segment>\n      </Dimmer>\n    );\n  }\n\n  if (userStatus.loading) {\n    return (\n      <Dimmer active inverted page>\n        <Loader />\n      </Dimmer>\n    );\n  }\n\n  console.log('RENDER APP');\n\n  return (\n    <AppWrapper>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <ProtectedRoute exact path=\"/create\" isEnabled={userStatus.authenticated && !userStatus.registered} component={CreateProfilePage} />\n        <Route exact path=\"/brewery/:id\" component={ProducerProfilePage} />\n        <ProtectedRoute exact path=\"/sales/orders\" isEnabled={userStatus.registered} component={ProducerOrdersPage} />\n        <ProtectedRoute exact path=\"/breweries\" isEnabled={userStatus.registered} component={ProducerListPage} />\n        <ProtectedRoute exact path=\"/order/:id\" isEnabled={userStatus.registered} component={OrderPage} />\n        <Route component={NotFoundPage} />\n      </Switch>\n      <GlobalStyle />\n    </AppWrapper>\n  );\n};\n\nApp.propTypes = {\n  userProfile: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  userFetch: PropTypes.func,\n  userClear: PropTypes.func,\n  location: PropTypes.object,\n  fetchingUser: PropTypes.bool,\n  userFetchError: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n};\n\nconst mapStateToProps = createStructuredSelector({\n  userProfile: makeSelectUser(),\n  fetchingUser: makeSelectFetchingUser(),\n  userFetchError: makeSelectUserFetchError(),\n  location: makeSelectLocation(),\n});\n\nexport function mapDispatchToProps(dispatch) {\n  return {\n    userFetch: () => dispatch(fetchUser()),\n    userClear: () => dispatch(clearUser()),\n  };\n}\n\nconst withConnect = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n);\n\nexport default compose(\n  withConnect,\n)(App);\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\n/**\n * Direct selector to the languageToggle state domain\n */\nconst selectLanguage = (state) => state.language || initialState;\n\n/**\n * Select the language locale\n */\n\nconst makeSelectLocale = () => createSelector(\n  selectLanguage,\n  (languageState) => languageState.locale,\n);\n\nexport { selectLanguage, makeSelectLocale };\n","/*\n *\n * LanguageProvider\n *\n * this component connects the redux state language locale to the\n * IntlProvider component and i18n messages (loaded from `app/translations`)\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { IntlProvider } from 'react-intl';\n\nimport { makeSelectLocale } from './selectors';\n\nexport function LanguageProvider(props) {\n  return (\n    <IntlProvider\n      locale={props.locale}\n      key={props.locale}\n      messages={props.messages[props.locale]}\n    >\n      {React.Children.only(props.children)}\n    </IntlProvider>\n  );\n}\n\nLanguageProvider.propTypes = {\n  locale: PropTypes.string,\n  messages: PropTypes.object,\n  children: PropTypes.element.isRequired,\n};\n\nconst mapStateToProps = createSelector(\n  makeSelectLocale(),\n  (locale) => ({\n    locale,\n  }),\n);\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LanguageProvider);\n","/**\n * app.js\n *\n * This is the entry file for the application, only setup and boilerplate\n * code.\n */\n\n// Needed for redux-saga es6 generator support\nimport '@babel/polyfill';\n\n// Import all the third party stuff\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport history from './utils/history';\nimport 'sanitize.css/sanitize.css';\n\n// Import root app\nimport App from './containers/App';\n\n// Import Language Provider\nimport LanguageProvider from './containers/LanguageProvider';\n\n// Load the favicon and the .htaccess file\n/* eslint-disable import/no-unresolved, import/extensions */\n// import '!file-loader?name=[name].[ext]!./images/favicon.ico';\n/* eslint-enable import/no-unresolved, import/extensions */\n\nimport configureStore from './configureStore';\n\n// Import i18n messages\nimport { translationMessages } from './i18n';\n\n// Create redux store with history\nconst initialState = {};\nconst store = configureStore(initialState, history);\nconst MOUNT_NODE = document.getElementById('app');\n\nconst render = (messages) => {\n  ReactDOM.render(\n    <Auth0Provider\n      domain={process.env.REACT_APP_AUTH0_DOMAIN}\n      clientId={process.env.REACT_APP_AUTH0_CLIENT_ID}\n      redirectUri={window.location.origin}\n      audience={process.env.REACT_APP_AUTH0_AUDIENCE}\n      cacheLocation=\"localstorage\"\n      // scope=\"read:current_user update:current_user_metadata\"\n    >\n      <Provider store={store}>\n        <LanguageProvider messages={messages}>\n          <ConnectedRouter history={history}>\n            <App />\n          </ConnectedRouter>\n        </LanguageProvider>\n      </Provider>\n    </Auth0Provider>,\n    MOUNT_NODE,\n  );\n};\n\nif (module.hot) {\n  // Hot reloadable React components and translation json files\n  // modules.hot.accept does not accept dynamic dependencies,\n  // have to be constants at compile-time\n  module.hot.accept(['./i18n', './containers/App'], () => {\n    ReactDOM.unmountComponentAtNode(MOUNT_NODE);\n    render(translationMessages);\n  });\n}\n\n// Chunked polyfill for browsers without Intl support\nif (!window.Intl) {\n  new Promise((resolve) => {\n    resolve(import('intl'));\n  })\n    .then(() => Promise.all([import('intl/locale-data/jsonp/en.js')]))\n    .then(() => render(translationMessages))\n    .catch((err) => {\n      throw err;\n    });\n} else {\n  render(translationMessages);\n}\n\n// Install ServiceWorker and AppCache in the end since\n// it's not most important operation and if main code fails,\n// we do not want it installed\n// if (process.env.NODE_ENV === 'production') {\n//   require('offline-plugin/runtime').install(); // eslint-disable-line global-require\n// }\n","/**\n * Create the store with dynamic reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport createReducer from './reducers';\n\nexport default function configureStore(initialState = {}, history) {\n  let composeEnhancers = compose;\n  const reduxSagaMonitorOptions = {};\n\n  // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) { composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}); }\n\n    // NOTE: Uncomment the code below to restore support for Redux Saga\n    // Dev Tools once it supports redux-saga version 1.x.x\n    // if (window.__SAGA_MONITOR_EXTENSION__)\n    //   reduxSagaMonitorOptions = {\n    //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n    //   };\n    /* eslint-enable */\n  }\n\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n\n  // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  const store = createStore(\n    createReducer(),\n    initialState,\n    composeEnhancers(...enhancers),\n  );\n\n  // Extensions\n  store.runSaga = sagaMiddleware.run;\n  store.injectedReducers = {}; // Reducer registry\n  store.injectedSagas = {}; // Saga registry\n\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n  /* istanbul ignore next */\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(createReducer(store.injectedReducers));\n    });\n  }\n\n  return store;\n}\n","import createAuth0Client from '@auth0/auth0-spa-js';\n\nconst getToken = (authSession) => authSession.getTokenSilently();\n\nexport default function getAuthToken() {\n  return createAuth0Client({\n    domain: process.env.REACT_APP_AUTH0_DOMAIN,\n    client_id: process.env.REACT_APP_AUTH0_CLIENT_ID,\n    audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n    cacheLocation: 'localstorage',\n  }).then(getToken);\n}\n","import axios from 'axios';\nimport getAuthToken from './getAuthToken';\n\nexport const baseURL = process.env.REACT_APP_SERVER;\n\nexport const getPrivateRoute = async () => axios.create({\n  baseURL: `${baseURL}/api/private`,\n  headers: {\n    Authorization: `Bearer ${await getAuthToken()}`,\n  },\n  timeout: 10000,\n});\n\nexport const publicRoute = axios.create({\n  baseURL: `${baseURL}/api`,\n  timeout: 10000,\n});\n\n// export default axiosInstance;\n"],"sourceRoot":""}